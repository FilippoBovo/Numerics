(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    344858,       6415]
NotebookOptionsPosition[    343285,       6358]
NotebookOutlinePosition[    343640,       6374]
CellTagsIndexPosition[    343597,       6371]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Numerical solution of the Yang-Yang model", "Title",
 CellChangeTimes->{{3.620457153457513*^9, 3.620457177555365*^9}, {
  3.6726653841756077`*^9, 3.672665391272469*^9}}],

Cell[TextData[{
 "In this section all the equations are referred to \[OpenCurlyDoubleQuote]",
 StyleBox["Yang, Yang - Thermodynamics of a One-dimensional System of Bosons, \
J. Math. Phys., 10, 1115, year 1969",
  FontSlant->"Italic"],
 "\[CloseCurlyDoubleQuote], abbreviated as \[OpenCurlyDoubleQuote]YY\
\[CloseCurlyDoubleQuote]."
}], "Text",
 CellChangeTimes->{{3.620456931519815*^9, 3.620457004877939*^9}, {
   3.620457056326359*^9, 3.6204571457289143`*^9}, 3.672665379828094*^9}],

Cell[CellGroupData[{

Cell["Method for solving Fredholm equations of the Second kind", "Section",
 CellChangeTimes->{{3.6115552369993*^9, 3.611555239663052*^9}, {
  3.620385366947278*^9, 3.620385376372356*^9}, {3.6203854343016233`*^9, 
  3.620385446136612*^9}, {3.620479284862576*^9, 3.620479286492154*^9}, {
  3.6204817035523863`*^9, 3.620481705998563*^9}}],

Cell[TextData[{
 "This method is taken from \[OpenCurlyDoubleQuote]",
 StyleBox["S. Rahbar and E. Hashemizadeh, A Computational Approach to the \
Fredholm Integral Equation of the Second Kind",
  FontSlant->"Italic"],
 "\[CloseCurlyDoubleQuote] in \[OpenCurlyDoubleQuote]",
 StyleBox["Proceedings of the World Congress on Engineering 2008 Vol II WCE \
2008, July 2 - 4, 2008, London, U.K.",
  FontSlant->"Italic"],
 "\[CloseCurlyDoubleQuote], ISBN:978-988-17012-3-7.\n\nThis method finds the \
numerical solution to the integral equation\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"g", "(", "x", ")"}], "+", " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "a", "b"], 
      RowBox[{
       RowBox[{"K", "(", 
        RowBox[{"x", ",", "y"}], ")"}], 
       RowBox[{"f", "(", "y", ")"}], 
       RowBox[{"\[DifferentialD]", "y"}]}]}]}]}], TraditionalForm]],
  CellChangeTimes->{{3.6203854583221197`*^9, 3.620385595124981*^9}, {
   3.620392820530099*^9, 3.620392826910678*^9}, {3.62039789169037*^9, 
   3.620397897446702*^9}, {3.620455171702137*^9, 3.620455180983314*^9}}],
 "\n"
}], "Text",
 CellFrame->{{0, 0}, {0.5, 0}},
 CellChangeTimes->{{3.620397026212449*^9, 3.620397092344181*^9}, {
   3.62039715902177*^9, 3.620397163066226*^9}, 3.6203971940255547`*^9, {
   3.620397282631509*^9, 3.6203973282703876`*^9}, {3.620455372583241*^9, 
   3.62045540664777*^9}, {3.620455442074275*^9, 3.620455462322323*^9}, {
   3.620457034021098*^9, 3.620457035934676*^9}, {3.6204580055415688`*^9, 
   3.620458005877808*^9}, {3.620481698605481*^9, 3.620481698605596*^9}, {
   3.620541138653984*^9, 3.620541138720511*^9}}],

Cell[TextData[{
 StyleBox["BoundFunction",
  FontWeight->"Bold"],
 ": This module takes the function f as input and as output gives the \
function f in the interval [a,b] and zero otherwise.\n\n",
 StyleBox["Fredholm2ndKind",
  FontWeight->"Bold"],
 ": Gives the numerical solution of the Fredholm equation in the interval \
[a,b]. This takes as input the extremes of integration a and b, the kernel \
K(x,y), g(x) and the number, n, of subdivision of the integration interval \
which is used in the numerical solution. (see ",
 ButtonBox["this link",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://mathematica.stackexchange.com/questions/11594/integral-\
equation-numerical-solution-with-ndsolve"], None},
  ButtonNote->
   "http://mathematica.stackexchange.com/questions/11594/integral-equation-\
numerical-solution-with-ndsolve"],
 ")\n\n",
 StyleBox["Fredholm2ndKindOut",
  FontWeight->"Bold"],
 ":  Gives the numerical solution of the Fredholm equation in the interval \
[c,d] outside of [a,b].This takes as input the extremes of integration a and \
b, the kernel K(x,y), g(x), the number, n, of subdivision of the integration \
interval [a,b] which is used in the numerical solution, the extreme of \
integration c and d of the interval outside [a,b] and the number of \
subdivisions of [c,d]."
}], "Text",
 CellChangeTimes->{{3.620478778215102*^9, 3.620478882793809*^9}, {
  3.620480851933937*^9, 3.620480857193318*^9}, {3.620480999015538*^9, 
  3.620481014605266*^9}, {3.6205411411306562`*^9, 3.6205411412189903`*^9}, {
  3.620646723578123*^9, 3.620646983813792*^9}, {3.67259496649566*^9, 
  3.672595005143407*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BoundFunction", "[", 
     RowBox[{"f_", ",", "a_", ",", "b_"}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Function", "[", "\[IndentingNewLine]", 
     RowBox[{"Piecewise", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.", ",", 
          RowBox[{"#", "<", "a"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"0.", ",", 
          RowBox[{"#", ">", "b"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"f", "[", "#", "]"}], ",", "True"}], "}"}]}], "}"}], "]"}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "Fredholm2ndKind", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"Method", "\[Rule]", "Automatic"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Fredholm2ndKind", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a_", ",", "b_", ",", "k_", ",", "g_"}], "}"}], ",", 
      RowBox[{"n_", "?", "IntegerQ"}], ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "step", ",", "SI", ",", "GI", ",", "KMatrix", ",", "W", ",", "DMatrix",
         ",", "f", ",", "deltaX", ",", "delta", ",", "fI", ",", "ftemp"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"step", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b", "-", "a"}], ")"}], "/", "n"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"SI", "=", 
        RowBox[{"Range", "[", 
         RowBox[{"a", ",", "b", ",", "step"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"GI", "=", 
        RowBox[{"g", "/@", "SI"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"KMatrix", "=", 
        RowBox[{"Outer", "[", 
         RowBox[{"k", ",", "SI", ",", "SI"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"W", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"step", "/", "2"}], "}"}], "~", "Join", "~", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"step", ",", 
           RowBox[{"n", "-", "1"}]}], "]"}], "~", "Join", "~", 
         RowBox[{"{", 
          RowBox[{"step", "/", "2"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"DMatrix", "=", 
        RowBox[{"DiagonalMatrix", "[", "W", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"deltaX", "[", 
         RowBox[{"x_", "?", "NumericQ"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"W", ".", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"k", "[", 
              RowBox[{"x", ",", "#"}], "]"}], "&"}], "/@", "SI"}], ")"}]}], 
         "-", 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"k", "[", 
            RowBox[{"x", ",", "y"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", "a", ",", "b"}], "}"}]}], "]"}]}]}], ";", 
       RowBox[{"delta", "=", 
        RowBox[{"deltaX", "/@", "SI"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fI", "=", 
        RowBox[{"LinearSolve", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"IdentityMatrix", "[", 
            RowBox[{"n", "+", "1"}], "]"}], "+", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"DiagonalMatrix", "[", "delta", "]"}], "-", 
             RowBox[{"KMatrix", ".", "DMatrix"}]}], ")"}]}], ",", "GI"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"f", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"OptionValue", "[", "Method", "]"}], "===", 
           "NoInterpolation"}], ",", "\[IndentingNewLine]", "fI", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"BoundFunction", "[", 
           RowBox[{
            RowBox[{"Interpolation", "[", 
             RowBox[{"Transpose", "@", 
              RowBox[{"{", 
               RowBox[{"SI", ",", "fI"}], "}"}]}], "]"}], ",", "a", ",", 
            "b"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", "f"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Fredholm2ndKindOut", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "k_", ",", "g_"}], "}"}], ",", 
     RowBox[{"n_", "?", "IntegerQ"}], ",", 
     RowBox[{"{", 
      RowBox[{"c_", ",", "d_"}], "}"}], ",", 
     RowBox[{"m_", "?", "IntegerQ"}], ",", 
     RowBox[{"fIni_:", "True"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fInTempi", ",", "stepIn", ",", "SIni", ",", "stepOut", ",", "SOuti", 
       ",", "GOuti", ",", "KMatrixOut", ",", "fOuti"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Variable", " ", "inside", " ", "the", " ", 
       RowBox[{"interval", " ", "[", 
        RowBox[{"a", ",", "b"}], "]"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"stepIn", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "-", "a"}], ")"}], "/", "n"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SIni", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"a", ",", "b", ",", "stepIn"}], "]"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"i", "-", 
        RowBox[{
        "th", " ", "component", " ", "of", " ", "the", " ", "interval"}]}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"fInTempi", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"fIni", "===", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Fredholm2ndKind", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a", ",", "b", ",", "k", ",", "g"}], "}"}], ",", "n", ",", 
           RowBox[{"Method", "\[Rule]", "NoInterpolation"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "fIni"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Variable", " ", "and", " ", "functions", " ", "outside", " ", "the", 
        " ", 
        RowBox[{"interval", " ", "[", 
         RowBox[{"a", ",", "b"}], "]"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"stepOut", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"d", "-", "c"}], ")"}], "/", "m"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SOuti", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"c", ",", "d", ",", "stepOut"}], "]"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"i", "-", 
        RowBox[{
        "th", " ", "component", " ", "of", " ", "the", " ", "interval"}]}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"GOuti", "=", 
       RowBox[{"g", "/@", "SOuti"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"i", "-", 
        RowBox[{"th", " ", "component", " ", "of", " ", "the", " ", "g"}]}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"KMatrixOut", "=", 
       RowBox[{"Outer", "[", 
        RowBox[{"k", ",", "SOuti", ",", "SIni"}], "]"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"Matrix", " ", "form", " ", "of", " ", "k"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"fOuti", "=", 
       RowBox[{"GOuti", "+", 
        RowBox[{"stepIn", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"KMatrixOut", ".", "fInTempi"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"KMatrixOut", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "*", 
               RowBox[{"fInTempi", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"KMatrixOut", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", 
                  RowBox[{"n", "+", "1"}]}], "]"}], "]"}], "*", 
               RowBox[{"fInTempi", "[", 
                RowBox[{"[", 
                 RowBox[{"n", "+", "1"}], "]"}], "]"}]}]}], ")"}], "/", 
            "2"}]}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"BoundFunction", "[", 
       RowBox[{
        RowBox[{"Interpolation", "[", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"SOuti", ",", "fOuti"}], "}"}], "]"}], "]"}], ",", "c", 
        ",", "d"}], "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.620476066514509*^9, 3.62047607191448*^9}, {
   3.620477594017815*^9, 3.620477601699275*^9}, {3.620477636327077*^9, 
   3.620477637778434*^9}, {3.6204778398171597`*^9, 3.6204778850422983`*^9}, {
   3.620477925143426*^9, 3.620477925337302*^9}, 3.620477994641719*^9, {
   3.620478213209318*^9, 3.620478218519649*^9}, {3.620478266726776*^9, 
   3.620478268263399*^9}, {3.620478331921566*^9, 3.620478334134049*^9}, {
   3.620479648394898*^9, 3.620479675840974*^9}, {3.6204798576734133`*^9, 
   3.620479865328518*^9}, {3.620479996045188*^9, 3.6204800033329067`*^9}, {
   3.6204803410302973`*^9, 3.620480353705718*^9}, {3.620480387241764*^9, 
   3.620480391000415*^9}, {3.6204805943336897`*^9, 3.6204806075555058`*^9}, {
   3.620480642047008*^9, 3.620480713994363*^9}, {3.620481221737495*^9, 
   3.6204812661272497`*^9}, {3.62048130601933*^9, 3.6204813076904697`*^9}, {
   3.620481377469324*^9, 3.620481409574387*^9}, {3.620481586776991*^9, 
   3.620481592717753*^9}, {3.620541007716556*^9, 3.620541009747465*^9}, {
   3.6205421797916594`*^9, 3.620542182040523*^9}, {3.620554023840457*^9, 
   3.620554026495284*^9}, {3.6206259648597918`*^9, 3.620625983713524*^9}, {
   3.620626581483184*^9, 3.6206266095323*^9}, {3.620626692899693*^9, 
   3.620626701482089*^9}, {3.620626869718505*^9, 3.620626872068624*^9}, {
   3.6206269613590527`*^9, 3.620626990251835*^9}, {3.620627026113574*^9, 
   3.620627072709614*^9}, 3.620627105708633*^9, {3.620630381093821*^9, 
   3.62063038909709*^9}, {3.6206472847099457`*^9, 3.620647286195878*^9}, {
   3.620648044884432*^9, 3.620648047482171*^9}, {3.620648086065258*^9, 
   3.620648090846382*^9}, {3.6206481548166122`*^9, 3.6206481553432817`*^9}, {
   3.6206485364216623`*^9, 3.620648540381288*^9}, {3.621596027591729*^9, 
   3.621596053432393*^9}, {3.621596976281406*^9, 3.621596986661578*^9}, 
   3.6726363495988293`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Yang-Yang model:", "Section",
 CellChangeTimes->{{3.6116416125772753`*^9, 3.611641614610937*^9}, {
  3.620735822869377*^9, 3.620735832852909*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"m", "=", "0.5"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Renormalized", " ", "chemical", " ", "potential"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", "1000"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"number", " ", "of", " ", "discretization"}], "*)"}]}]}], "Input"],

Cell["\<\
These are the functions to calculate the spectrum, density of states (DOS). \
We solve the equation recursively until it converges to a selected precision.\
\
\>", "Text",
 CellChangeTimes->{{3.6726654820605707`*^9, 3.6726655160220833`*^9}, {
  3.672665556908677*^9, 3.672665615493784*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eYY", "[", 
   RowBox[{
   "\[Mu]_", ",", "t_", ",", "\[Lambda]_", ",", "a_", ",", "b_", ",", "n_", 
    ",", "precision_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "step", ",", "xi", ",", "\[Epsilon]0", ",", "\[Epsilon]0i", ",", "kc", 
      ",", "kci", ",", "kT", ",", "\[Epsilon]i", ",", "\[Epsilon]iprev", ",", 
      "converged", ",", "\[Epsilon]converged"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"converged", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"step", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "a"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xi", " ", "=", " ", 
      RowBox[{"Range", "[", 
       RowBox[{"a", ",", "b", ",", "step"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Epsilon]0", "[", "k_", "]"}], ":=", 
      RowBox[{
       RowBox[{"-", "\[Mu]"}], "+", 
       RowBox[{"k", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Epsilon]0i", "=", 
      RowBox[{"\[Epsilon]0", "/@", "xi"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"kc", "[", 
       RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
      RowBox[{"\[Lambda]", "/", 
       RowBox[{"(", 
        RowBox[{"Pi", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Lambda]", "^", "2"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"x", "-", "y"}], ")"}], "^", "2"}]}], ")"}]}], ")"}]}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"kci", "=", 
      RowBox[{"Outer", "[", 
       RowBox[{"kc", ",", "xi", ",", "xi"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"kT", "[", "\[Epsilon]_", "]"}], ":=", 
      RowBox[{"t", "*", 
       RowBox[{"Log", "[", 
        RowBox[{"1", "+", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "\[Epsilon]"}], "/", "t"}], "]"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Epsilon]converged", "[", "\[CapitalDelta]\[Epsilon]_", "]"}],
       ":=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", "\[CapitalDelta]\[Epsilon]", "]"}], "<", 
         "precision"}], ",", "1", ",", "0"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Epsilon]i", "=", "\[Epsilon]0i"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"converged", "===", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Epsilon]iprev", "=", "\[Epsilon]i"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Trapezoidal", " ", "rule", " ", "sum"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"\[Epsilon]i", "=", 
         RowBox[{"\[Epsilon]0i", "-", 
          RowBox[{"step", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"kci", ".", 
              RowBox[{"(", 
               RowBox[{"kT", "/@", "\[Epsilon]iprev"}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"kci", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1"}], "]"}], "]"}], "*", 
                 RowBox[{"kT", "[", 
                  RowBox[{"\[Epsilon]iprev", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"kci", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "n"}], "]"}], "]"}], "*", 
                 RowBox[{"kT", "[", 
                  RowBox[{"\[Epsilon]iprev", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "]"}]}]}], ")"}], "/", 
              "2"}]}], ")"}]}]}]}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"converged", "=", 
         RowBox[{"Times", "@@", 
          RowBox[{"(", 
           RowBox[{"\[Epsilon]converged", "/@", 
            RowBox[{"(", 
             RowBox[{"\[Epsilon]iprev", "-", "\[Epsilon]i"}], ")"}]}], 
           ")"}]}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "\[Epsilon]i"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gYY", "[", 
    RowBox[{
    "\[Mu]_", ",", "t_", ",", "\[Lambda]_", ",", "a_", ",", "b_", ",", "n_", 
     ",", "precision_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eYYDiscrete", ",", "eYYfunction", ",", "k", ",", "g"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"eYYDiscrete", "=", 
       RowBox[{"eYY", "[", 
        RowBox[{
        "\[Mu]", ",", " ", "t", ",", " ", "\[Lambda]", ",", " ", "a", ",", 
         "b", ",", "n", ",", "precision"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eYYfunction", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "a", ",", "b", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"b", "-", "a"}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"n", "-", "1"}], ")"}]}]}], "}"}]}], "]"}], ",", 
           "eYYDiscrete"}], "}"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"g", "[", "x_", "]"}], ":=", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "Pi", "*", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"eYYfunction", "[", "x", "]"}], "/", "t"}], "]"}]}], 
           ")"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"k", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"eYYfunction", "[", "x", "]"}], "/", "t"}], "]"}]}], 
          ")"}]}], "*", 
        RowBox[{"\[Lambda]", "/", 
         RowBox[{"(", 
          RowBox[{"Pi", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Lambda]", "^", "2"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"x", "-", "y"}], ")"}], "^", "2"}]}], ")"}]}], 
          ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Fredholm2ndKind", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "k", ",", "g"}], "}"}], ",", "n"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.611640354663026*^9, 3.61164040265746*^9}, {
   3.6116404401335897`*^9, 3.611640530493702*^9}, {3.611640573943465*^9, 
   3.611640671617311*^9}, {3.611640899298436*^9, 3.611640904519021*^9}, {
   3.611640985969193*^9, 3.6116410160624857`*^9}, {3.6116411988796053`*^9, 
   3.611641222085936*^9}, {3.611641270340275*^9, 3.611641355556923*^9}, {
   3.6116415222023478`*^9, 3.611641522598929*^9}, {3.611641698510393*^9, 
   3.6116417116807117`*^9}, {3.611641870309414*^9, 3.6116418953170137`*^9}, {
   3.61164198524081*^9, 3.6116420354256277`*^9}, {3.611642155399967*^9, 
   3.6116422297042828`*^9}, {3.6116423025291433`*^9, 3.61164232863986*^9}, {
   3.611642598014509*^9, 3.611642598202846*^9}, {3.611642896916457*^9, 
   3.611642907986734*^9}, 3.611643052317856*^9, {3.611643123025055*^9, 
   3.6116432070823193`*^9}, {3.611643296690275*^9, 3.6116433261209803`*^9}, {
   3.611643874443898*^9, 3.6116439089356318`*^9}, {3.6116439406163187`*^9, 
   3.6116439649510317`*^9}, {3.611644028019371*^9, 3.6116440637362127`*^9}, {
   3.611644730680982*^9, 3.611644755642276*^9}, {3.611644845904614*^9, 
   3.61164488625706*^9}, {3.6116449360417557`*^9, 3.6116449406097593`*^9}, {
   3.6116449783314247`*^9, 3.611644981838231*^9}, {3.611645053652117*^9, 
   3.611645075642686*^9}, {3.6116452283644533`*^9, 3.611645231165831*^9}, {
   3.611645269295608*^9, 3.611645272969954*^9}, {3.611645372568808*^9, 
   3.611645429455617*^9}, {3.6116454624133244`*^9, 3.611645484383459*^9}, {
   3.6116457144839487`*^9, 3.611645853995326*^9}, {3.6116459428276663`*^9, 
   3.611645997580596*^9}, {3.611652953826956*^9, 3.611652975356257*^9}, {
   3.611653049495078*^9, 3.6116530545847597`*^9}, {3.611653124918868*^9, 
   3.611653151311928*^9}, {3.611654139371006*^9, 3.611654226523841*^9}, {
   3.6116545981860247`*^9, 3.61165461750069*^9}, 3.611655956799118*^9, {
   3.611656015286892*^9, 3.6116560175789633`*^9}, {3.611656164953681*^9, 
   3.6116561711566143`*^9}, {3.6116562177235117`*^9, 
   3.6116562506718407`*^9}, {3.6117279080201073`*^9, 3.611727945691263*^9}, 
   3.611728034583541*^9, {3.611729257870891*^9, 3.611729282215911*^9}, {
   3.611729324709515*^9, 3.611729358932954*^9}, {3.611736351758819*^9, 
   3.611736402349845*^9}, {3.611736442671198*^9, 3.611736570438724*^9}, {
   3.612262697507269*^9, 3.612262700410911*^9}, {3.620663929406283*^9, 
   3.620663963066985*^9}, {3.620664618543935*^9, 3.6206646203147907`*^9}, {
   3.620664653662739*^9, 3.620664654660881*^9}, 3.620665603871608*^9, {
   3.6206664814565763`*^9, 3.620666684983276*^9}, {3.620666715214529*^9, 
   3.62066671625874*^9}, {3.620726788964118*^9, 3.620726831011216*^9}, {
   3.620726886330956*^9, 3.6207270278779917`*^9}, {3.62072706277774*^9, 
   3.620727162710559*^9}, {3.620727345243293*^9, 3.62072736819293*^9}, {
   3.620727402179975*^9, 3.6207274519942627`*^9}, {3.620727536485059*^9, 
   3.6207275463220987`*^9}, {3.620727903641409*^9, 3.6207279049798603`*^9}, {
   3.6207279810208797`*^9, 3.620728001630924*^9}, {3.6207286770231543`*^9, 
   3.620728698671877*^9}, {3.620728842974237*^9, 3.620728848155995*^9}, 
   3.6207295217380667`*^9, {3.620729673475298*^9, 3.620729673646029*^9}, {
   3.620729713929842*^9, 3.620729746650735*^9}, {3.620729838311076*^9, 
   3.620729838469108*^9}, {3.6207298772377567`*^9, 3.6207298799250193`*^9}, 
   3.620729975541504*^9, 3.6207300102254047`*^9, 3.6207304666639023`*^9, {
   3.6207305019392977`*^9, 3.620730542556306*^9}, {3.620730905908679*^9, 
   3.620730994552597*^9}, {3.6207310298208942`*^9, 3.620731112668536*^9}, {
   3.620731231482501*^9, 3.620731239690042*^9}, {3.6207313195106564`*^9, 
   3.620731320770273*^9}, {3.620731386730736*^9, 3.620731430989809*^9}, {
   3.620731468857423*^9, 3.620731509322176*^9}, {3.6207315657879553`*^9, 
   3.620731573898406*^9}, {3.620731612835528*^9, 3.6207316877268333`*^9}, {
   3.620731789995391*^9, 3.620731793150114*^9}, {3.620731877269422*^9, 
   3.6207319110411463`*^9}, 3.620731952622698*^9, {3.620731987441894*^9, 
   3.620732022406427*^9}, 3.620732212730328*^9, 3.620734282856864*^9, {
   3.620734447513959*^9, 3.6207345291723948`*^9}, {3.6207345612736883`*^9, 
   3.620734586639826*^9}, {3.6207349660431833`*^9, 3.620734970303072*^9}, {
   3.62073512563955*^9, 3.620735185971635*^9}, {3.6207352275995693`*^9, 
   3.620735232653599*^9}, {3.620735275282679*^9, 3.620735369457885*^9}, {
   3.620735422288993*^9, 3.6207354409296513`*^9}, {3.6207354913365707`*^9, 
   3.6207355069790707`*^9}, {3.6207358139735537`*^9, 3.620735818145471*^9}, {
   3.6209855183705*^9, 3.6209855205056257`*^9}, {3.620987532747799*^9, 
   3.620987629961296*^9}, {3.62098767901201*^9, 3.620987886654737*^9}, {
   3.6209885571519127`*^9, 3.6209885867803926`*^9}, {3.620988622185238*^9, 
   3.62098862300462*^9}, {3.621068021048416*^9, 3.6210680256771584`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plots:", "Section",
 CellChangeTimes->{{3.620736627809449*^9, 3.620736630799176*^9}, {
  3.6209865441992617`*^9, 3.6209865468480873`*^9}}],

Cell[CellGroupData[{

Cell["Spectrum:", "Subsection",
 CellChangeTimes->{{3.620986557694192*^9, 3.620986560079363*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PlotSpectrumComparision", "[", 
    RowBox[{"a_", ",", "b_", ",", " ", "t_"}], "]"}], ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eYYDiscrete1", ",", "eYYfunction1", ",", "eYYDiscrete2", ",", 
       "eYYfunction2", ",", "eYYDiscrete3", ",", "eYYfunction3"}], "}"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Yang", "-", "Yang"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"eYYDiscrete1", "=", 
       RowBox[{"eYY", "[", 
        RowBox[{
        "m", ",", " ", "t", ",", " ", "0.01", ",", " ", "a", ",", "b", ",", 
         "n", ",", 
         RowBox[{"N", "[", 
          RowBox[{"1", "/", "n"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eYYfunction1", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "a", ",", "b", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"b", "-", "a"}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"n", "-", "1"}], ")"}]}]}], "}"}]}], "]"}], ",", 
           "eYYDiscrete1"}], "}"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eYYDiscrete2", "=", 
       RowBox[{"eYY", "[", 
        RowBox[{
        "m", ",", " ", "t", ",", " ", "0.1", ",", " ", "a", ",", "b", ",", 
         "n", ",", 
         RowBox[{"N", "[", 
          RowBox[{"1", "/", "n"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eYYfunction2", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "a", ",", "b", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"b", "-", "a"}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"n", "-", "1"}], ")"}]}]}], "}"}]}], "]"}], ",", 
           "eYYDiscrete2"}], "}"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eYYDiscrete3", "=", 
       RowBox[{"eYY", "[", 
        RowBox[{
        "m", ",", " ", "t", ",", " ", "1.", ",", " ", "a", ",", "b", ",", "n",
          ",", 
         RowBox[{"N", "[", 
          RowBox[{"1", "/", "n"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eYYfunction3", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "a", ",", "b", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"b", "-", "a"}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"n", "-", "1"}], ")"}]}]}], "}"}]}], "]"}], ",", 
           "eYYDiscrete3"}], "}"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "Plot", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"eYYfunction1", "[", "x", "]"}], ",", " ", 
          RowBox[{"eYYfunction2", "[", "x", "]"}], ",", " ", 
          RowBox[{"eYYfunction3", "[", "x", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "a", ",", "b"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "35."}], ",", "5."}], "}"}]}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", "\"\<x\>\"", "}"}]}], ",", 
        RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0.01", ",", "0.1", ",", "1"}], "}"}]}], ",", " ", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"\"\<t = \>\"", " ", "<>", 
          RowBox[{"ToString", "[", "t", "]"}]}]}], ",", " ", 
        RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotSpectrumComparision", "[", 
  RowBox[{
   RowBox[{"-", "1.5"}], ",", "1.5", ",", "0.1"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotSpectrumComparision", "[", 
  RowBox[{
   RowBox[{"-", "1.5"}], ",", "1.5", ",", "1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotSpectrumComparision", "[", 
  RowBox[{
   RowBox[{"-", "1.5"}], ",", "1.5", ",", "1.4"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6207366883156757`*^9, 3.620736770497986*^9}, {
   3.6207368029286947`*^9, 3.6207368353754807`*^9}, {3.620736866885721*^9, 
   3.620736867035837*^9}, {3.6207369034263153`*^9, 3.62073690367872*^9}, {
   3.620736939992519*^9, 3.620736940676154*^9}, {3.620737151650104*^9, 
   3.620737169760029*^9}, 3.620737201003812*^9, {3.6207372310653267`*^9, 
   3.620737267877941*^9}, {3.620738666412094*^9, 3.6207386694839993`*^9}, {
   3.62098447454818*^9, 3.620984550440926*^9}, {3.620985709264975*^9, 
   3.620985783211986*^9}, {3.6209859024227877`*^9, 3.620985908754682*^9}, {
   3.620986001526363*^9, 3.620986002083252*^9}, {3.6209860564374847`*^9, 
   3.6209860623906507`*^9}, 3.620986580226358*^9, {3.620988668356933*^9, 
   3.620988673228591*^9}, {3.621067981837726*^9, 3.621067995301605*^9}, {
   3.621143256000033*^9, 3.621143301169374*^9}, 3.621143957559039*^9, 
   3.6211439912851353`*^9, {3.6211440489994926`*^9, 3.621144065211932*^9}, {
   3.6211443444509373`*^9, 3.621144364215157*^9}, {3.621144488215498*^9, 
   3.621144488462508*^9}, {3.621144724169161*^9, 3.6211447531900187`*^9}, {
   3.621157813301835*^9, 3.621157817522253*^9}, {3.621157917170454*^9, 
   3.621157917262928*^9}, 3.6211579540810337`*^9, {3.6211581159148827`*^9, 
   3.621158116065838*^9}, 3.621158155245117*^9, 3.621158227778339*^9, 
   3.621166407943411*^9, {3.62143500291331*^9, 3.621435004399117*^9}, {
   3.6215893076494493`*^9, 3.621589419986023*^9}, {3.621589479540288*^9, 
   3.6215894860077143`*^9}, {3.621589516859622*^9, 3.62158954862155*^9}, 
   3.6215901379093313`*^9, {3.621590173222559*^9, 3.621590173638376*^9}, 
   3.62159025690802*^9, {3.621590422141827*^9, 3.62159042871593*^9}, 
   3.6215909239649973`*^9, {3.6215911382888613`*^9, 3.621591155395554*^9}, 
   3.621591702875173*^9, {3.621591795939742*^9, 3.621591800515785*^9}, {
   3.621591839151663*^9, 3.6215918427816*^9}, 3.62159224012809*^9, 
   3.621592532138278*^9, {3.621592564459422*^9, 3.621592576162365*^9}, {
   3.6215945375048227`*^9, 3.62159454075522*^9}, {3.621597020420979*^9, 
   3.621597025253605*^9}, {3.6215970756702023`*^9, 3.621597078772839*^9}, {
   3.621597191560601*^9, 3.621597202949356*^9}, {3.6216000222713747`*^9, 
   3.6216000253986073`*^9}, {3.672665527021409*^9, 3.672665547024138*^9}, {
   3.6726683422430077`*^9, 3.672668422639997*^9}, {3.672668481665354*^9, 
   3.672668484387621*^9}, {3.6726685512632933`*^9, 3.672668577256472*^9}, {
   3.672668656002981*^9, 3.672668657455615*^9}, {3.672668706686181*^9, 
   3.672668708628584*^9}, {3.67266875737704*^9, 3.6726687714409637`*^9}, {
   3.672668836748827*^9, 3.6726689419637117`*^9}, 3.6726689725959053`*^9, {
   3.672669009275383*^9, 3.672669010756228*^9}, {3.672669047929777*^9, 
   3.672669052456272*^9}, {3.672669117683075*^9, 3.672669136196423*^9}, {
   3.672669195925693*^9, 3.6726692038523893`*^9}, {3.672669326705249*^9, 
   3.672669331349926*^9}, {3.672669363006124*^9, 3.6726694268980103`*^9}, {
   3.672669469171681*^9, 3.672669491344689*^9}, {3.672669586593061*^9, 
   3.672669586682832*^9}, {3.672669887018882*^9, 3.672669895958601*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
+USq4hOfs9+YiTSju96vm3h51HAyrHp1JrgJtbIezhWoqeHBYF0mr0wjUt/I
/6zwgxp2PDKRW8nTiKJlGSqfE9WwQM8za+eJBvRyc8/2rI9q+KRYMmMqpQFp
Svx+6P9ZDafEL07U725AyWOzpWub1fDjrOh+T6lvSC/x4MOxf2p4Rf14zSrJ
OnQbfcyQ0QVsnVjL9XtlHRqZP6YlcB3wsGvKqbrRWiQlPVQwdxNwhZJZhU9K
LeLjaael3gP8KvE3FparRReuF1d0OgHmefErf8/RGqQod8lYIQYw/5HReK2b
VUj30emGxV+AXwpWDu8/WoVCONSvKU8BniXjJfklq1Dzn/YgGwbg9kTjD52j
lehn9tzOHwuA3wuOhN8yr0TSgWZlBzgJvIkx9O7x0wqk4udySVmQwJJJA8+D
wsrQDhWNjnPyBN7mtcWD7lCGVjux+aseJPBW82vep/XKkK33WUnpQwQWVWgO
ZQmXIXZJgYqlIwTmwzjbIKgUdQr0suzVCcz+PWpkp99XtMnjQU/3BQL/K+ye
ePboK1LQTy4P0SbwUoTQ9PfzX9GWvCgnHR0Cz9/x+efJ+xWNdhno4SsEJunO
QnQvjE7xJJRZGhAYrSv2N/8PoXfnh1Yo3ydwYbt81Lb6EkTmLaGKBwTOC0tN
bfEsQSMpH05qmhM4XSqsXJGrBC0m6GRpWxI4Ehzm/nF8QS53hBYVbQnsZHFY
z2e+EC11VW8wdiXw4cYc8U9DeeiGurL15SACD3GVyeYn5CHT+IAi4/cE9lZv
Vi65l4d26Lvtswqm8typy/X0XPTR9mm4WyiVh+/0/LWYg3aPN7l5RFL5veDp
bQLZyNvT8NGqBCqPTViW6sxCfQuND35TPtybs3ZfaBbarrnvXU0ilV9o3qm6
LQuFayrceJ5MYKVD3NevyWSiE0Wqgw1pBN6yZt5d8nU62v/0pd9AFoEfOwl8
OLAuHTlvv7X5fTaBq+n7iyDwI1K6sKrxTA6Vd9yjX/+QhmqFidSEXCqP7b4S
8DkFPTWSVVEroOZTaN4yBlJQx0N5jl7KVp4Cbz5VJKNk7210u89UbqmJ65uT
kDDvSdWkQgJbq6FdnOMJqPTdYuJwMYFrM7vV+R8lIP5sy5gHXwgstmNeX3wu
HnmUry5jUK7lOeCnyhGPrqSoPZkpofKumAUb0Vi0zt0hpg1T7zuH+F9GxyCu
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
6GklC/7v/gP+//7jfwDWOVQ+
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
F/7v/x3+///9fwAiwOc6
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
cxpN
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"t = 0.1\"", TraditionalForm], 
     PlotRange -> {{-1.4999999387755103`, 1.4999999387755103`}, {-35., 5.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"0.01`", "0.1`", "1"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.621597026386712*^9, 3.621597062381982*^9}, 
   3.6215970942005787`*^9, 3.6215971594386063`*^9, 3.6215972545653477`*^9, 
   3.621600075515428*^9, 3.672665625375456*^9, 3.672665684599485*^9, 
   3.6726684445340548`*^9, 3.672668503816567*^9, 3.672668573630797*^9, 
   3.672668611611923*^9, 3.672668678316331*^9, 3.67266872679389*^9, 
   3.672668789293173*^9, 3.672668893178192*^9, 3.672668931139357*^9, 
   3.672668962082142*^9, 3.6726690296725607`*^9, 3.6726691559015427`*^9, 
   3.672669350900877*^9, 3.672669383703483*^9, {3.67266943940836*^9, 
   3.672669457059222*^9}, 3.67266951456876*^9, 3.6726696054191236`*^9, 
   3.672669914130128*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
Z7+R9aoMNvzf/xD4//8h/wNEs2UI
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"t = 1\"", TraditionalForm], 
     PlotRange -> {{-1.4999999387755103`, 1.4999999387755103`}, {-35., 5.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"0.01`", "0.1`", "1"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.621597026386712*^9, 3.621597062381982*^9}, 
   3.6215970942005787`*^9, 3.6215971594386063`*^9, 3.6215972545653477`*^9, 
   3.621600075515428*^9, 3.672665625375456*^9, 3.672665684599485*^9, 
   3.6726684445340548`*^9, 3.672668503816567*^9, 3.672668573630797*^9, 
   3.672668611611923*^9, 3.672668678316331*^9, 3.67266872679389*^9, 
   3.672668789293173*^9, 3.672668893178192*^9, 3.672668931139357*^9, 
   3.672668962082142*^9, 3.6726690296725607`*^9, 3.6726691559015427`*^9, 
   3.672669350900877*^9, 3.672669383703483*^9, {3.67266943940836*^9, 
   3.672669457059222*^9}, 3.67266951456876*^9, 3.6726696054191236`*^9, 
   3.6726699313672867`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwt2Xk0Vd/7B3BkCpHMypQiY4mE4rkXSZlKRVSolJIMpTKlRCpKiBIZMkch
c4q9ZUySsYj6kCnTde/FPYryO7+1vn/d9Vrvs86+65zn2ftZ6yic8rI9w8HG
xpbKzsb2/7+nC6NnV1YI1G0df+F8LgvwQxmlXcsEuuCvcZDzFAs2eOcdv7pI
oHcKPLMtG1jwZVv9h2k6gb5gwTVsTxZgu/BBti0zBJp/zjnJZr8ADxnfdU9P
EOi/no96tlILYF5MZPQNEchy9HJ3XfY8ZMWGfRP9QSDc2Fif5zMPHJeFhQ98
I5BFSMXsDpiHt9pqwY2dBHormzlADM2BpGhlKftnAsnQ9tkWls+B77zp1O6P
BCqcZI46P5gDzTKnoyV1BPKp6GKIUeYgIn4qioYI9NDinWP1+jkYv+LXoPKO
QKcu9LmgRSak6cZuTysl0JPwD3yny5kgUtkg8CCLQMqHea22GDLBO8HWpPk5
gdbQ1r1qkWdCq99//qtSCOQ6ISsuzsWEcP3fY/6PCaS6DvhPfmbAYpV67dk7
BOobfn2k7jwDDie9IZ6HEmgyedDz+EEGvA400/x+g0BZawRWLPQZ4L7bJemQ
H4G+8TW8luFjwPfqR1co5wnE6ruUSSugw3v8R0XagkDH37TU8XDQ4X5jc+wn
QQIFXh+8ORk0A9+UqekVfATa+Slcx9V2Brbce/P6OTeBcksihZaVZ6DBIq/9
yj8WipY2S7/ZNQ3/2iMFZWks9Gqvl0Gx2jT49FtHeH5iIdFFG+6c/ybBjt4d
InSfhQwCz1f12PwCeekh74OrWeiys02Zg+4weO8+dFBFbAHx3Ll4sm2wE1xy
WGYfN8+jzobLOrfZEtE764Brihvn0FAgC3089w3F1e/Z4ig7h4zNp433tH5D
Fw2E+6Kl59A9r3P8y1v7kaxSrsG/dXNIouLRWcXFfnTjb8/f3lVzaPixx4xb
5Hdk/FIrLGqUiY7V/AiQdx5Ezasnon/nMlFJkmN85sthlHajlLoti4mOc787
U/tzGPkv3GCefc5E0+LtF7mlRpDqkPjh7qdM9Lrz8T2+8BEUWWkqURjBRNGa
d1S4To0ia7e0ZFcPMrfIYZfaOI666u3zPm9lIiKmnZLSMIlS3grqlKkx0QGv
B6EPuKfQueKG6kRlJvJDj/683TuFllO1O87IMZHjf5yifS1TaFOg0OKSIBNV
+MncU+qeRr5aTXu20BgoTU9TP2+OhkRTdIduvmSgW3MTlC9lDPQjbsb9bC4D
OdV+r2d9Y6DcyMx5i0wGWurJ8TJhY6Ld/ut4JZ4xkPdTX4PTFkzkepim+SqS
gdpkVCktw0xUypcd1OfOQBGSXodfyMyjI9fEJLerMJD/hH5H0hsWMtZWaFHd
zECN+09fChlhIc1Z9SBFBQY6ZhwUkCFEIF4300FRKQb6RcTYpJ4lUJXd5VyC
l4EslsOk70ksIlndDr3qX3SkuuS99v3t32hs/r6DeS4d9RA7Nos/XUadRQn8
1Ew6OrKmd5jZuoyQR2a1fhod2R36+GYT+1+UMPJWQS2BjgRvbrGJdP+L9ndP
Tqy5S0cLR0+EXqf+Q4Ul5gFdbnREybnE48rGhv0ucSY5KdNR1RK2mh5lx2nx
UsnPFOno6GXmPG0VB26q1Ez9JkdHyVyhZzdt5MDiK0cz7CTpiO1F5kkVZw5c
Gvkq33o1He1eeT2Z08+BB/e98rv+ZRZ5OPqL9v1YhT8XHHxr6DSLurCKlYQw
N5ZdCERv7GZR9fJS9H5dbuyxK7tuh80sem/reqLmGDfma/7zUYMyi/7bw7P9
fA43NhvKGJDZOIv2nrMZ+kLlwTUirL9/R2kob2jPgFsoLy7wS6TUXKQh0w1r
hVp38eNBnMR6coaGJGIl4nMu8uN1q5Nf+pygoe3PYnz7U/nxtaepkputaEhh
r4i9FZcAplRl0iPVaQhz71U62S2Au5YK0hymZtAwUTbmHyqIF4Pr2BbOzSCw
KHmkKiKMVZvqy9tcZlBZf+nHJi1hfFyo0SP36Ax669naGntAGNemNvceM59B
P7Ny5l5HCeMI/KnovfIMiqnyHFy3Zh2W4eh1iR6bRplC9n/2rxPBxrensZrr
NBocrfyYZSiGJ5PYJKKPTyOhJonm485iOLZY9OL84Wm0iie/emeIGB7+b7dU
9Z5pJHUjfuhogxgOM3jgY608jYKt7UeNbcRxw6zGRp/JKWQ/3hMdcV4Cmzt6
hZZ7TyEb7n2GvuVS2Horcw/1+iSKPvH1l2qWLE5yd1yYTP2F9KqClZqSN2Ek
GyrNnjiGaJJCgUkVqtjR29kUlY8gvdoJ7hLDbfijwfLwRN5PpJuc0WRkpY2D
Hy+9ys0dRDOiQkoSqrr4oNyJ37Kx39FoQdhRxRw9fGiV6a2GkD60s2fk9N71
u7DpxljRd+U9SFLh4NBNBUMc7nTP1iK7By1s9RnPUzHEHxJvRn+L70GPXSyi
P2sZYmsRL4Hfvj1Io+Lwe15jQ3yU05JTV7sHXdef8zY4ZYgvjHHNFxZ2I7s/
F82fPjfEsXn+XRm5XWizfT7eucEID20/GRuZ2IEelTiVxbEBLgjN93GL6EBX
Exfv6/MADuheOGAS0IGU+Adae9cAFrkaIbTk0IGaOMpvcK8HvOdNyX13qQ60
9fDFe7I7AL8A7jv7EtpRb6IKHc4B/plgRwiqf0b3WtovG7UADjSYKmvk/4yk
T+N0jXbAogM3fIOn2tByV4igxBfAZnIvGDN5bcgenX3SOwQ4L2tpqlWlDfV0
fLEQ/w34UnHaYITyJ7SGV+ixoQgFr2qd/MCt+BHpy/Qb+RhRsG9OC+8E50cE
nyIHflAoeORW3t6PYy0ox+DP+D4TCm7Qd294mNeCvpYeMJM0p+A7ORNYcnsL
iiPyRR8fpGD+0F8VqtQPqN3yUoKYKwWLGIxlWTs3ocomcFS4Q8FhYo0j26hN
6HZy13+77lHwPD1LUUSxCZ0NF288FEnBPTlnnn8da0ROv3RKAh9S8BOx0Wcu
no1o1TUPrpdPKHg9Y/jRpesNyOhrsV5UDgUr5g6FPE6qQ0opSR52DRQsHylz
dzagDkUu9l8ybqJgWU+HKHPHOiT4l89e7QMFS+t0JP6RrEOP5p5XzLVS8DqM
S5wev0fyFm1tTt0UzN6bOqoUU4tU1NXZUn5S8L+q/qkb3rXoFadnhf0IBS8n
SzB7bWrRoEaymeAYBS+efvgvQrAWGSW7TPlMUDB9NlhiNhIj7l/VpiJ0CkZC
72I91yAkKhY+Vb1MwVU92qnyrTWI9/fQouk/Ci5Pys/vjKhBohwDvc0rFFyg
nFSvy1uDFjeeF2rioOIUCGD946hG3L4XrJN5qTjIS8/x4WIVynip1VkkQsV6
n0sViobLESvvINclZSoe5q3TrMguR1tSDVtubKHiKOOOXTXny9G+Xc/eR6iQ
ednMkdbZMjT77a9lghqZP1OK+LVUirKou+titpL5+QSmvGgJsjgsJfRPl8wz
sleUvxaj+Hc2rB87yfW+lwpsTSxGEb+MBav1yPxAh5KhfDF6XNf62duAivV3
8h1zUH+N8pR2xZcbUrHM6sVwxXsFaDr6z+q3JlR8KUj0uZZQAQpYNTblaUrF
zbPb3kL8KxR632FZbg+Zfzk/e+z5S7Se1zXX34zMM/rt497koadvKlT491Gx
rMSiTzrkodn0rKBc0pcjRO8XNbxALg3af433k7mPFW7tyEVDgrXhXhZU7GuE
tnBNZqPSQ62V2VZU3PK631jEOxtZyfRf0bCmYrnNi8cVWFnISLPa+TXpFn6t
GEOOLHRrdeabIhsy70v/fUU6A+VvjQl9cJC8nyUSCUtLR/Kvvmb+Jd2C+jVi
ldLRZJ85092WzLNFTxVsf45kfh8TNjxExXHjAvGf4lOQLFg7ocNUPCh+7UdJ
djKynacpShyhYjWzIeXEimeI+56Dlgfp95llVWf7EhGr4oiioB0VC3bLcVpN
PkUXulp5jpF2XBVhpb2UgPxKv2hnkWacdBpc2fAEXQ/2O6VlT8W7Y5pVxjQe
o/j5BdfLpO/i7ZdbjeKRjnFfQTFpeTke7qcuj1DL7yxJlaNU7GHtY3PDJxa1
OgXouZCuuN6fcOZWDDoi9SA1jnRypbO9q/lDpOZkZrJAWkdCZ3Kb+wN09cf3
GwoOVNx6hff638hIlDcXu8qC9OnuAaGWV/dQ9ZrjbT6k/2x/nf748x2kFrRj
MJ50bMztHacZt5GIgZR+BWkVukPzVpEwJG660ttDGltrHlvWuYU0No0gBumj
rzhozXY3UTSjbobPkYp/SBSwqzGC0L8fCacUSK/psVOu1/FHbYLOsjtI745d
sTzhdwX1D4gqmJF2t8m9xHrrg9pry90Pk9aSSt8mt3IB3fanLDmTjno0F3gw
3BW5PSruPEf6y/qIKJ71jmh/FD/Dk7S8guP+XlszNJK11+4S6Zc9NxQCqJoQ
WnSO4zLpJa4Hr1re2IL6vOeCN+k03iv8JT0uMN57dKsHaZMoRXzTmtzIO5WL
XEmPiXT6Wjd5wUPvH9ccSddbYlHBtMuQ73g93Ir044cSs77Hr8GnJK4BQ9Ju
nZ4f+iUDofpfoJ8aaT2xxgzjnmAIvTp8TJw010tB1G0eApVFu8P/kc/L08pA
nVc5FO4nRxHDpL/QzjzdxXUbEvD3wkbSEB3D7TUcDrer1AuzSedqVV9Or70L
nAduLYSS9vcVtV4dfB/Wuzna65L+KUZ5u/t4FNyX/XWJn3RW/w5RPZloGDn/
pOc7WQ+C10+GXFiKAV/Jq94BpN9bETtvT8bCmuzyXFPSV2Uf0FL6HoHpeoMt
AqT/Q5XHOiviIei86t9Ysh7joq3XTWc/hnVmBba2pM1PjjRzPX4C/34nzQqS
LuJYq6vv+xQm1UdXbpD1fmuP29q0bcnwRv9eIJXsl9a+DfdX6aSA435KwjDZ
X2KenTxuO1PB/WVGyC3Shz+mrIinpkHC0puqcrIfx+ZWE9+z0sHU+0zzItm/
fDUjpQ+VM4ChVW4ZQnrrXXSJ+iIDkjuPpXCT9ttwhZb5MhPqjwjl8Rwgr98z
OHqhJBuIHf1nhsn9RFPobYbMjhxYnZNvb0v6UF/8yc/lOZDAypGosaTiZxct
vm+vyoXN2nEc98n9aOvj8u7fOA88vmbfYSf3r8Pj9+vutBUAx4viC4fI/dHv
tVuI/oFCMMg7avPQmOy/QGOY6iiE4P79q5qpVDzHE3Qix70ILkiXD2ylkPX+
TKuPz/M1/MhTcOzbTcWf65+1d/iWgG+sZdajHeT7U4kozCsrgcLbFc+f6VDx
fNS1qFBWCQS26vika1OxpIOt5Q6/UshR0I7I1KLiUzM8zQmBZWCp1v7ilgZ5
vdhl5HyrAprY4tuyN5H9yNOSPFxTAbfTeoRjFKn47aJ8kNtSBWznlonz20i+
n/42PS/fSrAoumkH8lQs9Fy1OPjsG6g0EunNX0/Fquo/M5P3vwX37W+X2NZR
sYvxwYj+dQgMVZL3JZPnY7127jlnGwS+GS09W5coWHnzitlwJIIXJoK56DcF
E6FfQq5wYNjlNSD3lUXBNWfDjK4HYqj5h06Pkuethfpgxf2LtZA5Rbt2gzyv
z1Y8ycs/WAfbjrk25pPnf8QWt86rl+oge431k1pyPih4qvuH+qgOIEsMusn5
gQjs2dfbXQeLV36K0msp+C5FZILzaD0MTX4dYa+i4PwPUcpOTg2QX7rFN+oF
ed73385ce6EJlAaEzliHU7Co1ZHW/sgmkJx2GV8JpWC9mk3z2S+bYH9qj3VB
CAWHpNWZGNKaQNNd/jP7dXL+OMM+fN6nGaYuGGSEXqZgHVqQQt21D5BqHsM/
50zB/my+KVfCPsLg7wNxYbrk/zdPDs3J/AgZFq/tB7UpODG68Vxf/Uc4oBum
oa9FzhfyUtqGXK2Q6l667qcaBf+h1DRxhrdCyNhM51oFCg4K4WU8uvMJ3sa4
5/3ko+BgjmST4ojPIK/lWlRRCdiY47TvteYO8G7cZ/5wxgg7re5UCvzaAX1f
2k5bjRvhwLXUvuCxDihMiS/gHjLCpbJyRuGcnTBvmP/FvdsIb97VzxNP6QQZ
3eLY31VGmNf3UFJxZSe8X17fqnXHCLeNmryfye2C7f/uCouT87PDh01rXe/1
gLuAw77FnYa4PuUMvpbUB760B+3pArswRR/cdp37DnYw1lVXq4ef9b44PhU9
CFdkElsa9+vi90lzDy0f/wTbsiFVrwva2Lv2Xg2X/wgUvYy5aJe0DZt7Ol+z
DRuDGi6eP32/VfGL6yFqhMcvcE7pCUvT2YyblyhlPJaTwHKrbtIrksPfieg9
SocnYWJpdRQtVA4z5wZ7TI9Pgrx57MF39nJ4w/RNVojHJPQ9zepPW5HFPgN4
5/L9Sfi2R8kr/oAslq6mVNE/TUKEHGXqHLEBewRTUJ/NFISJ8gRkO0rjkIBo
m0X7KdBbjKv6qSWNH18d/E/cZQq6TRbqYLU0xp432Q57T8Hvs8csT1RKYTFn
TG2LnoK/l9cuakhK4Rqg1L/vmALdk8OLp35IYGF2yof8Q9NQyzZSzAgXw0Wa
19/AsWk4o3CRU/uMGD5wvOpF16lpoEv6/ntiIoajKnQilnymAeIlsz6xiWEB
TxULi+hpUBJ+4zAdJIq5+9d9mmydBr4uQX3pIBH8p3S0XcVsBkxF16zIPBHG
T39urK22moHuoXlh6QBhrLfW5fXBIzMgbnc70fCEML524VuMv+sMVE8HmS8p
CuN5hc+2H27NwN1jzSq2JWsxLaqy+xyagcp98k2jxUL457nI3hw9Gnjsc6j8
FC6AU+IY4j8oNFjmPJWTbiuAHbH9EdF9NPBVTw7ulBXAnRKbOm860MAJ3Zmi
VvLj943vPjoE0OCrhuWU/Swffr6JVsP/jgYqRa05kp6rscvggSwvmIUDnJ47
NfK58QaBiuGsvbNwaYsMqyCEG/fulNk4YDMLa68svQs+yo0PPJxIMXeZheAA
D31uHm5MMbqVoBAyC5PGo3LZblxY7llJZNf7WZhRL7Au1OXEs2r8b9Yr0iHF
WlV5kYcD5wVNFCoq08HWPeVU7Tg7PvupKVtNjQ7fTm59Wt/Ejgc8w+J2adMB
82V3Xb3LTs6jf72OmdDhT4rhu0ABdpy9k66UdJoOpwtNMmJl2bCTSU+cdCYd
xmqOlQ63LSPpuJLIjbl04D/kemQpcRn1jMTcUn1Jh0ReKRs3t2VkGW7tbVBK
B5GTGh167MvI4EOThWM9HXKbpste6C0hMZsqjsQROgToMa/wlP9GrY6p3lKb
GXBv+XmpwSgLWZr6SgxsYcAhj0YrjWoW+qSxryZFnQF21Ncch+NZqI1tjn+T
DgOMNdQSdpmxUHu2WY6mCQM++mw2OZO3gLqZM99NTjKgeOmqWmngPBqI2G3h
mcwAZrJ01lpgopmqvs11YkywougHiZ+dRkGKdXNfpJgQWci+qLdpGvHdf1k7
KcOE71d0C579nEJbTtw4sU6JCRkJH9Q2u0wh15VN8Sd1mfBoi+3xLU6T6JuJ
NyebPRN+8FTKe575hZpbuYd3JzDh1uilKd7kEZTxQzutXHoObnbc4ZBU70fJ
2jqSdoLzcDdvUmB2+BViwapAtb/zYKfuscpitB1GhJjp+9lYkGGEdT71/4SJ
03c/C3OyQDYz3aKcfRhoFbLLvTws0BoP5UpSHgbC2eKImxAL7j6QG7O/PAx8
RZk8YbIsWMi5aJfBNwLbDth7VO9mQVLrCf90vVG4Hv1uxzZ/Fmy4dUbyxqNx
uDVie4oIYsHBpSHerW/GIVxvIqrmJgu47tTUDv4Yh+hBsV+Wd8n1C++k7Ff9
BZnbvBLPP2FBYbz1OKX2F7S0K6ykl5H3N/03z02fAHHhO81iTBYkdiblWh+e
hoc7FX2sWCzIznj59OGNaeB1QlK3/7Dg3atVfBN507CUR7jPcxAQVlU8Nsk+
A4Om59Z0iRBgd/Z9uOPrGXjht882egcB37YWqjRLzMLG1NE/TfoEfH70ouLm
nll41hCSsWJIAA+b+VG/y7MQta5q3tOMANk/3l93tpN99lL1iZU9AYnjzquR
GR12D/IP8PkT0LDKgue+IAPKuHPDjK8TwDVNo/eTdaepYaoREELA6NZrSVFk
XSkEBAVP3CMgT+RKn14AA7hFZ+SbEwk4veGc84cZBtwwuPdhJYUAptAR/z0C
TFh02XxpZwYBBsvx8SFqTJh6daIuO5+Ac6trxhI9mNC+t+3M7XcEzN18375q
mQn7PN0FqzEBO4TT3N0U5+B9HHfFfD0B349zioVYzkHZkBGv6ycC1LJ3rLzL
nANN3v6ipA4C/NIvjNt1z0Gu5jWHrh4C2E8UKMZxz0NiYGGe8Q8CQp9orVXw
nQeRdItDAT8J6JMKuPm9cB7uN48vvR4j1y8/sZdJm4dgMXkrhVkCjOJO7KD4
LQCx693C0TkCHBhMToPaBfA+dTQlmiDgk77e9lABFkzenTdrXiJAXTZFs8yB
Bf/7vgNd//u+839s2JLF
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
qw6B/v97CFL9/+8h/wco9ltV
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"t = 1.4\"", TraditionalForm], 
     PlotRange -> {{-1.4999999387755103`, 1.4999999387755103`}, {-35., 5.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"0.01`", "0.1`", "1"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.621597026386712*^9, 3.621597062381982*^9}, 
   3.6215970942005787`*^9, 3.6215971594386063`*^9, 3.6215972545653477`*^9, 
   3.621600075515428*^9, 3.672665625375456*^9, 3.672665684599485*^9, 
   3.6726684445340548`*^9, 3.672668503816567*^9, 3.672668573630797*^9, 
   3.672668611611923*^9, 3.672668678316331*^9, 3.67266872679389*^9, 
   3.672668789293173*^9, 3.672668893178192*^9, 3.672668931139357*^9, 
   3.672668962082142*^9, 3.6726690296725607`*^9, 3.6726691559015427`*^9, 
   3.672669350900877*^9, 3.672669383703483*^9, {3.67266943940836*^9, 
   3.672669457059222*^9}, 3.67266951456876*^9, 3.6726696054191236`*^9, 
   3.672669948952345*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DOS:", "Subsection",
 CellChangeTimes->{{3.620986570611333*^9, 3.6209865721386557`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PlotDOSComparision", "[", 
    RowBox[{"a_", ",", "b_", ",", " ", "t_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gYYfunction1", ",", "gYYfunction2", ",", "gYYfunction3"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Yang", "-", "Yang"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"gYYfunction1", "=", 
       RowBox[{"gYY", "[", 
        RowBox[{
        "m", ",", " ", "t", ",", " ", "0.01", ",", " ", "a", ",", "b", ",", 
         "n", ",", 
         RowBox[{"N", "[", 
          RowBox[{"1", "/", "n"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gYYfunction2", "=", 
       RowBox[{"gYY", "[", 
        RowBox[{
        "m", ",", " ", "t", ",", " ", "0.1", ",", " ", "a", ",", "b", ",", 
         "n", ",", 
         RowBox[{"N", "[", 
          RowBox[{"1", "/", "n"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gYYfunction3", "=", 
       RowBox[{"gYY", "[", 
        RowBox[{
        "m", ",", " ", "t", ",", " ", "1.", ",", " ", "a", ",", "b", ",", "n",
          ",", 
         RowBox[{"N", "[", 
          RowBox[{"1", "/", "n"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "Plot", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"gYYfunction1", "[", "x", "]"}], ",", " ", 
          RowBox[{"gYYfunction2", "[", "x", "]"}], ",", " ", 
          RowBox[{"gYYfunction3", "[", "x", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "a", ",", "b"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{".0", ",", "17."}], "}"}]}], ",", 
        RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", "\"\<x\>\"", "}"}]}], ",", 
        RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0.01", ",", "0.1", ",", "1"}], "}"}]}], ",", " ", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"\"\<t = \>\"", " ", "<>", 
          RowBox[{"ToString", "[", "t", "]"}]}]}], ",", " ", 
        RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotDOSComparision", "[", 
  RowBox[{
   RowBox[{"-", "1.5"}], ",", "1.5", ",", "0.1"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotDOSComparision", "[", 
  RowBox[{
   RowBox[{"-", "1.5"}], ",", "1.5", ",", "1."}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotDOSComparision", "[", 
  RowBox[{
   RowBox[{"-", "1.5"}], ",", "1.5", ",", "1.4"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6209865968192797`*^9, 3.6209865970418787`*^9}, 
   3.6209867574291573`*^9, {3.620988649032393*^9, 3.620988722930464*^9}, {
   3.620988765804948*^9, 3.620988771587328*^9}, 3.6209889154575*^9, 
   3.6210678254313307`*^9, 3.621075837426573*^9, 3.6210764565278473`*^9, {
   3.6211433225838757`*^9, 3.621143373324272*^9}, 3.621143418854364*^9, 
   3.621143621176941*^9, 3.621143722067472*^9, {3.621143761984393*^9, 
   3.621143762115803*^9}, {3.621143855870043*^9, 3.62114389705157*^9}, {
   3.621143937429698*^9, 3.621143938990341*^9}, 3.6211578080300903`*^9, {
   3.6211583094183483`*^9, 3.6211583155728083`*^9}, 3.621158467921686*^9, 
   3.621158698473062*^9, {3.621518059278186*^9, 3.621518061196341*^9}, 
   3.621589447330192*^9, {3.6215895859343224`*^9, 3.621589666430283*^9}, {
   3.621589698889103*^9, 3.621589699310009*^9}, {3.621590016446394*^9, 
   3.6215900447377863`*^9}, {3.621590360239108*^9, 3.621590364876809*^9}, {
   3.621590396313521*^9, 3.62159041297901*^9}, 3.621590921391118*^9, 
   3.621591861725319*^9, 3.621592237281082*^9, {3.6215972798130007`*^9, 
   3.6215972853448687`*^9}, {3.621600110705056*^9, 3.621600113535022*^9}, 
   3.672666369298891*^9, {3.6726664000773573`*^9, 3.672666418791772*^9}, {
   3.67267138124384*^9, 3.6726713814449997`*^9}, {3.672671495116495*^9, 
   3.672671528732728*^9}, {3.67267156778901*^9, 3.6726716020939817`*^9}, {
   3.672671721741363*^9, 3.6726717337573957`*^9}, {3.672672005761382*^9, 
   3.6726720364543953`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
Zuk=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
XA==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwt3Hk4Vc8bAPBIUraEkq+EpJIQWiydV5EkiZKySypbUhFFWSO7yJZ9DSFb
2Q3Z93tFkexLdndzr1L6nZ7n95fn87xjzsycOe/M+88Vtbx/5Tbzpk2b+Fg2
bfr399b78JW/fxlo8ddD3+2dF7C6sL0Syr8ZaOTLzkHuIC1MyDHX5PEaA6V5
P0xwvXwR+yLb2LZIYqBb4gX1QnPamGYxI31wnIGeSRnMicjpYpkRvt/4Rhjo
9Cny8PMcXYz5EQ+P7jcGOpm1s0NJXA+rkj/yvLmXgRTkLZsPiV/BpD+Y3Shp
YKD5RJ63+br6WGDUQugyYiCx3eG3P07rYz+cXZsOVzOQJKFjdOn5NSzlRIRc
SikDzSoILN6sNcB4y5s4QjIZqK+JW7vSyRBzjL2i1prKQJ8sHUWSpI2wTtfR
J5uTGGiiXHOqdMkI81P8OfMkmoE800hBTO4m2FqlVP0dfwZae96Uaz9sjunH
VzBSfRhowOvjd19LC6zITUN62IOBxsQDIXDQArNVsYi/6spAOjSk9YZ4Exuu
iXRWtWGgTf0jl28s3sKUkkTy3G4zUG13nr2buxUW/Tx/4uNNfH7MepkJO25j
utBy+agRA3GfZ45QPXcH+1T367DgRQaSe+n4+sqkNSac6m9x7TwDyVobHQ+K
tsHcvPhiwtUYyC3wqcZ7HVtM4aw0y1YVBrqAvDf0uu2wtw03R6hSDJRzWPjA
ANd9jCVjmU/mMAMdWyrfcn/pPmbh63bR9gC+nuOibjtsHDHBc1HlY3sZiNy9
XVzp+gMsuLk1oouLgXjojy1GjR9h3w6eSSvbzkAMzd269eRH2KGAiqJUVgYK
/SqQzh3shDVdzCU4b9DR2PKub57dztgGIYhLeJmOLr77WuwU6oppy7EIs83T
Ef+tmv2xF59g8ZHuRynTdNT64R6vDtdT7JTBPe3mYTqSS16+xZ7phj0Y0gl0
6KKjco5SkxwhD6xOpSXuRhsdqddw/Oe3xRPjSoKcs0109Jm/jP+4pyeWayHb
uquGju4KGAg+8PTCpqZ5WFEeHeklKQYbvPfB5M4H8udk01EO7Cm2OueLeWYz
H4jMoKP/nFyTu0d9sb12VLW7CXTU1SKmAmJ+mAGpz4s7mI4eZ+iqnxh/iWXo
XXr105+OguL8Xo4kBmCU4qaUSR864lIOf7NhHoiFOX9EZW50RPNf4FBeDcJa
f8X8Mbejo2u/SyOvWodhu0x2cGrdxcez46tVomQ4drvmpZDCLTpK0Nxz5WlG
OMbs+USZzZiOjCo6bHrTXmHKW4yfFGrRUZscpkzsjMQC73x++UaDjnhozVtu
3XyNDbRcjPU9S0d/vN+3yv96jTkFqpTdUMLHz9puwacYjRVwC69ukqQjK1pc
kM5KLPbbMZpl4QDeXrOVcTcnDtPq5eLrF6Wjvszzzj3Wb7Afr//K5eyhI6FX
jr92rcVjIoLjjnrb6Mihk7tt3SQZy5mwJHhuoSPCp61Ku/9LweTeTckUMtER
80734dDAFOycyuwy169V1ER+fOfOw1TM1mzFvnN+FUkfpHaN3E3HqBIPOtdn
VtGR4BybmKV0zH2FcuTI5CpyGqm+1Pc4AwvzpM8HDK2iTc/f2hx7nYmVpv2x
Pt+5is7wMuXL/3mLnbbzaH3cuoqiXzs+y0vNxprlmQ5lNa6i7pG9Og+0crDB
RpYfLDWraCD2ktnVnFxsY4b99qf8VcTnp/YnOzkf838f0kjOWUWCdp8qamwK
sB2u3OKiWavIgvvMJJ/ie2z/Nt5Jj6RVJFL/tJnFqRDTPCJ483TYKnLmzY8I
PFeMEanxdfZBq+hC9A7ekPpizKh6r0iC/yp6S/nwvUG1BLt3SXT0l8cqmnJ7
5HrgQikWcf+QabnjKrKMor7Z4fsR++9UbvUP+1VUX6vPLChUhmVskhLabbOK
rO81pXGWl2Flr2SGnG+uop6IqJs8v8ux7yUnDOWvrKI5mkOpZ1kVdtu9vNxS
ZxXVvugIL3lQjS2rKwlEaK0idfuG+9myNRjTl9NfSWdX0aEcbS6jmlpMYk39
WoH8KkpXvf0gc3s99r6uuXRYZhX1SorvDnSvx04FaPJxSq2irh18D66R67GL
gtqf7cTx+b12waYnP2GOKlf1DvOvog8V66U7VxoxofbDg3Y8q0g/IOnlc5cm
rPX6ppsFnKvIL3dA+uLmZmzfo3xHedZVlHlzTNDyQAvWnbM1/DSDhj5GqgmN
RrVhT0+O7Pak0pBoS4FVnXI7JtFUmvxphYYuLw34VE63Y8/Gbr4/P0tDPVit
1w2NTkxqd3W33iAN/ZDcc1vydA82kBFh8LqfhhqrrAqvbSZgvnI2I1+INPS1
qa4lxJaADV3atWzcTkM8pg1RWapELNDXkfNOFQ2l+D8wO8b5GTux83xUdhkN
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

        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"t = 0.1\"", TraditionalForm], 
     PlotRange -> {{-1.4999999387755103`, 1.4999999387755103`}, {0., 17.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"0.01`", "0.1`", "1"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.621597382473852*^9, 3.621600217021183*^9, 
  3.672666430788467*^9, 3.6726665507123327`*^9, 3.672671701648078*^9, 
  3.672671823594144*^9, 3.67267219230129*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwt2Xk4VP/3APDIFqUFlYpsUUhZS6ljS5IlfFJJpCTZQpbsZCn7VmTNbqzJ
vuU9lhj7XmRfkihiZu6E4ne/z/P7a57Xc97PvTNz3+e8z3ku/4Oneo/od+zY
EUy3Y8f/Ph++j1zZ3qYhNMBT9rokB4gRPMIX/9LQG2Yb5c/dOXDMLs/I+Q8N
5chrGCgs5cDns81tP3/TkHtpdIGTEAHUS2gZI9M09G3ntEXCWwJIlBvfLm2i
IV4rWbM3L3PhT414g/lLGurm8mkP886H/xKraWl+NMQqzpYrnpoPH9zVJMa9
aShI5ljLT2I+WCrcT9R/TkOv99o699IXwPjHGCfFJ7iTo1MFXxVAI3Hj1JHr
NLR4bWL659tCCG0hRXex01Bb7D7G2f738FVEKb2SlYY+WZtbvd94DyeDqj+k
MdHQZNxNad39xfDpel6v0xaGdvszXPaSL4at3hB23mUMec96f2wILgb7Ue1g
2y4MtS5PmG6c/QAGvwd994Zi6PHXWr/3oSWQqasVtf4SQ0zP5Jt5MkpgreRT
6qwfhjoa+9LTqksgwqkCVbpj6PxKTsrifAmQNuL+mVhhyGwX1c1fuRQuMt51
LdbAUNVIMVr5Vwp8R6btdHdh6O1SNL9dYDnkzjzo9WHEUHcJ91/ulHKQyp87
U0yHIaEsj4mR8nK4orCwzL5BRS7BtwWTvpWDpfGKdeciFYkvmQWfVquAsvR/
Flc7qeiB0zZ9IlslqIsdMb0UQUXGy9LV9whV0EdOJFqHUBF/7K0nfxurwLCO
hy/pJRWJrtz2LxuvAhst/skNbypaGrxmZc9RDdFPT96rsqMiiRZedn6fahgr
lbsjrUdFC75bhnbGNWCnoK97igt31rRP7Jk6ONZ+asRqPxXJ3U3yo9eqA9Kt
HaZFe6iosybXNNiyDo4/K7STZqKicRNvnuWsOujOZY68RKOgR5NZ0Sy8H0H8
UF237ggF5RsNe6Zx1MPCqpCmWzIFhdxzVolmJcJr782BungKcqnTzOE7SgTF
Pf13t99QkGzO65J6MSLEnfS28g+nIFFJVtopLSKomYwEh3tTUK1yel19JBEy
O8Pa0k0p6NYe1Ye/jjTA/RxMreMEBcnXqFwjXmyErfKqnDp+CnJ+VKdG1mmE
xGY3liIeCnqVzF57wawRPk9vtUVyUZCXTrI2c1gjaB5j1jJgpKDqjly2+MlG
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
R/BQYWrl2fiPX7WwRt5SJV+iwkjH2fY8ag38ytlgr/XC1wcqFFw9Vg1ze9fS
NXbgc+hRC42o+nL48fBVz34GDEon7AQYcsphuZL37zAz3ne8tHsXGlEONJPr
Nx/vxefMQmuBifvlwFqcyezPi88tIRtRPgzlcPbGLeuPCngf4SPuVahTBp6R
dbJnXTEwu6FO3kEtgRdzeg9oHnjfY3z49fpkCQSe/xFej58T+6dafjJ0lEDk
FNeCJn6OxLN22emnlUDm2acJT/C5jZlqF9GlXQLtvfzb6fjc9NjwkfyJwg9w
cP9LEtcaBu/X99xfdC6GiHOC9loYBm3NpYHfTYuBxRhxB2zgc8I/W9d1zWLY
zKNZUuhpcLBZKuiuYDFMqVrsGeCgAYNF8n6J9PeQ+/yaXqQsDYyfDr1uvV8E
ClNsY6yuNHAf0x5+9TcfypkI/sqeNLgaYRuc9iUfJE6rnnbzpUHA4Z3VsyX5
wO/m4fUjiAb0tvFrc0/ygYnzFx8pgQb9UaziEyN50Hu1+1FAHQ3oHLYX2hpy
4ZqtJftHIg0WiptTgt7lQuNrpkpKMw32vRqid/LMhfLpyyxmXTS4ucTg3COf
Cwnu7/OUJ2igQHZ6EldGAI706/puM/j9p7N+VcUQIJT0ffPDPA1Oz+65w/yM
AF5cfFr8KzSgiRzwFpMiAO1iHfU2mQYn/Pvd6Q4QwO7B7ZRIGg1+auX9ZFjL
gcVXFDXSJg0yV/6QZftz4P/fR0Dd/7+P+D/0exb2
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
xIazod6MV+xs+P//EBj+//+Q/wF1gfuW
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"t = 1.\"", TraditionalForm], 
     PlotRange -> {{-1.4999999387755103`, 1.4999999387755103`}, {0., 17.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"0.01`", "0.1`", "1"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.621597382473852*^9, 3.621600217021183*^9, 
  3.672666430788467*^9, 3.6726665507123327`*^9, 3.672671701648078*^9, 
  3.672671823594144*^9, 3.672672278179076*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwt2nk0Vd/bAHCElKgMUd/MZL63kErDs1NKkSQlSZHmZCiKiEhkyJTMZE5C
ZSZs8zzPMiRTZndybxHe+1vr/efe9VnPvufcffZ5nv2ctY7ETWuD22wsLCxe
zI//fVt8CVxcX2fgLQfz2/8L/QZlASJ7Dv9jYAddhjB57hvstkm79vQPAxt5
WW72P5EFPXur6udIDFxWNpxMWMgCle0XWOTmGbj3d6uSxvFsCCAPqVtMMzD9
9bCQSHA2aGcxEvt/MY8X8arRRSEHkoM9fggMM/CR/5yHdj3OAbYn27fr/2Bg
JFA6nZuXA99VFV1qOhhYddHee1Q9Fwi5169kVzLwOv9+asLOPPB5P+u/gBl4
idBLPnguD37bO1TLFzOw7MOD0ztd8yBOPVglLoeBXWL5NE4N5wF/QfWWt8kM
/E1Q7dLA23ywCTc4URfPwP72raNH8/OhyeGn44ZY5nzKj1ZX/8wHz0N/Jx1D
GdhQ2jDyA6EA/hQpld/xYmAL4W0wWFUAhlGFjPhXDJx55TqLzHQBfHM6RRhy
ZWCFz9tVWHkK4cERs6iLDgxMuszn/fZiIQyVvLNH95nXL9VTtHuwECrKluV3
6TCwaL5sHWO8CPxq6oKbeRk4S3qrLWG8GH7IHk/I38zA3ArK8l85S0DOu/Bb
PCcD77QWOnhIvgSqddLa7NfoWP7bWN8dqxJYa/PlFV2g49O3FRyv/i0B2wE9
H6tmOnZ4VpRTwofhMqnLbasfHR/rFP6qllEGSRfOBf31omOii6s5R1kZULKq
48Ze0bF4WrbXdEcZBNjn4XwnOmZUdfvN/ymDuuWw1RsP6XhC+IXJvFY5HOYw
cfx6lo5HzVb1t4+Xg/iuXzYXNtFxkM2O/n8qlfBp9GbbSw46lgQZTrPTlaDy
eZz4lZWOjdM6nQZNKkHryNQC7/IStn+aoC75uhIeXF+0bJpZwpYekym/+yoh
J2H13ummJWwTInku6HUVaCvuMj8asIQlDnhdkluqhnZqVJml7xIeaBBj2cdT
A1eLRcSjvZbwuZZUMJGpgUfnJH4uuy7hburrz4KXayDYWs60wGYJXzRze6hQ
WAOD2erGqgZL2O4voUvIsxZsjly8IC+4hG/J+xPPHq2H3Q3y/Q+3L2GZLbK6
Qcb1UGfEYp7Js4QjGwjzbE/rQexJho0q5xJeJcto3v1SDy2fNgYeZdBwVEVE
6DHpBlASKm650E/D1g8HFF13NMIUWVr3eQwNp6q/49IQb4YQ15XO4gga/iee
VRul2QyIp8Nk/T0Nvz9dNbD/djOEybk+9PCnYZHCMT7Bz81w6ka/j78rDXe+
HAnyP9QCSU1v6xPMaXiqSEtzyrwVzD7STzXK0PCDav03KpQ2WMst+FgsQcM0
vpimU5vaIarqOVemCA03L3B2eom3Q8+vtfpAQeZ485OrQefbQXf3xnOXOWh4
VPuNT9eXdjgQJHTx1zgVC5v9x/7asQO6PvRnd4xQcXz2dEL8uw54nBklUDVI
xe5po1epGR2Q3ijWk9JFxfaK3xwPjnWAJKecsWUVFYtd+3j8qn4n8DodvMFI
pOKzt2NnvPd3Qbr3Mp76QMV75p6ynbjYBWfCi8V/RFFxi7tJ4GHbLvDIRaPF
76j4IK2JayGjC5YXtW+7v6LipjM58EihGyZuGT/ksaAy5+cx8XpvDxTrPX8m
JUnFTo4q6drP+iCkSkvuqigVU2Y6Cxaj+uCRxvb+wF1UrBmw1/J3WR+I7knV
WOOj4qChSpMm7n5wXe1e7dtAxVU2lCSv5H7QTN/n4T9BwZMDz34kT/+AXZKr
atW/KDhx6ujOFv4BoIbVTawMUXBkipK30bEBSHp14/T9HgquCql+EhwyABwm
bzefrKVgHcZ/9xu0BqFu03Tg31QKfmKhLGhaPARxrjnH9yZT8DuGdrjS/BA4
LrlS7sRT8PY/W5dsRYdB4dcOw64ICu4fONpr4T4MvgUnhb74UPDa84VoXv2f
oHc3LuaWJQX/e2EySXIbgc4qo7RWIgV/fcS3Z8pyFGK/86rlKlJw1D6F8yJB
o3Avq7okUpYZd76wsSh3FP59UG2/LUbB6l33O4gsYyDttPXPCi8F85vF7jkQ
OQZ2+2q15BbI2H1zoenO8XE4JufSyjNDxiePG1933zoBXGL7jakTZEzRsli3
PDwB0VsSLUuHyNhcqNu7JWQCqn67vDNsJuMIflnnP+cmQSBW/dfLdDKOS019
lD7wG4ZD5h/cSSVjmrJ1oMi2KUj1TaLpJJHx6Caq+T6tKTjiyMclFE3G0dfv
ZZz9NgW3DBcIGb5k/F/34SrPoGnI2Zzi3P+AjPOojvdM7WbBhdWUE98hY33f
KW6ZnFnQ/sMfmHSTjMc6OWcKaLMwOOGWaH2VjF+u3k3Td5gD9nLTBo6zZBzK
373yznseLj0TFFaRJ+PUkRVvqd5F0FSVaFCQIWPdJZaa3u0kICwqOUtJkPH9
1uLw8IMk4Lp7ckRgJxlrii8ZBnmRoOjyk1QGFxm/Hdoc4K9IBlH19oMlUyS8
brv/DHpLgc2UwZnccRLO4PXYuKGYAoyMqejMERK+/beQem2WAm0yLKxxfST8
uCddaliHCu6CxHr3OhLu+WSdpSNAg0man7F2Kgnz3t1q41+1BB1fw7mPJ5Hw
m1yZgi+rS4Atk0oOxZHwwlbuDW8O0CF8/LuEYjgJR+mx9N7OoMPZrplpnjck
/IlLa/e2BAZ8ydZ+3nmXhDubknnmvv6FaGtDpSYLEv55p0LAjv4X3iiaDVfd
IOFWxT8tnUeW4WbiM808IxJu/33svmTTMgi8S9kccZqEudRv26gsrYDDY/ao
67IkbF7Mp172eA3i3u+MiZYi4YbloUcrZWtQW0D48EOMhLHEshf3tnXYsX4l
8bIwCVd8ivT58nUdcnwzPuttIuH8mJRMfhcWNHImw+FFzyLm4pOyMxtmRcTA
Xue/LYv4c+j7uDtb2JBLD6ubfe0itlYJYQxrsKHdFpe9HxUsYst6r2jZCDZ0
xXk9wjRyEfu+5DkqarIBtWZe+H70+iLWO89RW0RjR6JLTrjw8iKue3Qyli7P
gSwPp1TuP7+I9y9qByTf4ECb65YbldEirnxtu/daEwc69StxUERyESfEnhyQ
/MyJSvnpq6sTC9jQWpDzywsulOkQiUofLeCVLwfe37bdgkbKouhhtxewuQlR
zrpwC+LbFJNua7qAzzRwrv1k5UHPIj4Iy5xbwNcL/VcW3/EgVJRE8lVawIfb
kg4FFvOizpXMOOPZeXxVbms+xX8b+uNSybJ0bx6v4kcGvRv5kebruTLFW3NY
t0hF+AivMJqJYhEKvDaHb24oHGKoCKPgLIFHNMM53Gj+dSjGSBiN/Tyys0Rr
Dt9fmQ9JjhNGHhpvbfVk5/D1qKH2oH07UfWisqTtzCwuERBduaK3C2lftX6V
ZzOLNe5bRtja7EYkm1f9u+7P4hsnBrttg3ajcK8woqv5LLb4cTpfL2s3ms7B
A6cNZjFL97UvMdTdyGfrNrV+1Vms81t6z1s7EdRY9XV8hT6Di04Db7y1KNIj
UrSOv5jBxBaefwYy4uhw25e5RvsZfCq4B3RVxZGc7aN3l61m8GeifbnacXG0
IXtq5OGNGcxxKLi885o4KlD/6RR6fAZ33vau1nknjiSONX2b5ZjBkeqf6ftX
xRFNN0Uk1H8aF+6MPPq+WgL9mreoEveaxpL2H4hx7RKoxV/i4WfXabyqEXo8
ZkgCfWqLLiizmcZZrOWKVksS6Lrhu4uzBtM4Qz5x4pG0JKozeemNhKax4LUN
kiuukijqwdWlmQ9TOJQwJflXWQpZ8iye6wybwlq1dw9cOySFjnx9lfI9YAoX
BvW+yTophYaX0o38XKfwC/q8/iETKSTutl6ofGMK62n9tMrykkJJYUkuNqJT
+HmfaOf9YSmUUbWwkR79G9u4LgyEvpJGWPTVLtbISfyvJa/Y4psM4gxU4LcL
nsTesZN7vxTKIF3WDu7fPpNY9EzMCLVcBvWNia82OU1i0DLdfb9DBlFSS3+G
mzJ/j7jl2KkyaI/qctJeiUksSb9wikN1D/I7bUs0S53A3SK74p9k7kFXbW6c
xHnj2EdG0S8nRBZ5jA0tBGSOY98dEvEy0bIo8/K1CLOUcRwrFr4hKFEWsR41
XmANHcf7N8w1Xc6SRambLoaftB/H2XlZCh9aZRE94dRcveo4TkpJyJLbJIeC
u5VDur6OYXeX0mxtBznUqPFvbDptFDs/FRX+eVoeaRyU/jmSMIoPeEpsoJ6T
R6n7dX/0Ro5i1Q3l6WyG8shzb3Rbtc8os/5wnRU0k0eae46UxD8YxQXUtq1c
DvKoYLtzqLHCKP7oOlC356M8Sppa0a7/9Av3USlJN9gUkEvoSkZq6gg+/dRX
8GaGArogZvpXNHgI66e5rqvXKqLRopfvhtyG8L4nu19FNiqix5eTlKNthzBL
vuDQcqsiCn47a77zwhDe+zR3V1afIupYcWzg3zaEJQu2zSxPKyKDvtAoLv9B
/Fch8AiDWwkZBLUdpXgP4LGnFZeSzymhixtOule79eP8tBgsU6eEWg6/vRbx
uB//137sql+jEjpr16P+yKIfsxlGvCS1KCHNiXuzAlr9OPneCbtv3UpIpfat
4S2ufkx0NN2+Y0wJbfPt3bMhoA8fnohbeLCqhJr4Hjai6F6cW3Hp6pm9yuik
ZLBAcV43ZtsnnMEZoIw8r3sb6KR04wth79b4gpVRfeTLwB/vu3GlwX+fd79X
Rnr81lv+2nVjZ8NGYbkoZXSFXZddXbUb650Yui72URk9nOSgffnShQ8PwsXA
UmUUnObYmZjaiW83sQe4zSqjrkmb7arhnVjF/uiQxoIyEpK6d77CqxMvCejF
kUnKKDrqcuPInU7Mq/rTy4iujFL8VCtFZDrx3pFjZHZWAiqyms8Ki+/AtkSR
5klBAvqlYh7sG9mOe/4zcmw8SkCZrz7b3vVpx5NHtD3lEQE971rSP/G8HRdo
eKu91iQg/qc+W1eM23FDqOmz/acJSKsw2+/BznbczeWT4qhPQJ+A0+tMeBtu
3DiqEHSTgEbDLzN4lVqxY7hhAstrAnLSmM2t4W7F8ckFC/xeBCQw6GrnMtuC
bye1zEt7E9ApsU/k+bQWHPGekxO9JaC05JXZJvkWPBh1J/3qewJ6nBU34iPb
jH3j4IhkMgFtaJqp55RqxHfMVeNWKwjI7mMD1zR7Iy7SFXX8VEVA4+5ppxsn
G3DsxkbTizUEVH3oQXVAWgPe/LdGJ76egLw+TpcJqzRgxQanSpk2AuJ+NZWv
cLweez5Ne9A+yJyvxmSy3o1avPkqf3UujYA8BGvG9x6vxYq38rOl6AREIyVL
8UvV4qhMWn4Ag4C6P96O752swefPmrDdXCagMMGJaDOrGvzul3fK4joB/Uce
e/f4RTX2exN378tmIpJK/eUWGlWJ71ed+lAhSkTiviJvFp9X4qXoAzd4xIlI
1MrYX/tqJVZkOTZ1SYKIdqm1Ry4LV+L1yKzLI1JExFdWln09tAKTRtUzfsgR
EWvfh4k9QeVY7+xLl9sqRLRWNDDralOOd3qdJfupEtG/GCFK3/lyvPGP174s
NSL6YxGw5sNbjqvk7vxHVyci0qKL0KJvGX4wnRplcZiI8NbiYCsejCNNsj26
TxBRUbfqB/GmUmzIfWCu/yQR5UV9/tzhU4rDmzhkBrWIKFM2qkqdqxTXLVtw
/zhNRLHwnL7GVoJ/Wmh++65DRM7WB68G/CnCw7dLAndcJKKDrTkSX8fycGFT
0KqiGRGNcVUS8lPy8Ji+ivEw0/6a7YdL7+fhcQ3xTn9zZjx3/lLTYi6ORlaS
MzeZ8eg9PlMrOfjW0BUVn9vM+P1wirhANh6fy1execCMJ6asy/Zm4R37hN3Z
HzLPN5SzhRiZhbkyvpJDmfbXb99zVDwLh0Us78uzJKJDBzabGCt9w0EKg4eG
rYhIZNMfTynvTLxVTOxF12MieuwsEL9vaya+fH7f4NknRFS3uPc7vM/Agd82
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
9DY9cD7F+Ab//34hsP//+4X/B5gHZtk=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
D8oV+OA=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
/99DgPL/7yH/A3Rh+jk=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"t = 1.4\"", TraditionalForm], 
     PlotRange -> {{-1.4999999387755103`, 1.4999999387755103`}, {0., 17.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"0.01`", "0.1`", "1"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.621597382473852*^9, 3.621600217021183*^9, 
  3.672666430788467*^9, 3.6726665507123327`*^9, 3.672671701648078*^9, 
  3.672671823594144*^9, 3.672672361240857*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Derviative of DOS by Chemical potential:", "Subsection",
 CellChangeTimes->{{3.621067888365283*^9, 3.6210679195599117`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DmgYY", "[", 
    RowBox[{
    "\[Mu]_", ",", "t_", ",", "\[Lambda]_", ",", "a_", ",", "b_", ",", "n_", 
     ",", "precision_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eYYDiscrete", ",", "eYYfunction", ",", "k", ",", "g", ",", 
       "gYYfunction"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"eYYDiscrete", "=", 
       RowBox[{"eYY", "[", 
        RowBox[{
        "\[Mu]", ",", " ", "t", ",", " ", "\[Lambda]", ",", " ", "a", ",", 
         "b", ",", "n", ",", "precision"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eYYfunction", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "a", ",", "b", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"b", "-", "a"}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"n", "-", "1"}], ")"}]}]}], "}"}]}], "]"}], ",", 
           "eYYDiscrete"}], "}"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gYYfunction", "=", 
       RowBox[{"gYY", "[", 
        RowBox[{
        "\[Mu]", ",", " ", "t", ",", " ", "\[Lambda]", ",", " ", "a", ",", 
         "b", ",", "n", ",", "precision"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"g", "[", "x_", "]"}], ":=", 
       RowBox[{"2", "*", "Pi", "*", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"eYYfunction", "[", "x", "]"}], "/", "t"}], "]"}], "/", 
         "t"}], "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"gYYfunction", "[", "x", "]"}], ")"}], "^", "2"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"k", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"eYYfunction", "[", "x", "]"}], "/", "t"}], "]"}]}], 
          ")"}]}], "*", 
        RowBox[{"\[Lambda]", "/", 
         RowBox[{"(", 
          RowBox[{"Pi", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Lambda]", "^", "2"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"x", "-", "y"}], ")"}], "^", "2"}]}], ")"}]}], 
          ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Fredholm2ndKind", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "k", ",", "g"}], "}"}], ",", "n"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotDmgYY", "[", 
    RowBox[{"a_", ",", "b_", ",", "\[Lambda]_", ",", " ", "t_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "DmgYYfunction", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"DmgYYfunction", "=", 
       RowBox[{"DmgYY", "[", 
        RowBox[{
        "m", ",", " ", "t", ",", " ", "\[Lambda]", ",", " ", "a", ",", "b", 
         ",", "n", ",", 
         RowBox[{"N", "[", 
          RowBox[{"1", "/", "n"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "Plot", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"DmgYYfunction", "[", "x", "]"}], ",", 
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"2", "*", "Pi", "*", "\[Lambda]", "*", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "-", 
               RowBox[{"x", "^", "2"}]}], "]"}]}], ")"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "a", ",", "b"}], "}"}], ",", 
        RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotDmgYY", "[", 
  RowBox[{
   RowBox[{"-", "1.5"}], ",", "1.5", ",", "0.01", ",", "0.1"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.621068065346779*^9, 3.621068065582254*^9}, {
   3.6210681560485077`*^9, 3.621068172932459*^9}, {3.6210716896055927`*^9, 
   3.621071691437278*^9}, {3.6210741536272707`*^9, 3.621074168270548*^9}, {
   3.621074251474708*^9, 3.6210742811972322`*^9}, {3.6210743121465397`*^9, 
   3.621074486474616*^9}, {3.621074547267124*^9, 3.621074595274459*^9}, {
   3.621074626433473*^9, 3.621074626636113*^9}, {3.621074730334577*^9, 
   3.621074736686407*^9}, {3.621076912229775*^9, 3.621076949945238*^9}, 
   3.621157803995322*^9, {3.6211585344434853`*^9, 3.621158553647801*^9}, 
   3.621518473555676*^9, 3.621590808615818*^9, {3.6215908467959833`*^9, 
   3.621590879985725*^9}, {3.621590911542156*^9, 3.621590928570574*^9}, {
   3.621591067130579*^9, 3.621591069049865*^9}, {3.621591169641534*^9, 
   3.621591170609221*^9}, {3.621591686436428*^9, 3.621591687969551*^9}, {
   3.621591895370713*^9, 3.621591903076543*^9}, {3.621591975857441*^9, 
   3.621591979956448*^9}, {3.621592010617792*^9, 3.621592031051239*^9}, 
   3.6215921100846148`*^9, 3.62159216245282*^9, 3.621592390891191*^9, {
   3.621592524456805*^9, 3.621592526985701*^9}, 3.6216002358097057`*^9, {
   3.621600668123971*^9, 3.621600668221887*^9}, 3.621601549105481*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVlHc41u8Xx6mMRHYkZGQmSSTrcz+kSCplJCKhp0ghROmLplkpRJGV7J2V
cMomZESIsrPi8+yM+D2/v+7rXOec+7xf7/u+jrSTx9nLm1hYWM6wsrD8/3Qu
jFra2GCAcYTqQp/lI0xoVUxed40BX8+fq/1v5RHWcOzdhVt/GXDfLzNH+N1j
TP7nh9YFnAG2jHjax62h2HclIxbFPwyIZVMkSjSEYqG+nYecZxmQVvVBSPhh
GDbHPfF2cIzZb6zf6iIcgSXYXB8S+smA/2xKrXf+jsDM0hl85kMMuLiJpUQA
IrF8Xe7Aph4GRD69gSLuP8U83TRt3tczoCrQuidR9TkmXQ5PF4EBqS/VtI69
f471sJo2KlUzgGPjxMCE7gtM45WDekopA/RY23pvnY/GpiZnrv4oYkB1cIBQ
5mI09lLNO3lHPgO8Z6/rmYbGYIzmEO4n7xigzEdVu9oai2UJChxpSWXAwnUt
I2Wvl5jNxcTbm5MY8GmyXW1eIg6rohdN337J5D2g+JjyOB4LlBv6RAxhwEH2
74NpCQnYfi8XRuoDZnyUH8vwSMRGqxf3jQQx4I2xRTJ+/A1maLk5wcKfAQdW
nVoUBJIxSvKT7qc+DPh9Nu2hFksKlj4vwtnmydRvADKTd1IwtgcqvgRXBpxN
JWZhAalYeWd5bsBlBvxypBrJsqZhRDGD8fJLDJiasGzaCE/DWoqtTu+zZep/
trV2e+5bLHI0UEnsBAOWTjt/5ZXKwPRVtjpaGTMgKD3r0c7WDGzRL/pl1BEG
bO51DBT3y8TMebM2c+gx4NzU6TsV41mYINY9QlFh6m+7bfHfWi7WEGYntF+J
AYd1/tXUdedhPn1Tpm5yDNhwrlKwyM/H+t1XKkYlGDDKxl3K5l+IvU6QfdGx
nQHWs+lNSUXFWI7aq9QKLgZwopyG14YlWFXj9uJUdgYYXPGo1R0swYaWlr/6
rtNBfz1nt6BwKTb30OPXxRU6pD2k5ERXlWIrO6cWj9PpcEVTZtzuchkmZtTF
I7lIB8FjuYvXvpRjyoNHJTjn6HDpCp8Zd0gFpnPjowp5ig5JMfxnskwqMdv4
jBNNI3S4/L32WcjPD1jCwt2wGx10EP2dH15gW4Pl3SPH27TSoZoikV52ohar
3nE1y7CRDg8P6Y4SjQAbJlg076ihg1X0k9ifGZ+whb6WfpYPdFhsHOT12v8Z
W3PDpudK6aBrtVXcrvozJh6rxAZ5dOjqnomsnKjDVJSThbKz6BDVu8x1J7Ae
0wOhPdHpdBhx4SqXkmzALsxuGF5JpIPJXePrbe6NWKJ+fzBvJB3uqU/HSZi1
YHk9J6KWQ+jQd4bDuEqgFau+8jl54gEdyr//UH/7qxUbfp5XWxFAh5eHPvOK
PPmCLcjLdKb60YGQ7DMicKMdW/sYNxLhTQfftjplResOTGL6/trFa3TQ2s6q
G6/3FVMN+LvN9AodzoQQkkokujCM78YuDWc6zPU2RUmldmEOOud1OO3oILfd
NTumtBtLerrfv8iUDv1bTN3T+b9hBbLvQl4fo0PHu1J5rrJvWG2lWNxDQzrI
c1btj7Xvw36Os5Xb6NChwH67X2dtP/P/BTQaHqJDUIb+169+37F1btI3FXU6
BCvIl2QeGsAktYYpLMp0CPEK5ohvGsRU289snpdj+vtodx1f/BCGXWoW6JOm
A8shpWZ5zx+YQ0TJgeyddJCVcvMmaYxgyb9CPc5spYNE28/c/IhRzHEb59dg
Njoc3sPLMck5hslohagWsTLfV3QXZ0vYGJbx9NGf7Ss06AjbLMcVN44V6N+/
1j5HA5PxNWrq+CTm6cr6ZXWaBpJ9zy/7B09h6rHBynsnaLCrRopIlpnGyhYC
Z8N+0ODUTvctZ2/9xqoTAq4Yt9PA9HnT8LztHBbYvNJ0q4UGNjombAPS8xiB
cls+o4EGImJ+p14tzmMNpv5TW2pocLAkXP/s6z/Yl2Uf57p8GiTpb7PqSsax
SDlqHSmbBol62ZUKEiTs1BlvGekMGlhVhoXuSyJhPVleY0FJNFBN9J/IziVj
Q+duXNR/RgMd+qfX5QwqlvjgT617BDPv3ELPjKVhDoXukokhNHAf6nuhfZiO
jbNfG1kJYvLmyGZ3RzCw2bIrdpWeNGhYMazq8FzBcsamq36708CH0B3Uq7WK
ufMQxURcabBMTSwt3rKG4S4ug76XaMAy62T4qugf9lfw0rmDZ2nwNi7orkou
C6pCo+VOp2iw8V5fOlqRFd29dnHHC1Ma7NYNnXqXzYpY6u37cEMavOzuXzCu
2IQ4btpaFBykwdMdXbT0zWyo5c1gych+GoRIHqktSGVD4a02AjwqNNjn7s/m
YMSOtkuf6762hwaBfVYPVOM50I4ui9NKwjQ4TAxmafmPC+3sVPh+jZ8GxOHx
dQ6DbUi8fdWhgIcGTqNRjRNbuZF0y9sbB9lpMM3/gF8xnwepfKI80WdQQfnV
8XtmyXxof22zcDCFCjy42uaenfxIvTrhTd0SFUi3O6zG4viRVuWRfOMZKnMf
hbltJAkgw6Lo9jODVLhLj/5qPSyEjhZcsYzpo8LIdq6IvbeEkUme7nB/NxUW
Jg7XXhfagU5mTczbtVEhaM1LvtNBBNmkHNxG/EiFP7IBDW2qYsguiSM6q4IK
H8flHy0viSGHxB9i8++pcD2gxvpz+S7kEv9A2TOPCrNPSv9+tJJAHlG9x++8
oYJdjHqTlIcUuvk0s7v6FRW+Osj9CZ6RQj6RAec3YqlQ+u2r/OXL0uhOqKzr
w6dUqK2IXt3jJoMeB3uHPg1ixpfz2VLS9qCwQGO+7gAq7OAqeq6hK4ci7+6K
F/Rn8oZHeWkPyKHn/vWZ8Z5UiOn+e11MSgElego2p12iwr0XvINC80oo+cbv
U1P2VDh+yj2VM1cZpbl/7FewpcKwVseDOM+9KPOq83TeWSrY3DYVl+bZh0oc
37NVHGHq9yS33DdRQ2UOIU+WERUy/5qIW39WQ5UX7IT19Jh6nLvxIv0DqMZm
s9xnDSq08xgH3TRQRy3mFkZf5Kig+WFil6a/BlKOF3hXLU2FPXsYUZESmijy
VzdbgQQVnjuOS+5r0UTmN8ybo4Sp8LKX8m9hnxYqKeNVvM9PhUBu4/obs1pI
6F9nqDcPFYxUFYwXcg6jgYiTptZsVLh6Tmzfe4IO0unlzjVmpQI5pqHlkrAu
ShRr36b9jwLbd44mjuO6yDHbtGMXjQKR/T9VjGr00UyTsfnYJAXI+PMYsUEC
Mt3OUdwzSoGOXyelhJ0MUJ5VE3/DMAU2TvrG+i8ZIM9Jo96MbxQIyxQ1FxU9
gnr2btGI76KA0He2zNT3R5CGd31MWDsF7KlJXuqWRugvq6G1ewMFEiYLT4i/
O4psj7NW2H+iwJ++scwvVsdQddQnkdPVFHjXrqykw22MgnejwQOlzPxsGRd3
hAni1Ne7wHhLgXW9SENi/wnk9nC1eiaZAn638uLKq8xQ+5cqiaEECpybabof
kHESRdlq/6qOpsDVwKVSn9jTiJz6FxU8o4DhXvgcY2aOLGcrUpIjKDCaUJhb
2mOORP0POd1/QAGvpSQZ84Uz6A7Q6ryDKJDiyz8oHnwWDbOXyV4OoMBw6D3N
FlELlBJ7cMrYmwIeLElaxPOWSPG92lUeZwp4si7/6BY/h8JXllrWHZg85PSu
6OFzaMGgUAm3pYBkz0XvqjQbVNS1b77nLPN+ovsI1xFbJCD650TDKaafqY7E
Qgk75HMxL6/MlAIDzTPNbzfs0OFF5RvxhhRo9PNXDRiyR6815zrDMAoAH9v7
P70OaO1u9v4AHQrsZnlDqO67iD5tUyTZqzPr38o4jSw7IhMlOR9ZGQqkqxpV
MMyd0QWOxT22khSwvBLbkTzjjDynyvuixCig6+KeKvrIBcWlmmitCzD1v3yg
x9dxGeUE8c9o8FJA+LqG+qI/EdXaD8Vf20YBG/2ffgbKV9D0TveVgc3M+Yfc
VkWTrqIVhkYuLwsF4p3MXNYcXdH2/n92x9bIoFHbmS6h7IY0XzyreU8lQ7Xp
si9r1zX0kOt98NMpMgi9SS585OmB4mcCDjSOkWEy8YbOL01PlNdkNL46QgbX
1Ow/Lyo8Ue/9/iOu/WQ47bdS87nZC007JlOTe8gwGlaW8sz6JlrBrr7r7yTD
D30eDY65m0hmdZndqJkMYX2Cdmm7fdChwbqKO/VkKDdSAsk6H2RaEXG1GMjg
QlJlkFx90U1viTbJSjJ4at2b8G27hT7PE54sZ5Gh+Mttfa9vt9G31q2Y2jsy
pHDX3XbPvINmMnsWialk4FXdJx14LwDxubiYf3tFhvDDVhFfT/yH9hjuY932
kgzmvk4oTS8QHZaiFxu8IMNZHvuXcZpByHE4RLAwnAyGKHMpLCUY+VSZN0w9
JkNdy+tFGeV7KDR+p6/4A+b8M+99iZX3UKFlbn9YABk+eOWXVk/cR+vtna9c
3MmQtrBtufjOIySQG2eacJUMAaTkU5v2P0byYY6r3S5kYK9kVXsz+xidPEq+
gOyZ9dNEy2c3Q5Gj7EeeW+fJwJ0vPepuEIZ8WB/W5lkx/fqd/iZaJBwl1ghL
iZ0iA+sOOzkYikBFCT+7zE3JUMp7Udi9JRI13M68F3KMDEGtp8eCap+geU3t
CSrG5NdNNLzY+AzpFFzI+LqfDC3z1qujsi9Qfh+fWtleMkjfv9003fkCSf1r
+PBagQwXUm+MlgVHI3azfR2Xd5PhnKKSS+NyDLrtPWZ9YhfT7wt30vM/x6KF
17GjaiJkmE92bH/1/CXqmf1HWd1OhhE93uhp03h0lL/kvzEuMhz+cOsZr+Yr
VHmYyNHMToZp9VfkSsXXKCmkU+zFOgl2oRljb9VE5CaXbKC4SAJpVfsPRxxT
0IiZxReeORJwWor079qUisx9OKwoUyQYl5n1qstJRYfqPa7WjjD7lbW31PO/
RdlzsuS3gyQIjcRXu7veInGBgYCwPhLUde1m2RqfjjZdIjyz7CBBZx3XWh4h
A/mGUkV1Wklgvwrzv2Qy0UxhVtruRhL84Las2tiehTrX+crnqpn9oocCWtlz
0OvEseHgPBKsi7A/k3xYgHgaYonELBJoFh/ODG0oRMHzx/ET6STYOzncWBNW
hIg6JZtFEknQZ2O2dS9ejAYvEZ+sxZGg12vl4khhCTILExMZjyaB7nr2Rrj/
e6Q+cF85P4IEyzyjq5HyZejdxqHSFyEkEAoT7V3lLkeiCvP6/g9I4EBLiiGu
l6N1X4szRwJI8MvVWOndlg/I6w3HD0U/EsxEVXt9FatCkw0fXbZ7k+C364hG
JPYRtQnu8R90I4HSd86ovSU1SF93gBWIJLjjUvgtejOgIqfIiHQnEsQtndTj
PvgJvSymJnnYksCOy1D3X9FntHUwS9HKmgQ/N60XDwTWobss9iU6Z0mwM+3y
A7tz9cjpdGMjmykJLGdFwln3NqK+W7dPzx8lQbSJ+IsYhSZkkrRvsMuABDcb
7wm+OdCMVP/ELiRok2AAbzw/6NWKUoVMb93TJMHj9Urix+w2JKS3vkE8QIJL
Fvr8HJQvaCWcKKiuRIKgwrWBhppOVPDQo1FZjgQQy1tvJdGFnAL9/WSlmfMx
ULk93YXavMJ/CO0kgfgYxbchoQcFXot+wiNMgo27j2KfhPUi9cuJiJ2fBBay
xDNSj76h1zYFbxmcJEA/jablc/rRqbMVVvgWEnxx8N/i1fcdbTL7xDHLQoJ/
a2fbZAQHUfnR1g9jaziwB2eaOLoMITfUc23oLw5dJl1PT7X9QJLaPyR6qTjk
vtjjvXxsBPWoT379guOwGOJw8NePn0hbnn6wZgYHBaItb4zyGFrYvTFVNomD
RFim5q7d4yhlJ2d8wSgOz69+8IuVnUCWgvymmcM4QI2ZWYf2JOLkEVtLHsCh
WaPFWch5ClWzyxbEf8NhTF2x2illGnmyqDg+78LB0aRkejf1Nxqg6Dfcb8Hh
rN6reuepORT559itgAYcBIek/c+ELCDC79OKPp9wSAypuX/SZBFRR22G3Ktx
2HRT06pPCEdZQ5ciL1fi8Fd2iockQkIXvrlhDqU44Ol+jtL7yYiv0xu3LsKh
KujWb2RHQf6fH1maZOEgHT/n/vwfDal8fMpukI5DdfN6v6YfA42WxlVqp+BQ
RFGd0+VbRjEFKW7qiTgk5Q4wBr+sIJOsbPG98TgEd3rfzcldQ2upJZ2yMTj8
OOxewle2ztx/H4PFo3C4+uzuvtO3WAgizzomeUJxeEZqlZNa2URoC+1/yf4Q
h2vnt42Lum4hBN7/ZbIRhMO2CjPB3r9sBPW7MyuMABxeO03zGRVwEKZ9SXm4
Hw4a7sH31J9uJbz2WHGY9cZBRUKXvvJ6G+GU62b+cQ8cQtyG/7v0g4ewyZm7
fugaDoNXBDLU9/IRyi8I+/ZeYfKtbUQ0hPAT3KwlFdqdcXjck1C8hVOQIGmu
MNhwEQdt4ljIzmIhQs9xtYgaOxz6J3uDcx7tIDw+oq1ffg4HRXy/EEukKEFH
33CpwAKH6Z9vjQq+iBEWD51IzTyNQ612Pb3JRIKQpmZpkXICh82u8b/G2KQI
1sr2bK+Mcdiq61078EyawLWHWPH8CA4l+yOSrx+VJdRKeLiGIxxMsqM9DFTk
CDdF/Hc90MVhi4vfoYNmCgR5/nsdAVo4BC7V6ErmKBGGuMKDfA4y/X+ZJGx+
UoXwdEv0gev7ceBzdQjwJ+wnGK4nTFzei4Nd1eNi/6MHCDRGeqyDAtNPiy0q
VLGDBNvQirhEWRx0ldPq1TdpEj6Jtr0a2s3kiT+WFCihRZDPHk4QFcdhbfJQ
u4SXNiFSe+mNtSgOnzYkJoI26RHIrawpMUJM/dzC4VH9GOGcrVBaDx8Oe0x2
aMiuEAjVc/LpfDw4fMYHGJkFhgSZAO2MU1uZ/zV8USg53IgQus0sK5INh/pI
UuD7F8cIiwkOOW2sOPwEhV/XG00IN29z2D+hLoHaBkngetZJQmWf2ojB4hKM
Fmufl587TfgfEd0psQ==
     "]], LineBox[CompressedData["
1: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
     "]], 
    LineBox[CompressedData["
1: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
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJw12nc4le//AHAZ0aLUR0ZFwwg500h0v20yShpGZZSGEUp2imSGyE5CGVF2
lHAroaRkZ+95RlI0RL/n+8fvn3Ou13Xu63nOuZ/7va7r7LRzOWrPycHBwUm8
/O9dRZZySX2ZjYeL91tIzR6Gp6WfJ8L+srFjsYaQwNBh8OxYmOFZYOOHt3dN
6TgfBn4hmF+eYGMt2Zm18Ykm0Ktkv+g9yMYNCd9EBGkmkHUy/M9CFxsrnJel
OrUZg1pyBye7kY2v55l9aRAzBt7K36sdatlYkVsg2qreCNp6d6ybfMHGtgI6
CT/cjODStkubB5+w8YvfUSah7YZAV4/aapnJxs9CfL0VQw2B40ypWFcKGxfQ
dhwyRIaQ8HB596cINr4dV7mfVnYI3u6Kpdc4s3FISL757+cGYNIVOZtoz8br
nAxMF64ZwJewsHS302ycyHav61I2AObczfWSxmwcp5RzhF2rD5uxy3iEPBvX
dMTzqk/qQeoVxxT7PWw8KZEYLlmqB1JSF46gbWysc29T1ukAPVCNPFM1v46N
k6ttAm7v1AM7K+M4CwYLB9xxfG3logtMfoNDtDEWprk8eWinowseb7Q5NvSx
sOa/S7WntulC+F41p9omFrbannKN96MOFP+U1ZbOY+Fwwxqlkyo6wBHH9+PH
RRbWLeAJXUPRhnA97rxPNiyc1eTtNy6oDVuW/lnnmrPw9BqNtcYLWiBj9/OD
lT4L8604o/JXWnCYPPnojTQLJ1t8dbhuogVfxkYsUsVZ+EVsH9mcrgV2iQMC
HltZeNkmX+mRqBZ4rHT47uVlYelz1dPXpzUhrbnO7O4kE/vm8lj8DNUEmZt4
jcMgE5u4zxVxX9GEEtorrNXFxFW27947WWlCfUqJ3M96Ji4oO6KmTdIE5sUM
rjNZTJw8EHW4s1cDDvDcKJU7x8Q1Kc3Fw0gDZCYj19w9xcQ59z74jClogFBj
qvWPY0zskx8QtW2HBsyFVq6r1mHiBzYLB/YtA2SvXzxrIs3Eti7PhvOrAQS3
OG9xm2VgWY/r2030ADgWfB06Rxl4VeorT439AKzO8Nr9fQxcq7+u8pQcwLvE
XCfOZgbWQO0SfBsBrouNv733jIHtN2ZLonIE07usrpW7MrDIJRoj8utB6OJy
+CB6iYH5pTptvnQfhLpxr503bBlYrajxlnXtQUjLTviod5SBxywU58VjD4KZ
bJtkD42Bg/byBB1WOQg1FIOupcVZXC4+bZAXpQ5xoKyscX0Wq54ufkM+owZc
DV8HPlybxcp03tIhIzW4YpgbdOLyLO5ze7S69IAamJ4QaXO0nsXN8kHf34qo
Ab/TklOCxiw+VYjFw7oPQGgizmTwzGKvgt/KNIsD4MfW40+ImsGbKhs3X76i
CoyrHM8lQmaw+J79HqPnVMHy9wur/BszeM3PH/4uJ1VhP7fsk1rXGczg03Jo
U1OFRZH12oyjM9hZ1lmxjE8VXHU+e8PWGSy6YdKy8PF+OJtqPjH7cBr/i9gj
+I2hAnfLptTbE6fxJipZe+uwCtQ0eyS8ip7GKzr+ckc7VEB0OU7vzo1pXJOt
rspTrQKfT7c+2Wc9jf9zvnnRMloFDoofuuy6Yxpnu98UiFNWAZHMAz8XUqew
7d/6Do54ZdCtbDo8GDeFc4VctllHKIN7m0Vuw50pTFI45NIcoAyfOb0sEv2m
cGRUU077ZWUIPlv2SuXUFBbJ35tw10AZfuzZd9NXbAoH3x+8mLNKGVpydqxZ
lTKJC/PO5V/zVQIbVu0q99hJHJL8KIbDXQnmqWf/TIZP4pFGsIh3UoItNTmM
Zt9J3O0Wd7D/tBKYd5A/JZ2exB+d7QwHQAlGObTukXdO4qZ9jHOpfEqwaHFh
u03uBH7203NDUpoihDxcI9SePoFVNeaX1ZIUQXgin183eQK7H+qunIlRhAOu
c//kwifwO2cxO8vbinAz2Hv0p+MEzmxsnUpwUoS1pRE50aQJbPbfL303NUXY
sb6IgsvH8Z+TsvHHR+hweVymP7pgHMuJGXGf76NDTVVGsE32OP551KHreicd
Tjvf61uVMI7fcDm41L2nQ+onj9va18bxbwFN/qwSOojEqPe8p43j97t/0Stu
02GL0IebHUVj2JPzUksDmQ7n2FpyWbljeFHyauxTOTqUNVR1Xksfw008gyZJ
UnQw8yyQ3Xp3DIsW20UGbKND7JeYDguXMSx4c0A4hY8OAvfNZYb2jeE9jgnO
fSM0WCsx2TKTN4o330B6Z5No0J/K92E4cxTHS65vWBdHg2cicg3dKaNYoPcs
18toGhzZ7FpVHz6KxXq10naG0CBh9Z/cDIdRvPdnX6KsBw12sTYEWsiO4jyv
f8P/HafBgUpF+vsnI1hEnFkkJUSD9crmpNqMEXylKrLcUpAGg6U+shXJI/jN
OcsXsfw0CHyGJbLCRnAYW+M+Py8N3qUbbAi4NIKXVpOMFH9R4VjI6UmVvSNY
Jos5u7+PCk7Hbifl5g5jqyiu+JVHVMhYqaTJZgzjf+u1eUfTqdCVO/cpP3kY
x532cn73gAqwbMVTGD6Mz3fu50tLpMKWbOqV507D2Ly7U8QpggrVP4cM35CH
MXuls/PuVSpsU7q2UuE2hFUK3TdO6VAhOHyY/spuCPtbjQzu0qLC3KChY43Z
EJ7QDUO2QIW3Ibu+vFUcwlU6GU8nVKng3NNS3Pp7EKe1hM+uJ1Ohxk/WnhEw
iJOYrrltolSwqRv6sCN2AKMs+4y98xTQU/9lPxAwgP/ePeF9/SsFFCo2cqS6
DeDDIkJ/2pkU+JunQRcxHcCXK3JmQ6cokBT7KHXzxgE8/bZ0v+AABT7bXnDm
i+rHjmUTcunvKKDB8ZV/PqwPP5+JJCdmUEDGh/dJkXcfPvVH6o/qQwps/CGu
5XKpD6eXnREdSaXA4NQRT6Z+Hy7l9zlOT6KAT0vJ0CRvH376YNRjMYoCJWke
RX23e3HNSqrHlB8FdqmvmNYH9ODBXq5HzpbE/Tepyydf6cEjmxl3fM0p4D/p
u9r5bA/OrAbdiBMU6I3+XblFpwd3OW7fWXSUAvdGf+w+x9eD64fOGQsYUoA7
lLHAGf0F/z1YorhLjQKTbV+SIbUb324ZtbkrToG4nK3uWyK78ZW1DKfO7RTQ
9DthMn29G79XTxfbto0CaZIdnHetu7GmxYpVgTAFTnq1OA7t6sbCGZd0JjdR
4N32BnX/J134wOJYTiY3BZ5cLB15Vd6Je166OeswyNBh91DcMLsT6563fX5/
hgwcpyNO98Z34uJyjurvU2Q4YXq255d7J/7gyuB5Mk4GTtXNrYq0ThzximIh
M0gGy3VXawsLO/CYJGXUq5UMawuoDx/ltuPeB3uazF+SQTF3xwA1qR0zz7bH
jFeQwSZzrdibkHYcx+r+5lZOhvKE0YTh8+245J+bR0wpGexuxEZtl2zH3lbK
V8eekaHyyPz1xIw2nF/MONSWSQaH78WnIlJacde2Ut2OSDIkK307cCG8FVcr
f55LuEOGd95kMS2fVtxvpc9jFUEGSY7Cnj8Wrdi2pP3SVCgZhtc/PeEg0oov
/rBfsymIDMelso8YJH3GbZXUqWwfMgSU0MP45Vuwze+VoO6LZBhUKdVrWNeC
f89aTNRfIIMapqz2Z3zCdFZdwvPzZFj8oHCLlfcJT1MZM0nnyOA0IXO9ee8n
HJ3Tou5iQwZz4e1u4dIfse5A6ypLczIo+PNYrN79AeOjtba7DcggWvk5cZr7
Az6nGyl3SJ8MPIv3u5ommzBvUzbfFT0y9DtTj0XnNeH76b1/3uqQIfy09WFh
ahOuk5Yv8dQkw5TaSx1Zjfd4YHD16o1qZEhfcqKaWDfijexx2hoyGe4oq7iR
NRoxqbw5zJREBs+rXEWCuxtxkDN5IkWBDCaM5H3dkw3Y4clgHnkfGZZ7G2Rs
LjfgrfriFy7KEs+3UkL8yvV6nPEu8jCfJBk2e3esS7hfh/O+p57lFSPDr3+/
N331qcPstzv+2IkS+xUsLqxvWYdX5N6VYxEy5MY57PkjXIdlCpfS/YTJcLCI
Q/1Mwht8pfDnPm4hMlyakr8sFfMadw9c7DTYRHyfy0fdb7i+xlMk1/SKjWSg
L3j6fDn8GvcPZURIEV7hrAsO53+Nn3BJvOYVIEPcDouH7IhanKXyPa17PRn8
89dmOG/AWF+/se8pHxkMXh5/Jt5cg5t/HwyQJ7ylMf1la3gN9pbI1njGS4Yn
o0ptinw1+Ev1BsGS1UQ8iJzlWuGsxm0CP6ffcZNBNvSVfdSvShzpRyLJrSJD
9zkn2cKxcrxac+rWzQUS1AwcUS7PLsdL2KC19QcJsk8oaldfKsd6532W9xB2
1185/eHrc1zdNzj3eZ4EG+XvxkwtlWGzbhFVNEcCg++lv8S3lGLHhJb11xgk
IDsl8Uh3l+DzSfzi47Mkol77CSqklGDG/Pza44Qnu3Tk1SRKcKV+0GW1GRIE
VnZbm8sX47gHzFM7p0hwjetn5M6wAlxO2nVfa4wE2gs4hyRQgIX2iEt/HiWB
4FToa/X4ZzhBKD70DOGCJtEFi4ynWOId54ebI8T1Yw6ein2Zh6V7KvX6hkhQ
dovXIx3l4f1+Jt4ehAOvfY4uqH+CvfMz/DcTFrewq2tqzcUlolVcZoMkMJcI
luWazcbnLzrNT/WTQErwsPYm12xcy0yviiH8g0v4jPhiFs4JFLZQJxwz9STm
AGcWLkvfw5fSR4Kmgo+/roo+wrIpJNVLvSRISk8QDEzPxO2rFmJ2Ej4fay1/
VyoTh7hUV/b1kIDL45v1U2oGzlR473+csKePbNT7+DSscWr7xzNfSGDCnusq
zH6AF8QE3koRlrKrEE+oSMUPfv3wmusmQaeBdrFdTwo2E6FtCyP8tHrtH/3Z
ZDwRYb7WnHAQpVWTtJSEZb3Wl8sQpomc6Vjaloh5I+t0WrpIsDZyz/bRfQlY
5k3K3izCoxwM+3cH43FXWG6TH+GYac+fcTb38PsTItoUwhdPHQRft1g8rHly
Gz9h+MwdZhsYg+eiAoqZnSQYdNmteEo/Gq+6bilYSDjyZFGDjEMkZvTPDsQS
VkPq5gsREdhPWO68F2GGVNPM62dhWJnCn29NOIX/pG9USwgW5Qp9qk/YYHFs
vdW32/i+dqQDjfCvAdc06c1BODB484Q44Zz6ZdIPeiD+Rtu0jZ/wiWfhr2tP
3MR6sdcFVjqI3ydLyhb95odFXx/BXwlf/K3/vpTujSmVt+TGCDe8s2MaeV3D
V003HvtCeHeSn8DkKzc8TP+m0kKYs0XefmXFEUcwd/Y2Eq52tsknB5/Dib1p
ym8IfxOWGasXtcT7Dtib1hD+/HTH0LGjuvj6nqvSVYS5bQ0lQrUUUFlw48tX
hJ8oZHqurzyKOOXt+KoJJ3s9WGjvtEGJL7Q21xIe6LlUmGFyEWXmOfe+Jbzr
gNIll0YXZGE5evoDYZpJQMyO9Kvox+/HD9oJd/pfuHz7lCcqj3+ZPEDYs9DY
kCnsi75vljw6Q1h0mCZj1umPhBVZDYuEz/BFcg7oB6C8e8K/eIj9KpTgcNso
fQtZPS6YECLMsf/qkBbPbbShvCJ6L2FT00ljz7FgNPRNbVGdcOYli6q816Fo
v5W+yDHC2ikoeZP/HTTFuyP+NuH4khJenVNR6G88Bzud8NUJwQNq2++iA1PJ
XDWE3y7ffuKyFIPam2Xtlwkzw7BN2GwsqrmpUSxOnKf/hH5vfdRzD+1WNq7U
InxewSm4qyIeiR+N4IohHFWZpT6XnYBqno1pVRKu0B36sSYhEe3546cxQZjP
+uhZdfdkZIQb3YE473nEjPSY/ADt9NaqWUfED/fbh1W89DRkPUoq0CNs/Wv1
fkflhygtmjf/NuHwollhkYfpSNh1TTMvEY8HRV5uGs7KRL0Howv3EPHrWMps
iZF+hNZd4Fnn9r/4NpaI0nryCO2xynHHhOcDQtbmPH2M/iuQvGpH5IPs2eNc
l0uz0VTIkV2viXzRHhT2WlwxB5XSbH9sHyD2W7z6Rmt5DvqyWq7Lj7Cl2Z6/
9MpctOt143sg8pFA1fyPpdo8JPHGy3OEyFdekdGTYZ8K0KZY093BRH7Mkq57
fOBIIUpguG3gHidB2+tFO1ZrIfqEDq8LIiy0VOCS61CEpF87aYVPkMCVJMRc
d7kYDc7mPysk8q1k0vh4m3spMlHfWnKGScSn/Upd/vNS1DqNl5cJH6UKPwpa
LEXbvtjbPWSR4Gazoa2SVxkqTJP0mmaToJejdCDZ9znaOSsxfO8b8XwuBXTZ
BFagetnUpcM/SRD6YdXz8ZoKlE76J8D9i8i/+wLvXVyqQKzNz5ZfEvb8FnjE
1f0Fyttge17uDwlsvIOabpx/iUKLsz33LJOAEhZSk3boFXKEy78qiPolz+B9
sCvkFZo25hyX4CSDlHGob3bdK3TimD0OJyy6KUylQK0KxQa669pyEf1ecnhJ
tUI1ejzQc1+Eh6iPuZHZ/YIY3fMNT6gg6umntfy3bQ5jxOs8l0xaQ/RfTlFn
xyMwymhuu5tL+EyS3kYPzlqUWrXW8sFaMpid0v943bcWne8/YRtL1Gu1cQO9
SOfX6Hrn4+t5RH3f8MPowFPTOsQda9QfR/QPG3upZz2v1KH1yZYhKkR/saVW
OELzXh16+InTaoCw6J3x3i8dxOeSr6/LbiODzB4/Hx7zt0jmp39V2w4yaB7L
f3nmTD2yyeH0t9pDBo+yNSqbHBvRPZs3iqZEf+Sd8tW6P6IRfeEV/yhKIYPf
zc6QnKeNiKpecH+C8C2jjG51diMa9L4y7E8jw91xFU8Ht3dId/ferbVKZMjf
crG8zvM9WqaLFl9XJ/pL9wa6R9AH9F7uW8iMIdG/veMRzX38AV2pjc/rMiLD
l206/3refkDOt+vX1huT4fPbuvfqPM0orJ8UnHWYDLVbXp/hCW5GDY16PtfM
yPCw7FVoXMhH9JT77pipFbGfP4r6S8JbUOU/CdNVTkR/pj/3ejyvBS1HXDi7
1ZnoZ1NJOUIfWhDjqO87hcvE893VrVLN8xktFyxF2rqSYUfTca6dup/RI0EV
sW53MvCLmiVNN3xG9g5qM5z+ZGC/NH7j+a4VnZ79PmUXQ/TPaxrdfbtbkU0D
z+7oWDKcMgfpG5Ot6LGczv2qe2RoWqTeCeZuQ0VVZF2xBDJk0YRPxEMbal9F
TZlKIdY/G50pedGGxAd5R6seE+vTPTexc9uRSpbZWWtiPlg1N1f3raIdqbl8
rCmrJIMKcvBYaGhHfrdyXNdVkSF74FTf3/F2JN3+tbeqhujPRTWz1u3sQPue
qY2S3hLr49bv35vcgYT11W6dbCHWh2TYnAvrRGHVplGlk8S8Uexc+DS5EykE
ae06MU2cl779Kz+edKJWlyNOf4h5J0qh7f7tpk7ksmlZWp9FnI9Ozu7sdV3I
Z+eA3a/vZNDdfc54JrILddpf2vpsFTGf1UipXo7tRpFN/6647aBA+vR8aHlm
N/r1RdbfWIICloK4e6WkG/kMpjrL7aLAJ/uT16Lbu9F2nop/TEkKlK8PLSra
8gWpmf3eHrKPAsGWM1LfE74g9sauMmF1Ckgu5m/2ut+D9GPkHKpPU0C43nRX
fl4P0lNsMn5uTYG1cT/Jgy970IddanyFthSYo2iZaH/pIeKDyZtrT4Eq597Q
jf/1okBjA+siZwocm+BbyY3qRZFBOv1i/hQI7LCf7gnoQ0sLEnwO6cT8WyJe
feDiAJLqDBcxYlDgo8oV2V2eA8iy9LHOKxZxvZq3iXzBA0gB7XsqP0eB+02X
rnQ+GkDOD8woQgsUMB8tlXYZGkArk6qW3P8o0LpJPzbzxCByVHbZc3gzFd66
ul5YozOE2HxhRwrVqVC6+Kbjq9kQGpZ8aeoAVMj0+0+zy24Iyae190prUSEg
tHLbo5tDKOZ1WHSePhUOpnO3qVUNIf5JnZZPZlTov2C044XIMBoqviES70CF
44nDoYy7wyh1SPPcvhQqROmVbliVPIxcHJ6zAx5Q4d3P27FCGcMoeurBeE86
FVTN5VI1ioeRdGvH7rgcKuwQ8ShMbB1GktL4IvU5FaZT1nVpCY6g3hf0ryKt
VPBJU9qdem8EUQ6d7H6+jgalJmtyi++PII5x2ZKbAjRgrvTJNz4aQaEbImIO
b6bBGesApfnSEZT9N+fqb1EaaEk0G+h3jCAPwVprf1karM+0df2xZRRFy6DP
podokJZ1p9ooYRTVJL87aRBJA3cZo8zuB6PoP6/7ycdjaGCQvy7ELmsUKcQ3
85yPp8GPovAjXmWjyKh/t/u9BzQwrAode9Q2iq567DXcWUCDX21Ba5b4xxDd
ZvUO/s80MOW4fvxJyBgqqvzWar6VDlK31FTp0WNoeXLWalGMDn95/u7ACWOo
Wu/qUJIEHXLX+U53ZI0htb/tc8y9dFgR8vbleEusH/0k0KZGh7x91zJOcowj
1HZ2Q+JZOnBbObN4vMeR2tGve3Wf00HM8IQELWCcOC0Sbdyv6EA9gMxswsZR
EKMstqmWDjZim15WJo8jKxvuaMdmOlT3lQW5VI6j45XUHu5xOnic+ivWszSO
OuTq9dO3KMLM6YhDT/0nEG1qLGvQVxE4TNyv9wRPoFviPbvvByqC8MHTRauj
J9DdesFomzBF0N1BErJ9OIHmHDqurE5UhMzBtpH/aifQYVK9TW2JIpyyFvW+
sWoSneu8xrvMUIRPNk9yjgZNotDV3T5S55UgcPcN1YWISZS2949emrMSKE4e
+5h4bxItcv3aLnFNCVIdOb73Z04ikkaVomaQEjh6nDx44fUk4m7otOB8pAR8
d3g6fVcmkUTtSYfbo0qgWWHLmeU1hRIPpoGagzIseivH692cQhdX/TbceVUZ
nqhtkJkNmUI+zsqOm/2UYeObF8akxCnUZZ5sJR6lDEPNAskvn0+hJw7Ox3pK
lMFvtJr0aX4KReebuX9bUYbnG0RP/3SaRo5ZljgnUwUm5XQfXnWfRitOBeKq
z1RA+NCVka++0+ibkKDjQIUK+AU32U+HTyNxnRtOJz+qgPY/n8s9udPojJ7R
wPbfKtA213fj1fg0Emipe7jt2H5gtz/IvHFqBpnr7OnWE1EFifn340tnZ5Di
kIrJCSlVOLpxUcrLcQa9vrbtmB9NFZ4bmeS7+swgFn+A6EYTVfCrXym1TZpB
v4fDKGeCVGFthXW9VscMWvgWcrhzQRWkUnZO8xrNol03ZDN82AcgWdLTS+rY
LEo5UDTtz6EG64ub+XROzaLCGJHefEE1+N7ouTfQaRaJ349dG6isBrULHx3+
3plFs69yfci31MDK1Ic193EWiWyfFZXerQ6f+luuC3TNoofvnfk4VdRB86Ik
v8LgLJKpP3x2o7E6yNz4rODInkXnpqaSmjzVYfGplOsEPwMZBAjfaW5Rh7t8
7fM9hxnonOyiR3v4QeCKk7n16yQD0Sr81hx5dBA8xP03b7VhoOCrOzQEqg7C
aaW99GOuDNQ23aNhyT4IsuduXPt0l4HusX4naJ9AUI/lfr1pZaCgXxt+HhIF
UDEMCB3pYaC0cZf9TBmAp11dwhyjDOQvv2nppTJALCtgv/o8A5ndn/cYPA5E
/HzxqRBkIkP5j+vt4wD+eAQt55sx0c+82UJjMQ1Y29nAQlZM9Gg59tofOQ0Q
pa0ZbLdjog2bj0z1q2nA/q+RNUtuTFTc7KWrZ60BXhcSbxjeZSKGs4twe7YG
hNb3uAwlMtGgZ5yCyUsNSNq9zebqQyaa2in7nq9ZAyqG0uF+ARNZVaxW1JzX
gMWTeasYzUz0tM9h65yGJqwuZ37z72AiIWHP/TEnNEFoC2lUsJ+J9Eevuvk7
aoLi59I3qgwm2tmHXLUTNMFdv/pW+BoW6pdoOfr8qybMq3zmkdVlIfvFoITt
ZVrAmSi4WG3MQp/sRgduftICwYVjk6bHWeh8+DvdEzNaQCnuafA+x0IXx1Uc
z0log+vesZD3gSwUO8Wx4hKnDTdDJL1Oh7PQmXtbQutLtOHuxIWL32JY6LZC
1pu8Vm0ozGDqi2Sw0LF8cwWlTTrAFllccwkT96v0ie9J1IEVT5U/f4ktFViW
lKe/0gH+Lp/Zu59YSIzFwdYb0oF9sf+aXgyw0KP82siyvbrgtHbNHb6/LPRO
Ubrmwjtd8Lto6JfKxUbxq/itDs/rwp2GSCfyOjZqSFQNkN+uB08DBY3NRdko
DS/HsK7pAeOPGH+uChvlG/c8L6Prg1pDiNEgsFFUS7pKtaM+RMV8D99iwEaG
JQ+vmD3WB7LMB94ACzaSD6xkXBM1gMDvSroVtmwU3C3HkDM3gPaazCDWJTZa
vDdnXZdoAB7HfVZZ+rDRqwrJG0vbDkGjxCS6G8hGkZtLjdrtDoEw09S/IZyN
cOBX+lLeIXgVuHeJep+NlobPZ7/RNASOoi8/1lWxEdcYz3RonBEc9dWmab5l
I5PK3cPy34zgkW6Rm1czG53nlDYPMTUG3YEQ9ng/G50RXOt9aYcJJOZ+lxeb
YKOOvSllwREmMH3V2tGUxUZGkb5nQpZNIOvXGd0Dy2z0//8H+D/zqaNd
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  ImageSize->{748.41796875, Automatic},
  Method->{},
  PlotRange->{{-1.5, 1.5}, {0., 63.829295304461766`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.621600293266038*^9, 3.621600910827743*^9, 
  3.621601656208434*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 706},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 9, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 175, 2, 92, "Title"],
Cell[757, 26, 484, 9, 30, "Text"],
Cell[CellGroupData[{
Cell[1266, 39, 336, 4, 64, "Section"],
Cell[1605, 45, 1683, 36, 157, "Text"],
Cell[3291, 83, 1634, 33, 163, "Text"],
Cell[4928, 118, 10442, 251, 675, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15407, 374, 152, 2, 64, "Section"],
Cell[15562, 378, 357, 11, 46, "Input"],
Cell[15922, 391, 300, 6, 30, "Text"],
Cell[16225, 399, 11648, 246, 454, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27910, 650, 144, 2, 64, "Section"],
Cell[CellGroupData[{
Cell[28079, 656, 97, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[28201, 661, 7785, 163, 250, "Input"],
Cell[35989, 826, 33905, 620, 380, "Output"],
Cell[69897, 1448, 34469, 628, 380, "Output"],
Cell[104369, 2078, 34250, 625, 380, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[138668, 2709, 94, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[138787, 2714, 4322, 93, 199, "Input"],
Cell[143112, 2809, 78032, 1345, 396, "Output"],
Cell[221147, 4156, 41422, 743, 396, "Output"],
Cell[262572, 4901, 38923, 703, 430, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[301544, 5610, 130, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[301699, 5615, 5407, 132, 233, "Input"],
Cell[307109, 5749, 36124, 603, 485, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
