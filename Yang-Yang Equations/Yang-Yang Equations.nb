(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    203676,       3931]
NotebookOptionsPosition[    202082,       3872]
NotebookOutlinePosition[    202437,       3888]
CellTagsIndexPosition[    202394,       3885]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Numerical solution of the Yang-Yang model", "Title",
 CellChangeTimes->{{3.620457153457513*^9, 3.620457177555365*^9}, {
  3.6726653841756077`*^9, 3.672665391272469*^9}}],

Cell[TextData[{
 "In this section all the equations are referred to \[OpenCurlyDoubleQuote]",
 StyleBox["Yang, Yang - Thermodynamics of a One-dimensional System of Bosons, \
J. Math. Phys., 10, 1115, year 1969",
  FontSlant->"Italic"],
 "\[CloseCurlyDoubleQuote], abbreviated as \[OpenCurlyDoubleQuote]YY\
\[CloseCurlyDoubleQuote]."
}], "Text",
 CellChangeTimes->{{3.620456931519815*^9, 3.620457004877939*^9}, {
   3.620457056326359*^9, 3.6204571457289143`*^9}, 3.672665379828094*^9}],

Cell[CellGroupData[{

Cell["Method for solving Fredholm equations of the Second kind", "Section",
 CellChangeTimes->{{3.6115552369993*^9, 3.611555239663052*^9}, {
  3.620385366947278*^9, 3.620385376372356*^9}, {3.6203854343016233`*^9, 
  3.620385446136612*^9}, {3.620479284862576*^9, 3.620479286492154*^9}, {
  3.6204817035523863`*^9, 3.620481705998563*^9}}],

Cell[TextData[{
 "This method is taken from \[OpenCurlyDoubleQuote]",
 StyleBox["S. Rahbar and E. Hashemizadeh, A Computational Approach to the \
Fredholm Integral Equation of the Second Kind",
  FontSlant->"Italic"],
 "\[CloseCurlyDoubleQuote] in \[OpenCurlyDoubleQuote]",
 StyleBox["Proceedings of the World Congress on Engineering 2008 Vol II WCE \
2008, July 2 - 4, 2008, London, U.K.",
  FontSlant->"Italic"],
 "\[CloseCurlyDoubleQuote], ISBN:978-988-17012-3-7.\n\nThis method finds the \
numerical solution to the integral equation\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"g", "(", "x", ")"}], "+", " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "a", "b"], 
      RowBox[{
       RowBox[{"K", "(", 
        RowBox[{"x", ",", "y"}], ")"}], 
       RowBox[{"f", "(", "y", ")"}], 
       RowBox[{"\[DifferentialD]", "y"}]}]}]}]}], TraditionalForm]],
  CellChangeTimes->{{3.6203854583221197`*^9, 3.620385595124981*^9}, {
   3.620392820530099*^9, 3.620392826910678*^9}, {3.62039789169037*^9, 
   3.620397897446702*^9}, {3.620455171702137*^9, 3.620455180983314*^9}}],
 "\n"
}], "Text",
 CellFrame->{{0, 0}, {0.5, 0}},
 CellChangeTimes->{{3.620397026212449*^9, 3.620397092344181*^9}, {
   3.62039715902177*^9, 3.620397163066226*^9}, 3.6203971940255547`*^9, {
   3.620397282631509*^9, 3.6203973282703876`*^9}, {3.620455372583241*^9, 
   3.62045540664777*^9}, {3.620455442074275*^9, 3.620455462322323*^9}, {
   3.620457034021098*^9, 3.620457035934676*^9}, {3.6204580055415688`*^9, 
   3.620458005877808*^9}, {3.620481698605481*^9, 3.620481698605596*^9}, {
   3.620541138653984*^9, 3.620541138720511*^9}}],

Cell[TextData[{
 StyleBox["BoundFunction",
  FontWeight->"Bold"],
 ": This module takes the function f as input and as output gives the \
function f in the interval [a,b] and zero otherwise.\n\n",
 StyleBox["Fredholm2ndKind",
  FontWeight->"Bold"],
 ": Gives the numerical solution of the Fredholm equation in the interval \
[a,b]. This takes as input the extremes of integration a and b, the kernel \
K(x,y), g(x) and the number, n, of subdivision of the integration interval \
which is used in the numerical solution. (see ",
 ButtonBox["this link",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://mathematica.stackexchange.com/questions/11594/integral-\
equation-numerical-solution-with-ndsolve"], None},
  ButtonNote->
   "http://mathematica.stackexchange.com/questions/11594/integral-equation-\
numerical-solution-with-ndsolve"],
 ")\n\n",
 StyleBox["Fredholm2ndKindOut",
  FontWeight->"Bold"],
 ":  Gives the numerical solution of the Fredholm equation in the interval \
[c,d] outside of [a,b].This takes as input the extremes of integration a and \
b, the kernel K(x,y), g(x), the number, n, of subdivision of the integration \
interval [a,b] which is used in the numerical solution, the extreme of \
integration c and d of the interval outside [a,b] and the number of \
subdivisions of [c,d]."
}], "Text",
 CellChangeTimes->{{3.620478778215102*^9, 3.620478882793809*^9}, {
  3.620480851933937*^9, 3.620480857193318*^9}, {3.620480999015538*^9, 
  3.620481014605266*^9}, {3.6205411411306562`*^9, 3.6205411412189903`*^9}, {
  3.620646723578123*^9, 3.620646983813792*^9}, {3.67259496649566*^9, 
  3.672595005143407*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BoundFunction", "[", 
     RowBox[{"f_", ",", "a_", ",", "b_"}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Function", "[", "\[IndentingNewLine]", 
     RowBox[{"Piecewise", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.", ",", 
          RowBox[{"#", "<", "a"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"0.", ",", 
          RowBox[{"#", ">", "b"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"f", "[", "#", "]"}], ",", "True"}], "}"}]}], "}"}], "]"}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "Fredholm2ndKind", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"Method", "\[Rule]", "Automatic"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Fredholm2ndKind", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a_", ",", "b_", ",", "k_", ",", "g_"}], "}"}], ",", 
      RowBox[{"n_", "?", "IntegerQ"}], ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "step", ",", "SI", ",", "GI", ",", "KMatrix", ",", "W", ",", "DMatrix",
         ",", "f", ",", "deltaX", ",", "delta", ",", "fI", ",", "ftemp"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"step", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b", "-", "a"}], ")"}], "/", "n"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"SI", "=", 
        RowBox[{"Range", "[", 
         RowBox[{"a", ",", "b", ",", "step"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"GI", "=", 
        RowBox[{"g", "/@", "SI"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"KMatrix", "=", 
        RowBox[{"Outer", "[", 
         RowBox[{"k", ",", "SI", ",", "SI"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"W", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"step", "/", "2"}], "}"}], "~", "Join", "~", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"step", ",", 
           RowBox[{"n", "-", "1"}]}], "]"}], "~", "Join", "~", 
         RowBox[{"{", 
          RowBox[{"step", "/", "2"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"DMatrix", "=", 
        RowBox[{"DiagonalMatrix", "[", "W", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"deltaX", "[", 
         RowBox[{"x_", "?", "NumericQ"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"W", ".", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"k", "[", 
              RowBox[{"x", ",", "#"}], "]"}], "&"}], "/@", "SI"}], ")"}]}], 
         "-", 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"k", "[", 
            RowBox[{"x", ",", "y"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", "a", ",", "b"}], "}"}]}], "]"}]}]}], ";", 
       RowBox[{"delta", "=", 
        RowBox[{"deltaX", "/@", "SI"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fI", "=", 
        RowBox[{"LinearSolve", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"IdentityMatrix", "[", 
            RowBox[{"n", "+", "1"}], "]"}], "+", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"DiagonalMatrix", "[", "delta", "]"}], "-", 
             RowBox[{"KMatrix", ".", "DMatrix"}]}], ")"}]}], ",", "GI"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"f", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"OptionValue", "[", "Method", "]"}], "===", 
           "NoInterpolation"}], ",", "\[IndentingNewLine]", "fI", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"BoundFunction", "[", 
           RowBox[{
            RowBox[{"Interpolation", "[", 
             RowBox[{"Transpose", "@", 
              RowBox[{"{", 
               RowBox[{"SI", ",", "fI"}], "}"}]}], "]"}], ",", "a", ",", 
            "b"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", "f"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Fredholm2ndKindOut", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "k_", ",", "g_"}], "}"}], ",", 
     RowBox[{"n_", "?", "IntegerQ"}], ",", 
     RowBox[{"{", 
      RowBox[{"c_", ",", "d_"}], "}"}], ",", 
     RowBox[{"m_", "?", "IntegerQ"}], ",", 
     RowBox[{"fIni_:", "True"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fInTempi", ",", "stepIn", ",", "SIni", ",", "stepOut", ",", "SOuti", 
       ",", "GOuti", ",", "KMatrixOut", ",", "fOuti"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Variable", " ", "inside", " ", "the", " ", 
       RowBox[{"interval", " ", "[", 
        RowBox[{"a", ",", "b"}], "]"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"stepIn", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "-", "a"}], ")"}], "/", "n"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SIni", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"a", ",", "b", ",", "stepIn"}], "]"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"i", "-", 
        RowBox[{
        "th", " ", "component", " ", "of", " ", "the", " ", "interval"}]}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"fInTempi", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"fIni", "===", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Fredholm2ndKind", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a", ",", "b", ",", "k", ",", "g"}], "}"}], ",", "n", ",", 
           RowBox[{"Method", "\[Rule]", "NoInterpolation"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "fIni"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Variable", " ", "and", " ", "functions", " ", "outside", " ", "the", 
        " ", 
        RowBox[{"interval", " ", "[", 
         RowBox[{"a", ",", "b"}], "]"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"stepOut", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"d", "-", "c"}], ")"}], "/", "m"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SOuti", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"c", ",", "d", ",", "stepOut"}], "]"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"i", "-", 
        RowBox[{
        "th", " ", "component", " ", "of", " ", "the", " ", "interval"}]}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"GOuti", "=", 
       RowBox[{"g", "/@", "SOuti"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"i", "-", 
        RowBox[{"th", " ", "component", " ", "of", " ", "the", " ", "g"}]}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"KMatrixOut", "=", 
       RowBox[{"Outer", "[", 
        RowBox[{"k", ",", "SOuti", ",", "SIni"}], "]"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"Matrix", " ", "form", " ", "of", " ", "k"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"fOuti", "=", 
       RowBox[{"GOuti", "+", 
        RowBox[{"stepIn", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"KMatrixOut", ".", "fInTempi"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"KMatrixOut", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "*", 
               RowBox[{"fInTempi", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"KMatrixOut", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", 
                  RowBox[{"n", "+", "1"}]}], "]"}], "]"}], "*", 
               RowBox[{"fInTempi", "[", 
                RowBox[{"[", 
                 RowBox[{"n", "+", "1"}], "]"}], "]"}]}]}], ")"}], "/", 
            "2"}]}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"BoundFunction", "[", 
       RowBox[{
        RowBox[{"Interpolation", "[", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"SOuti", ",", "fOuti"}], "}"}], "]"}], "]"}], ",", "c", 
        ",", "d"}], "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.620476066514509*^9, 3.62047607191448*^9}, {
   3.620477594017815*^9, 3.620477601699275*^9}, {3.620477636327077*^9, 
   3.620477637778434*^9}, {3.6204778398171597`*^9, 3.6204778850422983`*^9}, {
   3.620477925143426*^9, 3.620477925337302*^9}, 3.620477994641719*^9, {
   3.620478213209318*^9, 3.620478218519649*^9}, {3.620478266726776*^9, 
   3.620478268263399*^9}, {3.620478331921566*^9, 3.620478334134049*^9}, {
   3.620479648394898*^9, 3.620479675840974*^9}, {3.6204798576734133`*^9, 
   3.620479865328518*^9}, {3.620479996045188*^9, 3.6204800033329067`*^9}, {
   3.6204803410302973`*^9, 3.620480353705718*^9}, {3.620480387241764*^9, 
   3.620480391000415*^9}, {3.6204805943336897`*^9, 3.6204806075555058`*^9}, {
   3.620480642047008*^9, 3.620480713994363*^9}, {3.620481221737495*^9, 
   3.6204812661272497`*^9}, {3.62048130601933*^9, 3.6204813076904697`*^9}, {
   3.620481377469324*^9, 3.620481409574387*^9}, {3.620481586776991*^9, 
   3.620481592717753*^9}, {3.620541007716556*^9, 3.620541009747465*^9}, {
   3.6205421797916594`*^9, 3.620542182040523*^9}, {3.620554023840457*^9, 
   3.620554026495284*^9}, {3.6206259648597918`*^9, 3.620625983713524*^9}, {
   3.620626581483184*^9, 3.6206266095323*^9}, {3.620626692899693*^9, 
   3.620626701482089*^9}, {3.620626869718505*^9, 3.620626872068624*^9}, {
   3.6206269613590527`*^9, 3.620626990251835*^9}, {3.620627026113574*^9, 
   3.620627072709614*^9}, 3.620627105708633*^9, {3.620630381093821*^9, 
   3.62063038909709*^9}, {3.6206472847099457`*^9, 3.620647286195878*^9}, {
   3.620648044884432*^9, 3.620648047482171*^9}, {3.620648086065258*^9, 
   3.620648090846382*^9}, {3.6206481548166122`*^9, 3.6206481553432817`*^9}, {
   3.6206485364216623`*^9, 3.620648540381288*^9}, {3.621596027591729*^9, 
   3.621596053432393*^9}, {3.621596976281406*^9, 3.621596986661578*^9}, 
   3.6726363495988293`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Yang-Yang model:", "Section",
 CellChangeTimes->{{3.6116416125772753`*^9, 3.611641614610937*^9}, {
  3.620735822869377*^9, 3.620735832852909*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"m", "=", "0.5"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Renormalized", " ", "chemical", " ", "potential"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", "1000"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"number", " ", "of", " ", "discretization"}], "*)"}]}]}], "Input"],

Cell["\<\
These are the functions to calculate the spectrum, density of states (DOS). \
We solve the equation recursively until it converges to a selected precision.\
\
\>", "Text",
 CellChangeTimes->{{3.6726654820605707`*^9, 3.6726655160220833`*^9}, {
  3.672665556908677*^9, 3.672665615493784*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eYY", "[", 
   RowBox[{
   "\[Mu]_", ",", "t_", ",", "\[Lambda]_", ",", "a_", ",", "b_", ",", "n_", 
    ",", "precision_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "step", ",", "xi", ",", "\[Epsilon]0", ",", "\[Epsilon]0i", ",", "kc", 
      ",", "kci", ",", "kT", ",", "\[Epsilon]i", ",", "\[Epsilon]iprev", ",", 
      "converged", ",", "\[Epsilon]converged"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"converged", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"step", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "a"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xi", " ", "=", " ", 
      RowBox[{"Range", "[", 
       RowBox[{"a", ",", "b", ",", "step"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Epsilon]0", "[", "k_", "]"}], ":=", 
      RowBox[{
       RowBox[{"-", "\[Mu]"}], "+", 
       RowBox[{"k", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Epsilon]0i", "=", 
      RowBox[{"\[Epsilon]0", "/@", "xi"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"kc", "[", 
       RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
      RowBox[{"\[Lambda]", "/", 
       RowBox[{"(", 
        RowBox[{"Pi", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Lambda]", "^", "2"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"x", "-", "y"}], ")"}], "^", "2"}]}], ")"}]}], ")"}]}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"kci", "=", 
      RowBox[{"Outer", "[", 
       RowBox[{"kc", ",", "xi", ",", "xi"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"kT", "[", "\[Epsilon]_", "]"}], ":=", 
      RowBox[{"t", "*", 
       RowBox[{"Log", "[", 
        RowBox[{"1", "+", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "\[Epsilon]"}], "/", "t"}], "]"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Epsilon]converged", "[", "\[CapitalDelta]\[Epsilon]_", "]"}],
       ":=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", "\[CapitalDelta]\[Epsilon]", "]"}], "<", 
         "precision"}], ",", "1", ",", "0"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Epsilon]i", "=", "\[Epsilon]0i"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"converged", "===", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Epsilon]iprev", "=", "\[Epsilon]i"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Trapezoidal", " ", "rule", " ", "sum"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"\[Epsilon]i", "=", 
         RowBox[{"\[Epsilon]0i", "-", 
          RowBox[{"step", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"kci", ".", 
              RowBox[{"(", 
               RowBox[{"kT", "/@", "\[Epsilon]iprev"}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"kci", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1"}], "]"}], "]"}], "*", 
                 RowBox[{"kT", "[", 
                  RowBox[{"\[Epsilon]iprev", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"kci", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "n"}], "]"}], "]"}], "*", 
                 RowBox[{"kT", "[", 
                  RowBox[{"\[Epsilon]iprev", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "]"}]}]}], ")"}], "/", 
              "2"}]}], ")"}]}]}]}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"converged", "=", 
         RowBox[{"Times", "@@", 
          RowBox[{"(", 
           RowBox[{"\[Epsilon]converged", "/@", 
            RowBox[{"(", 
             RowBox[{"\[Epsilon]iprev", "-", "\[Epsilon]i"}], ")"}]}], 
           ")"}]}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "\[Epsilon]i"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gYY", "[", 
    RowBox[{
    "\[Mu]_", ",", "t_", ",", "\[Lambda]_", ",", "a_", ",", "b_", ",", "n_", 
     ",", "precision_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eYYDiscrete", ",", "eYYfunction", ",", "k", ",", "g"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"eYYDiscrete", "=", 
       RowBox[{"eYY", "[", 
        RowBox[{
        "\[Mu]", ",", " ", "t", ",", " ", "\[Lambda]", ",", " ", "a", ",", 
         "b", ",", "n", ",", "precision"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eYYfunction", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "a", ",", "b", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"b", "-", "a"}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"n", "-", "1"}], ")"}]}]}], "}"}]}], "]"}], ",", 
           "eYYDiscrete"}], "}"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"g", "[", "x_", "]"}], ":=", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "Pi", "*", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"eYYfunction", "[", "x", "]"}], "/", "t"}], "]"}]}], 
           ")"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"k", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"eYYfunction", "[", "x", "]"}], "/", "t"}], "]"}]}], 
          ")"}]}], "*", 
        RowBox[{"\[Lambda]", "/", 
         RowBox[{"(", 
          RowBox[{"Pi", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Lambda]", "^", "2"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"x", "-", "y"}], ")"}], "^", "2"}]}], ")"}]}], 
          ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Fredholm2ndKind", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "k", ",", "g"}], "}"}], ",", "n"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.611640354663026*^9, 3.61164040265746*^9}, {
   3.6116404401335897`*^9, 3.611640530493702*^9}, {3.611640573943465*^9, 
   3.611640671617311*^9}, {3.611640899298436*^9, 3.611640904519021*^9}, {
   3.611640985969193*^9, 3.6116410160624857`*^9}, {3.6116411988796053`*^9, 
   3.611641222085936*^9}, {3.611641270340275*^9, 3.611641355556923*^9}, {
   3.6116415222023478`*^9, 3.611641522598929*^9}, {3.611641698510393*^9, 
   3.6116417116807117`*^9}, {3.611641870309414*^9, 3.6116418953170137`*^9}, {
   3.61164198524081*^9, 3.6116420354256277`*^9}, {3.611642155399967*^9, 
   3.6116422297042828`*^9}, {3.6116423025291433`*^9, 3.61164232863986*^9}, {
   3.611642598014509*^9, 3.611642598202846*^9}, {3.611642896916457*^9, 
   3.611642907986734*^9}, 3.611643052317856*^9, {3.611643123025055*^9, 
   3.6116432070823193`*^9}, {3.611643296690275*^9, 3.6116433261209803`*^9}, {
   3.611643874443898*^9, 3.6116439089356318`*^9}, {3.6116439406163187`*^9, 
   3.6116439649510317`*^9}, {3.611644028019371*^9, 3.6116440637362127`*^9}, {
   3.611644730680982*^9, 3.611644755642276*^9}, {3.611644845904614*^9, 
   3.61164488625706*^9}, {3.6116449360417557`*^9, 3.6116449406097593`*^9}, {
   3.6116449783314247`*^9, 3.611644981838231*^9}, {3.611645053652117*^9, 
   3.611645075642686*^9}, {3.6116452283644533`*^9, 3.611645231165831*^9}, {
   3.611645269295608*^9, 3.611645272969954*^9}, {3.611645372568808*^9, 
   3.611645429455617*^9}, {3.6116454624133244`*^9, 3.611645484383459*^9}, {
   3.6116457144839487`*^9, 3.611645853995326*^9}, {3.6116459428276663`*^9, 
   3.611645997580596*^9}, {3.611652953826956*^9, 3.611652975356257*^9}, {
   3.611653049495078*^9, 3.6116530545847597`*^9}, {3.611653124918868*^9, 
   3.611653151311928*^9}, {3.611654139371006*^9, 3.611654226523841*^9}, {
   3.6116545981860247`*^9, 3.61165461750069*^9}, 3.611655956799118*^9, {
   3.611656015286892*^9, 3.6116560175789633`*^9}, {3.611656164953681*^9, 
   3.6116561711566143`*^9}, {3.6116562177235117`*^9, 
   3.6116562506718407`*^9}, {3.6117279080201073`*^9, 3.611727945691263*^9}, 
   3.611728034583541*^9, {3.611729257870891*^9, 3.611729282215911*^9}, {
   3.611729324709515*^9, 3.611729358932954*^9}, {3.611736351758819*^9, 
   3.611736402349845*^9}, {3.611736442671198*^9, 3.611736570438724*^9}, {
   3.612262697507269*^9, 3.612262700410911*^9}, {3.620663929406283*^9, 
   3.620663963066985*^9}, {3.620664618543935*^9, 3.6206646203147907`*^9}, {
   3.620664653662739*^9, 3.620664654660881*^9}, 3.620665603871608*^9, {
   3.6206664814565763`*^9, 3.620666684983276*^9}, {3.620666715214529*^9, 
   3.62066671625874*^9}, {3.620726788964118*^9, 3.620726831011216*^9}, {
   3.620726886330956*^9, 3.6207270278779917`*^9}, {3.62072706277774*^9, 
   3.620727162710559*^9}, {3.620727345243293*^9, 3.62072736819293*^9}, {
   3.620727402179975*^9, 3.6207274519942627`*^9}, {3.620727536485059*^9, 
   3.6207275463220987`*^9}, {3.620727903641409*^9, 3.6207279049798603`*^9}, {
   3.6207279810208797`*^9, 3.620728001630924*^9}, {3.6207286770231543`*^9, 
   3.620728698671877*^9}, {3.620728842974237*^9, 3.620728848155995*^9}, 
   3.6207295217380667`*^9, {3.620729673475298*^9, 3.620729673646029*^9}, {
   3.620729713929842*^9, 3.620729746650735*^9}, {3.620729838311076*^9, 
   3.620729838469108*^9}, {3.6207298772377567`*^9, 3.6207298799250193`*^9}, 
   3.620729975541504*^9, 3.6207300102254047`*^9, 3.6207304666639023`*^9, {
   3.6207305019392977`*^9, 3.620730542556306*^9}, {3.620730905908679*^9, 
   3.620730994552597*^9}, {3.6207310298208942`*^9, 3.620731112668536*^9}, {
   3.620731231482501*^9, 3.620731239690042*^9}, {3.6207313195106564`*^9, 
   3.620731320770273*^9}, {3.620731386730736*^9, 3.620731430989809*^9}, {
   3.620731468857423*^9, 3.620731509322176*^9}, {3.6207315657879553`*^9, 
   3.620731573898406*^9}, {3.620731612835528*^9, 3.6207316877268333`*^9}, {
   3.620731789995391*^9, 3.620731793150114*^9}, {3.620731877269422*^9, 
   3.6207319110411463`*^9}, 3.620731952622698*^9, {3.620731987441894*^9, 
   3.620732022406427*^9}, 3.620732212730328*^9, 3.620734282856864*^9, {
   3.620734447513959*^9, 3.6207345291723948`*^9}, {3.6207345612736883`*^9, 
   3.620734586639826*^9}, {3.6207349660431833`*^9, 3.620734970303072*^9}, {
   3.62073512563955*^9, 3.620735185971635*^9}, {3.6207352275995693`*^9, 
   3.620735232653599*^9}, {3.620735275282679*^9, 3.620735369457885*^9}, {
   3.620735422288993*^9, 3.6207354409296513`*^9}, {3.6207354913365707`*^9, 
   3.6207355069790707`*^9}, {3.6207358139735537`*^9, 3.620735818145471*^9}, {
   3.6209855183705*^9, 3.6209855205056257`*^9}, {3.620987532747799*^9, 
   3.620987629961296*^9}, {3.62098767901201*^9, 3.620987886654737*^9}, {
   3.6209885571519127`*^9, 3.6209885867803926`*^9}, {3.620988622185238*^9, 
   3.62098862300462*^9}, {3.621068021048416*^9, 3.6210680256771584`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plots:", "Section",
 CellChangeTimes->{{3.620736627809449*^9, 3.620736630799176*^9}, {
  3.6209865441992617`*^9, 3.6209865468480873`*^9}}],

Cell[CellGroupData[{

Cell["Spectrum:", "Subsection",
 CellChangeTimes->{{3.620986557694192*^9, 3.620986560079363*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PlotSpectrumComparision", "[", 
    RowBox[{"a_", ",", "b_", ",", " ", "t_"}], "]"}], ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eYYDiscrete1", ",", "eYYfunction1", ",", "eYYDiscrete2", ",", 
       "eYYfunction2", ",", "eYYDiscrete3", ",", "eYYfunction3"}], "}"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Yang", "-", "Yang"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"eYYDiscrete1", "=", 
       RowBox[{"eYY", "[", 
        RowBox[{
        "m", ",", " ", "t", ",", " ", "0.01", ",", " ", "a", ",", "b", ",", 
         "n", ",", 
         RowBox[{"N", "[", 
          RowBox[{"1", "/", "n"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eYYfunction1", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "a", ",", "b", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"b", "-", "a"}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"n", "-", "1"}], ")"}]}]}], "}"}]}], "]"}], ",", 
           "eYYDiscrete1"}], "}"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eYYDiscrete2", "=", 
       RowBox[{"eYY", "[", 
        RowBox[{
        "m", ",", " ", "t", ",", " ", "0.1", ",", " ", "a", ",", "b", ",", 
         "n", ",", 
         RowBox[{"N", "[", 
          RowBox[{"1", "/", "n"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eYYfunction2", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "a", ",", "b", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"b", "-", "a"}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"n", "-", "1"}], ")"}]}]}], "}"}]}], "]"}], ",", 
           "eYYDiscrete2"}], "}"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eYYDiscrete3", "=", 
       RowBox[{"eYY", "[", 
        RowBox[{
        "m", ",", " ", "t", ",", " ", "1.", ",", " ", "a", ",", "b", ",", "n",
          ",", 
         RowBox[{"N", "[", 
          RowBox[{"1", "/", "n"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eYYfunction3", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "a", ",", "b", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"b", "-", "a"}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"n", "-", "1"}], ")"}]}]}], "}"}]}], "]"}], ",", 
           "eYYDiscrete3"}], "}"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "Plot", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"eYYfunction1", "[", "x", "]"}], ",", " ", 
          RowBox[{"eYYfunction2", "[", "x", "]"}], ",", " ", 
          RowBox[{"eYYfunction3", "[", "x", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "a", ",", "b"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "35."}], ",", "5."}], "}"}]}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", "\"\<x\>\"", "}"}]}], ",", 
        RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0.01", ",", "0.1", ",", "1"}], "}"}]}], ",", " ", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"\"\<t = \>\"", " ", "<>", 
          RowBox[{"ToString", "[", "t", "]"}]}]}], ",", " ", 
        RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotSpectrumComparision", "[", 
  RowBox[{
   RowBox[{"-", "1.5"}], ",", "1.5", ",", "0.1"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotSpectrumComparision", "[", 
  RowBox[{
   RowBox[{"-", "1.5"}], ",", "1.5", ",", "1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotSpectrumComparision", "[", 
  RowBox[{
   RowBox[{"-", "1.5"}], ",", "1.5", ",", "1.4"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6207366883156757`*^9, 3.620736770497986*^9}, {
   3.6207368029286947`*^9, 3.6207368353754807`*^9}, {3.620736866885721*^9, 
   3.620736867035837*^9}, {3.6207369034263153`*^9, 3.62073690367872*^9}, {
   3.620736939992519*^9, 3.620736940676154*^9}, {3.620737151650104*^9, 
   3.620737169760029*^9}, 3.620737201003812*^9, {3.6207372310653267`*^9, 
   3.620737267877941*^9}, {3.620738666412094*^9, 3.6207386694839993`*^9}, {
   3.62098447454818*^9, 3.620984550440926*^9}, {3.620985709264975*^9, 
   3.620985783211986*^9}, {3.6209859024227877`*^9, 3.620985908754682*^9}, {
   3.620986001526363*^9, 3.620986002083252*^9}, {3.6209860564374847`*^9, 
   3.6209860623906507`*^9}, 3.620986580226358*^9, {3.620988668356933*^9, 
   3.620988673228591*^9}, {3.621067981837726*^9, 3.621067995301605*^9}, {
   3.621143256000033*^9, 3.621143301169374*^9}, 3.621143957559039*^9, 
   3.6211439912851353`*^9, {3.6211440489994926`*^9, 3.621144065211932*^9}, {
   3.6211443444509373`*^9, 3.621144364215157*^9}, {3.621144488215498*^9, 
   3.621144488462508*^9}, {3.621144724169161*^9, 3.6211447531900187`*^9}, {
   3.621157813301835*^9, 3.621157817522253*^9}, {3.621157917170454*^9, 
   3.621157917262928*^9}, 3.6211579540810337`*^9, {3.6211581159148827`*^9, 
   3.621158116065838*^9}, 3.621158155245117*^9, 3.621158227778339*^9, 
   3.621166407943411*^9, {3.62143500291331*^9, 3.621435004399117*^9}, {
   3.6215893076494493`*^9, 3.621589419986023*^9}, {3.621589479540288*^9, 
   3.6215894860077143`*^9}, {3.621589516859622*^9, 3.62158954862155*^9}, 
   3.6215901379093313`*^9, {3.621590173222559*^9, 3.621590173638376*^9}, 
   3.62159025690802*^9, {3.621590422141827*^9, 3.62159042871593*^9}, 
   3.6215909239649973`*^9, {3.6215911382888613`*^9, 3.621591155395554*^9}, 
   3.621591702875173*^9, {3.621591795939742*^9, 3.621591800515785*^9}, {
   3.621591839151663*^9, 3.6215918427816*^9}, 3.62159224012809*^9, 
   3.621592532138278*^9, {3.621592564459422*^9, 3.621592576162365*^9}, {
   3.6215945375048227`*^9, 3.62159454075522*^9}, {3.621597020420979*^9, 
   3.621597025253605*^9}, {3.6215970756702023`*^9, 3.621597078772839*^9}, {
   3.621597191560601*^9, 3.621597202949356*^9}, {3.6216000222713747`*^9, 
   3.6216000253986073`*^9}, {3.672665527021409*^9, 3.672665547024138*^9}, {
   3.6726683422430077`*^9, 3.672668422639997*^9}, {3.672668481665354*^9, 
   3.672668484387621*^9}, {3.6726685512632933`*^9, 3.672668577256472*^9}, {
   3.672668656002981*^9, 3.672668657455615*^9}, {3.672668706686181*^9, 
   3.672668708628584*^9}, {3.67266875737704*^9, 3.6726687714409637`*^9}, {
   3.672668836748827*^9, 3.6726689419637117`*^9}, 3.6726689725959053`*^9, {
   3.672669009275383*^9, 3.672669010756228*^9}, {3.672669047929777*^9, 
   3.672669052456272*^9}, {3.672669117683075*^9, 3.672669136196423*^9}, {
   3.672669195925693*^9, 3.6726692038523893`*^9}, {3.672669326705249*^9, 
   3.672669331349926*^9}, {3.672669363006124*^9, 3.6726694268980103`*^9}, {
   3.672669469171681*^9, 3.672669491344689*^9}, {3.672669586593061*^9, 
   3.672669586682832*^9}, {3.672669887018882*^9, 3.672669895958601*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
+USq4hOfs9+YiTSju96vm3h51HAyrHp1JrgJtbIezhWoqeHBYF0mr0wjUt/I
/6zwgxp2PDKRW8nTiKJlGSqfE9WwQM8za+eJBvRyc8/2rI9q+KRYMmMqpQFp
Svx+6P9ZDafEL07U725AyWOzpWub1fDjrOh+T6lvSC/x4MOxf2p4Rf14zSrJ
OnQbfcyQ0QVsnVjL9XtlHRqZP6YlcB3wsGvKqbrRWiQlPVQwdxNwhZJZhU9K
LeLjaael3gP8KvE3FparRReuF1d0OgHmefErf8/RGqQod8lYIQYw/5HReK2b
VUj30emGxV+AXwpWDu8/WoVCONSvKU8BniXjJfklq1Dzn/YgGwbg9kTjD52j
lehn9tzOHwuA3wuOhN8yr0TSgWZlBzgJvIkx9O7x0wqk4udySVmQwJJJA8+D
wsrQDhWNjnPyBN7mtcWD7lCGVjux+aseJPBW82vep/XKkK33WUnpQwQWVWgO
ZQmXIXZJgYqlIwTmwzjbIKgUdQr0suzVCcz+PWpkp99XtMnjQU/3BQL/K+ye
ePboK1LQTy4P0SbwUoTQ9PfzX9GWvCgnHR0Cz9/x+efJ+xWNdhno4SsEJunO
QnQvjE7xJJRZGhAYrSv2N/8PoXfnh1Yo3ydwYbt81Lb6EkTmLaGKBwTOC0tN
bfEsQSMpH05qmhM4XSqsXJGrBC0m6GRpWxI4Ehzm/nF8QS53hBYVbQnsZHFY
z2e+EC11VW8wdiXw4cYc8U9DeeiGurL15SACD3GVyeYn5CHT+IAi4/cE9lZv
Vi65l4d26Lvtswqm8typy/X0XPTR9mm4WyiVh+/0/LWYg3aPN7l5RFL5veDp
bQLZyNvT8NGqBCqPTViW6sxCfQuND35TPtybs3ZfaBbarrnvXU0ilV9o3qm6
LQuFayrceJ5MYKVD3NevyWSiE0Wqgw1pBN6yZt5d8nU62v/0pd9AFoEfOwl8
OLAuHTlvv7X5fTaBq+n7iyDwI1K6sKrxTA6Vd9yjX/+QhmqFidSEXCqP7b4S
8DkFPTWSVVEroOZTaN4yBlJQx0N5jl7KVp4Cbz5VJKNk7210u89UbqmJ65uT
kDDvSdWkQgJbq6FdnOMJqPTdYuJwMYFrM7vV+R8lIP5sy5gHXwgstmNeX3wu
HnmUry5jUK7lOeCnyhGPrqSoPZkpofKumAUb0Vi0zt0hpg1T7zuH+F9GxyCu
2bC6E1+p8ah7r//OGGSZdlg0h7J1goBhutwHtME7SMqjlMABY2sDvwVGIrvS
eTbecgL3b7Tty06IQIa9MwEmlKVPDkiF5oejD1LnzYopl8blFpp0haLuOfL7
zQoC87aJrdQcD0GiYVsef6Sst8JTU34xGD2LsD43T5lx26B/efN7NGZhV+5W
SWAVv+rdo3uDUI0Zj2E1ZQ8sZ1WvFojCBsIJriqqPsRWrwq59Q5FdvviZ5Qf
aFmef2bpjyQ7+27nU85/2h1s7OqH/itYeXySckTBzStGp31Q42BmrWY1gRWE
FMb3m71FSk57LBwo19twPf3r5YXe/NXTiaN8p61nXe3H16hg3RGHOsosucyY
oMZXaK9weT+dsr+f28E7DDc0eHDm1YYaAu8mr1Xv43+JDgQii/2UsZbs9SUF
V5TetiP4HOWrHzlo1bouqEtCgt2Ecp9QOrs0wwkttaWnOFH+r11XqlzBHj3e
Xh3gS1nFf/ncDTsb1PPkAfpA2ex80uO5Iks0di14zyfKB0Ri9ost30ctMac6
iih7v5txvOhuhDJ7HUrLKXds8vRevUkPafnvp9dS3iaud/a79klUy2es30A5
rf2ZuMNRWXi5R5S7kfIi59uPtZ+1YWDLhfl6ytFcNjzZ7bfA1IBTqpryMW9J
7KJ1F+yuKAdhyqP8LdZaVRaQ4zF7Io9y+TkswBttBR5BBxSTKQf5CNGt9W3B
0W3GJISyaYt5TbewI9StgO/ulA8LVsaqtzsDY3qjpyVlzjRe1Hb6OTgtOTpd
o2yueUSGS+oFaI5ZZ6j97/fQjEOUOd1g0+ZVkuKUwddvlcWQO9Ck5TrZKCcd
+GIV89UDpLKX63qp+bG3FtBa4/wGslPf2/pQHhQkilT0vUFs/UNZI8rx3QcF
Dm/xhdhj/3YoUuZ9evv5/UU/kG0272ym1kupJvOQ27g/aNEN/MIoP9n6lhbZ
9Q4+3ZN+Y0j5Jyq43pIfCE437I//otZngK8W32RCEJy6uIEjkfLp28PVnEHv
YUVyKtsdyp841isqWYfAi+SNX1uo9e56wnR99P4IEL0ifMGPqpf6rs1vVihE
wsrQjb5ylAXNW1abHoqC87UKgU1lBNapi1zeGBUNWfUidA7KozNrmL3xMXDL
5/MQQdUrd8lwjo9ULGTsGtCqpup7nwd6fDQ5FnS0vj07R9lusw0tLi0ObO7r
yWsgavyJ/pH72QmQr7g4JE71C9l1RbFbDibC2iFeFx+qv1zqCrzdmJcIsQKf
BxeKCBz+UKNXrjAJ1t1XWyqn+tG+oLy2BZwCzsJGLxSo/qUz9qbsVUM6FF6/
/8+O6o92mabPlS5kgOTTOL7sTKr+HNVhojkDDDNf0X9/IvDMaqcbiWafYKl+
fIVWBrXeww90cZtnwgVH1zB6KoEby8Obmq2zgTG8ITU4jpq/3Z4ZKbnZEGBj
cyMqlsCz3rbeL+ay4YjT4e6YGAILX9M+d9AuB5T64pSiowlsOLW6OtgxF449
dn9lHU6NF7RCN13zgZ24GvjiHVWPq2sjhkryYaTARv2+P4GL5rc5mS7mw5Jv
q9QFP2p+uhsOW1gXwG2dteEbfAi87sOeLGeTz3DkSfU+K08C75EZjIs4WwQM
1dT9mS4EvqV+0bObD4Gg2Fl+UWp/LJdPunvzPIJsCS7Z5HsEltqxfHLIC8EF
g/FXB+8SmPmi47kNB4a10SKsE8YELjF5qfbUEUP3TomfJ24SWEOmP//Nw6/g
aZY98pXar03y36ekXiyDtP0rv6VR+7/nLtOWJ4/LIDelfeoLdT5ID1FkHX1X
Bn66Ir111PmB6dh+5ntbGbzL993Vt4/qnwT/75VXy+GosL5zjxSBU2u8pQwM
KmC0he05IUTt991ucevvV8GnEY/Ki2OABTQv13d7VUH42NkTyYOAD5dsn01I
o/KcMidWL+Dn0WXHVGlV4FCVJuLZBpjPmH3onmU11Jp82GnwFbACzUm8zLYG
gi+du/8jBLA9m3Wkzcs6UO0f69lzErDn6YgXiXF1cLO9sq+NABzqW3m3q7wO
3D6VzNgpAy7cJiKvylkPbjLE9Yz9gFlESdVK93qofrcB2kUBOz3nYrx79Q10
lXW0V9HUsDNHxLEsz0Y4YjiQxemrhtU57ljbVjeDUHqzRkmpKjZY07LTsbMZ
PlqxmdwvVsWO6492OY82gz3vTAR/nirO2Sqm5r6yBU6Vld6/nKyKdyh3rw4k
WiBppCoq0kcVc1lfCssqaAGnAGmr09dVccPIsdKppFZwpjtd4KDOz9dqtq83
et0OM2eVFnS5VHB5pDG2DesClkB52LUOJUwogany3V54t9oqLuHFIRz+PVl/
wrcf8gLd4jevOIhLw2Z8zgUNwnZ3H8FPG+Xwo6+vSzjth6FTzz6m9aEsPm1+
01b75Sg8llMPqV6xCyc/fS7NfPALJs7GrV6/QgJXLxK5q8+Nw7Gfz0o3RAjj
XqbviZ064+AWGLCH+6Ewnp7pbz+uPw7aR/AXPlVhvHnSZe75g3F4+ath1+Ve
IWzZgw8tvRkH/VEcGLdVCIt+IQrJb+Og6NqwGBoniB84E6jr/AQETISwGSM+
vIGdqEm9NAlajWy1a5248SfZp5/h+iQcwmemNfdy4wv6hcmthpOwITDYu6pv
DfbOV/BctJwE82LhCybqa/Ba890aGr6T8Hf8vozhWi68qpvv23j9JEyOGjzs
SuXErJyRpt0np2DkKH+x4RZ2HDIo8fWL5hTEiNqoTnaw4cPrb2VevDwFmm/l
+Mt92bDt/R9+9kZToA+xvIacbHhWvFG7xnUKAtbHvu0f/oto3gVtd9EU3Nl0
Jkvn8wIavOv1PfEwDcroGxqDpxkoMoCxsY+gwdoOl4bnVgxEHYIvC5yhwfve
VWxOf0jUIrS9xeUaDcaXbq41W6Cj0sriumsONODdYv/e6cAk+rCdVsJTTIOX
BgFGPUIjSP+Czt+j5TTQXb/wNJMYRsJOhcp29TRYKDjqd+fBEPJtdS8Y7qFB
VKtwanD9AHJxFcv68pcG/X9XhVwy6kUq6W7kDCcdxgW3F9wZ60bzXROye3jp
cKdIchksf6BHBwpSg7bSoVLXbIkR0olu9V+ItwA6BMxHpIsea0Gb1+YPxZ+i
g3N2Jsc9tmb0/dAWiZ7zdFDa7B55wKsRXfD5HXn6Fh3smdyx9o21aG3R+V7n
u3Q4vqzyqvl1Naoezd2U+4gOISraG4/rVCJCzTVY/Dkd/hT6RJWJlKKle786
rrymg3f9zqp8AYwKArUEvf3o8E625I8CFKP9U6L+rA90yFOoe9VUk4PEwrO9
WkvpYD66ZrZlVwT6USVSu6aODh+vnowyrvZFQTPPuIhWOmzeF7xG5LwV4tU4
55Y2RAe/nfm1m/r9oPZJVtngBB1ydvEM0hLCwT1GmENklg4bKqu+vPCIhWWn
x0idg4QbOa/H9Cw+Qq9/fN+NVSRI1bMtufNlQlHS97923CS8jHPJkdHLBts2
NZUMPhJmbDTntbLzgS7N83mTJAnmR0Z+HUpAkOL0O0NSioTi9qJTH4owmHyr
SpCWJsErXTGcN/Ir9Ji/DFCWJ2E0qi1/nXYZ1Gb+tbh+jISux/n8R5wrwZ2j
x+TOKRJM5G8JXFKrgqOXCm/c1yDhaljRZjtWFRTMPtFwvERC7J9vocWmNZBw
iNwZdoeE6l3iP/dtqgdDj4YtsaYkZGdFjH7D9bClK00g9T4JXA1PElrufIMA
h3scRVYkLEjJn3aIaQDXL4O9P16Q8OrmH5dPrk1gcKw9QDSOhH6r5kj3whYQ
Dcj2kkgigVOfvULqXwu0D/u57kkjYexI1wXJo61wzl3r0ZEcErwF+2KJilY4
UlOloVdOQlTdSFh+ZRsIni/kCB0mgRwr+J6d1QH1elGPRHZQP7rai/UpJ3/A
uePWQj27GLB+pe/0L/sf8G3vmZJIGQb4/DhKzqT9gAa2GZ7tCgy4t/8N/xO+
bmhKOJkoe4wBkl3pShrd3dA2PdV77DYD4rhF2qWMe6HHU0XDPIIBOt0/Drbs
64epwq4dZYLTEBQ15yfGNQSxffLReaIzMKYXgsV+/4IIeQVhXd5ZOPOQ5OHS
pMEcrHCU/jsLv1asn2RvYsDwuumYs2xzcLFscl6qdBY2bnhVLTg9B9Zf+Mte
BTDB55CkpebcHJxzld12/gMTuAyQiBtrDgrMJLYJpzNhMYVpNsvBBKZBHE9G
FRP6j9/9r5WfCdvrJ+NJFhOS7c5o+x5kwsl2G8+y2/Og0s/Tw23PhFyPwd9p
+xcgd1XSS/WnTCjmaWBPUV0A2b3H9zo8Z4KehUVL0tkFEHdwcv79mgkdQ2ei
U40WYJXA1LbqUCZUaCksVwQvQNOpBmO3YiYMWbhoarGz4Iy5Ge8XzIR/JisO
m/KyoDRgVf5sOROUHvoMP9/EgtwBNS6jb0zQ0ph2Kz7IglDHjBT1PibIcYgt
nDRjAX+MxiWHQSZ4/Nm2wtyWBW+qxxYzR5mQ3W7fGvSSBc6C2zTF6Ux4EHu+
ZiqSBUzl4j9XZ5gg3N1C35TGgkeGVyN9mUwYlfrap/GZBeMesyerF5lwtzMy
6GklC/7v/gP+//7jfwDWOVQ+
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
F/7v/x3+///9fwAiwOc6
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
cxpN
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"t = 0.1\"", TraditionalForm], 
     PlotRange -> {{-1.4999999387755103`, 1.4999999387755103`}, {-35., 5.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"0.01`", "0.1`", "1"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.621597026386712*^9, 3.621597062381982*^9}, 
   3.6215970942005787`*^9, 3.6215971594386063`*^9, 3.6215972545653477`*^9, 
   3.621600075515428*^9, 3.672665625375456*^9, 3.672665684599485*^9, 
   3.6726684445340548`*^9, 3.672668503816567*^9, 3.672668573630797*^9, 
   3.672668611611923*^9, 3.672668678316331*^9, 3.67266872679389*^9, 
   3.672668789293173*^9, 3.672668893178192*^9, 3.672668931139357*^9, 
   3.672668962082142*^9, 3.6726690296725607`*^9, 3.6726691559015427`*^9, 
   3.672669350900877*^9, 3.672669383703483*^9, {3.67266943940836*^9, 
   3.672669457059222*^9}, 3.67266951456876*^9, 3.6726696054191236`*^9, 
   3.672669914130128*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
Z7+R9aoMNvzf/xD4//8h/wNEs2UI
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"t = 1\"", TraditionalForm], 
     PlotRange -> {{-1.4999999387755103`, 1.4999999387755103`}, {-35., 5.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"0.01`", "0.1`", "1"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.621597026386712*^9, 3.621597062381982*^9}, 
   3.6215970942005787`*^9, 3.6215971594386063`*^9, 3.6215972545653477`*^9, 
   3.621600075515428*^9, 3.672665625375456*^9, 3.672665684599485*^9, 
   3.6726684445340548`*^9, 3.672668503816567*^9, 3.672668573630797*^9, 
   3.672668611611923*^9, 3.672668678316331*^9, 3.67266872679389*^9, 
   3.672668789293173*^9, 3.672668893178192*^9, 3.672668931139357*^9, 
   3.672668962082142*^9, 3.6726690296725607`*^9, 3.6726691559015427`*^9, 
   3.672669350900877*^9, 3.672669383703483*^9, {3.67266943940836*^9, 
   3.672669457059222*^9}, 3.67266951456876*^9, 3.6726696054191236`*^9, 
   3.6726699313672867`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
Bf/7vgNd//u+839s2JLF
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
qw6B/v97CFL9/+8h/wco9ltV
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"t = 1.4\"", TraditionalForm], 
     PlotRange -> {{-1.4999999387755103`, 1.4999999387755103`}, {-35., 5.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"0.01`", "0.1`", "1"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.621597026386712*^9, 3.621597062381982*^9}, 
   3.6215970942005787`*^9, 3.6215971594386063`*^9, 3.6215972545653477`*^9, 
   3.621600075515428*^9, 3.672665625375456*^9, 3.672665684599485*^9, 
   3.6726684445340548`*^9, 3.672668503816567*^9, 3.672668573630797*^9, 
   3.672668611611923*^9, 3.672668678316331*^9, 3.67266872679389*^9, 
   3.672668789293173*^9, 3.672668893178192*^9, 3.672668931139357*^9, 
   3.672668962082142*^9, 3.6726690296725607`*^9, 3.6726691559015427`*^9, 
   3.672669350900877*^9, 3.672669383703483*^9, {3.67266943940836*^9, 
   3.672669457059222*^9}, 3.67266951456876*^9, 3.6726696054191236`*^9, 
   3.672669948952345*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DOS:", "Subsection",
 CellChangeTimes->{{3.620986570611333*^9, 3.6209865721386557`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PlotDOSComparision", "[", 
    RowBox[{"a_", ",", "b_", ",", "\[Lambda]_", ",", " ", "t_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "gYYfunction", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Yang", "-", "Yang"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"gYYfunction", "=", 
       RowBox[{"gYY", "[", 
        RowBox[{
        "m", ",", " ", "t", ",", " ", "\[Lambda]", ",", " ", "a", ",", "b", 
         ",", "n", ",", 
         RowBox[{"N", "[", 
          RowBox[{"1", "/", "n"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "Plot", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"gYYfunction", "[", "x", "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "a", ",", "b"}], "}"}], ",", 
        RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", "\"\<YY\>\"", "}"}]}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotDOSComparision", "[", 
  RowBox[{
   RowBox[{"-", "1.5"}], ",", "1.5", ",", "0.01", ",", "0.01"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6209865968192797`*^9, 3.6209865970418787`*^9}, 
   3.6209867574291573`*^9, {3.620988649032393*^9, 3.620988722930464*^9}, {
   3.620988765804948*^9, 3.620988771587328*^9}, 3.6209889154575*^9, 
   3.6210678254313307`*^9, 3.621075837426573*^9, 3.6210764565278473`*^9, {
   3.6211433225838757`*^9, 3.621143373324272*^9}, 3.621143418854364*^9, 
   3.621143621176941*^9, 3.621143722067472*^9, {3.621143761984393*^9, 
   3.621143762115803*^9}, {3.621143855870043*^9, 3.62114389705157*^9}, {
   3.621143937429698*^9, 3.621143938990341*^9}, 3.6211578080300903`*^9, {
   3.6211583094183483`*^9, 3.6211583155728083`*^9}, 3.621158467921686*^9, 
   3.621158698473062*^9, {3.621518059278186*^9, 3.621518061196341*^9}, 
   3.621589447330192*^9, {3.6215895859343224`*^9, 3.621589666430283*^9}, {
   3.621589698889103*^9, 3.621589699310009*^9}, {3.621590016446394*^9, 
   3.6215900447377863`*^9}, {3.621590360239108*^9, 3.621590364876809*^9}, {
   3.621590396313521*^9, 3.62159041297901*^9}, 3.621590921391118*^9, 
   3.621591861725319*^9, 3.621592237281082*^9, {3.6215972798130007`*^9, 
   3.6215972853448687`*^9}, {3.621600110705056*^9, 3.621600113535022*^9}, 
   3.672666369298891*^9, {3.6726664000773573`*^9, 3.672666418791772*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJw12nk8VN//OHDJXolQlF2WwoytEjNzTrTJlhaJkigqEVHWCFEhW5Gd7En2
fTuybxGyZS37NnNJRujtez+Px+/3z8zj+Xide5Z7zz3ndR6PK2b+6NJdRgYG
Bhn853//FjkhtO1tOmoek5aPFPysUBMsJKW+RUfLquLMAruLFATtMm88Xaej
TT1unlDtCoU+hfqWRYyOKDG8TEPZjQrn8+nJgz/p6OtTi0Hj4Z8KhCJTo4I6
Oup1KOEr99mvuF4u98XyJR0lF9Vc4u17rhjY2Bz2lZOOqrMtM+7xGSiJHvxp
Z8C+hj4rcEZJ/OBQsSNdNjjC9welsgaXRFvHHTNLXzvbJrmKLqpOcjVHiJ6o
1HN1khD/jZ4V1xiPttao9tRfy+wkrqBpGdGv4X0X1K468fErHVlGL+uFT063
7idpKIu1HpVcRlSWI0zxh0VJBJqcu4TYMlKYlLq98ECKxGZ1epxXYBmN1BZ0
//h7jFRu6JBBZ1tGA0NIYFLvKkn4eJdq1SyGrgjXxg9ah5M4VobniyYxRHA1
UhFmSCDRP8/GZo9jyCo5qO+eYypp8v6qXvowhpRPWf2+Ss4hfZNk2JE4gKHa
BQkhzbFiUuXPXQWR3zFEmijq3EpDpI9xB+6GfsOQaLIjHyehiRRxXeKAfzuG
NBz5JvqVu0jefMQW72YM2TQ+8BFr6SfZdqm5udVjKGs05Gfiy58kkzdn5R1r
MKQ2Kt322HaedF7r0tjDSgw1GsyWvSSvkFSYTUPvlmIo9dTkDM++TZLol/ua
poUYKuPsfP4vi4m859mTP4a5GDK8WnGgJXo3eUPVK10/C0PtWxJ0OXM+8vRq
4PXzGRhaZpERDXstSu7Ojdx1KgXvX9rw49lNKTJ6mFJ1MhFDL432P/hooEjO
ksl9pBSLj/dUdLy6nDo5crJCTDYSQ8f38I+urWuQXyQ29Ui8w9BuwcKWu306
ZPsbPb6CIRiKT+prcto2JJvyj53gC8Tbk/P6mSpuRr7wfX5uzysMWUio7y1H
98jHQ9ZiWF7g18dCYUYRR7KEDqPetieGblhWr0JTdzIXGyfDuhuG1rod16bX
fMlbdQL5mBOGRH6UnL5/Jow85yl5Z84BQ9827H5LjkWR+9QV9/96hKEXZYCs
qJZCrqWTmn9YY+jPF5+abZ08ck7BedceKwxZiljePfmulBz76IpcuwWGSq//
qP50t478StZstP4WhgpWBnpOyHeRn8xYh1SZYEhnfa/iNdsBsnmyk0bxNbw+
pzMHmG0nyHq3fFazL2PIXq97X/t/y2T1Q8Fp6foYYrhzzFDa5y9Zpj/aKFEb
Q0l6n9wlTJgovG/TOKLOYShkcL1QnIOXwqCfXxmqiSHnBHnHSU5ByhJHta0/
wFDzCZMr9SpSlB+NLaI+6nh9dxf4O2ZOUBq9e7vdTmCo5tlR420FSMmn/Hzh
qIwhrlxwvTH5PCVhY/G4DRFv74TellyNKSWweH32rix+PUYXvi5qQXF+zBRj
Ko0hVU2tWDWB+5TEcIG4WAkM0UMO9YRU+FCaSgkJP0QwdFHmYIBVcgCFOqT5
gV8QQ8+vhRz2gyaU/dtGyYb8GFqfzfFTZEimUMRtU9/xYijdgME9Z38d5e4Z
n/RuLgzJXEn4sqOouTrwXuRHrj34+8Du6KjpnF9dGPD5kx47hmZ+OHYyKS5R
hrNrPwcy4/Nz0pTPdi8P2tndn9O6A0ORSQXnWXyF0dX5QQvuLRpi6F2VY7nI
AlIUmO69WaWh54d+Gfm0GqHfTwkP2ZdoiPNbpQJTvx3SqDKy852iIZakVwFG
RhYodKeP445RGhJd3h87kWWOxrU+Oz/ro6HTywtyO/XiETGk3/1vBw2ts6ln
HLvjjTz6dng9aaKhxu0PrVUlJeCroJzvMqKhZpPYwvRnQ0DQwvC1TSkNbYhS
/PPNF4D1x+dv5nJpqPqP4d36mVVQTssMvfuRhoqqYx0qsQ3Afrw3/OcHGtpX
uSwyX7cNjNy3o25G4+MZ3a2bO7MDptceiR8Mo6El45EinQc74RrblaSrATT0
JputIvwmEzyj75HW5UND/zLfHw7fzQzfhWdk6rrTEKshe397DDOcGOrObnGk
oeHX5gXtl1igkvi//DM2NMRb7XzIeycr7Mw2qCCb0lBBVcvk36tsUPiPGyoz
pKFPu9/X7PzLBh+qp9Ud06ch84aSvd3v2SFH80abPKQhkRue+S4tHPDsz+Rh
IXEaGli+44Qx7oHh0h3jUQdpKE+PxJD/eg+ctFmf5OOhISMlK82OPZzQe0Nn
aQ8TDSm7K2facu6F1Txr//5NUVFR7OHfz1y54B5jUUbXUSpSuJBT+L2QC95I
vMCy1kdFby+lcGpQueCGXAIntYmKDgwUnn1jyg2Pnz0vMvqRithm9xZ1HNsH
s52jYbUNFQk8Tc8equeB4zUxa+/vUhGp44iv7DoP3Mcel2V/k4rInE3Wv47y
QqeoBH5JXbw+J8cvUUG8EJanYAFyVJTxzcYxVZ8P9mxmJ15fWEKKCZeGdCr2
w3WPOoY/95bQGyVT55ULAvBoU31xh9kS4hTXttSyF4A39jY+zDBaQsynn/IY
vxeAXxKaB0zOL6HB55NKn38JQP+ar7m10kvIO6/3G+npQSjEOGAWMr2IYs/R
LmGhh6CG72KN7J1FdHWU07zugxCcj2E4EHJjEbH1cuYIISEYls9rs3plEXWr
6ppdGhaCE2Mkgaozi8j6U2OHzn5h+ELtjb2e9CLKThsPDX0lDBto8uL28wtI
X4FDscBSBJ43fuRTbLeAJnMt4KivKNQjrpw59WwetTwupf/cKQ7Vv+Ustj2Z
R3+O73g6xikOZext3hrazqP/ruTt6hEQhzsLZsetb82jk7NqzbFEcVh6fMwt
4tQ8aopxdK00FodilPa8BeZ5NF4ulaGeIw5XddKEIoLmkI+1e1uqgQSMeWD8
Zz5hFrXv2s/I5HkYPtxD0+15P4vy3t/Rqnx1GJJyfdIqgmeRwx+twodhh+Ho
n6xrgZ6zSJCrWaw49TAU9douk781i+z1HUIW2w7DlPcpHnbCs+jIMQW25f2S
8HM9lXUtdgYNz2ldiEuXhEjY5+CO6Gn0hvlph1mRFDS2u3UaFU+i3P7leZqd
DGxT25qYy/yFBuqtO6fYjkKPiM3PGRnjyIJaJnHhhiw0ELn5VzhsBPXKF8Of
9+Xgr/Lnb0e8RtC9lz/5D9jKwceGKfKx9iNI79Gpba3HcjDszcJtAYMRZNYw
s5nmKge7N11aebhGkGDquUFygBy8NBARwxY0jCSdAjTGP+EO/UZeeT2E6h8W
PmRYkIOXd572bvAaRGl2dpJUM3nYof7mRtTjQXSdMCVy7I48vODYd9zGYhDl
3k5odrGShxpT9xZ4zwyi+9PsMls28lCp6c2VO2yDaIenocqUqzzkCuiX2hk8
gByOMchrvZOH7fus22BsP7oncrTuZoM8PC0exltZ3IvABfb/xkQJ0M/09SXt
tF7kOZVC6pYgwJbo5yE/wnvRquC5P1+kCFCP59Huv4696J/B+/4oOQI0YtJh
Oq7cixp8WJ/IqhKg9TTzak7Od/Q4cbWwT48AwzJdepIzehCNwnXkkisBfp+2
41aO7EEG1XvZ/rgT4AGJe/q1L3uQ/7acU7gnAcbGGLaNW/agofxTbJ0vCDAt
ULlOSLIHMd11YZUMJsBy26X89x+6kX6vKtPNZAL8qXQ7LCC6CwW5qojsaCXA
bJ9P9lb+Xag7/oG+TjsBun7/c1HTtQsJ3L2tGt5BgDxP/fduXu9CuxOSjov2
EOCZsoLABwJdqNUmYOXgMAF+BCwvtSK/oasD4v3JSwT4K9KQzinXiahVrZks
e4nQTW2hqHFXJ9oleXuSnZsIeYc9HT0WOtCvwB9THDxEeFbk4/JSZgc6flxe
g+UAEWambi60H+lAexwMH/4SJsLH+Ynj/tJfURZn7KQCgQh3ts+3sEi0Ifk4
z+NHtInQMb2VbY6pDV0nZtg06xDhpHfmubbpVsSwz+HLXT0ibDj5oCE4sxVt
mYjXRBsQ4cv0uRp+pVbEKbMlRr1GhLt8ZkuOnmpB7yzTS9TuECGP2nSq3q0m
FDjLxWfjRoQv+BonFU41odhCLutv7kS4iqVK8Eg0oZVvN6YVPYiwN/3uh/7p
RnRSbUCX9pwI3/NNxZrZNqIsFqmZy35EeGh54u3jZw2I79wZ5/oQIpTI+OkV
EVOHDsXlZJ5OIULRAKFXNNc69Ffs8X++qUQobHs96LxxHbpmnyTXkEaEB1W6
ojf46xB3mYEA+SMR7qupKTCNqEU5Dv/UeLKJcMdAwpRU6BdUN3+xz6iECP8r
H1rwtPuCyLlxVKdSItyKO7AyoP8Fxcccn3pXRoTrFsH/+XN+QTfdVG2bK4gQ
o3kcoAXUID36pz98NUSI9laG2e5BiHI5hkO7mQjLe5UTRNurUb30sNj5FiIs
jvn0qdu/Gv041n1Qs5UIs6Vj6o+zVaNsz5R8pXYijAeua/8xViH6pIHneicR
uj9SNQ5eL0cFzvXFwv1EqNpZKJY7UYwOh9B7+yaIcIKtjlCSVow6m9nILyaJ
MEijS736fjES7Rf+RpzC40VLV9tpRWjp4XdXr2k8HivlP7tZiHbEv5zinMPj
9yNXRHkL0KyHqUz3Eh5PTtuW7s9HvtE7b5pT8fZGCncTo/MRe7g5wnAHXeyS
Iovmozi+/D1sGBGePMFhcl0uD6n1E3tEV4hQiH3dT+J1Nupv8ubb/IPPP3fe
D4p7s5HlzkQF2zUibKYpVIDwz2i1ZNB1DPfjvvs0kw9Z6LrWSmwlHY8nD117
V5aJtoIbBW7/xZ/ngXX7JJCJsh4M5zTgdvDnDcxt+Igsp5OeyGzgcXvdmvau
DHQn2jtkFrcjBckwz6ehiXYj5stbRNiaN6TBY5eG0m3KDn7ELSK5fkNsLRW1
mZ03+/e/+C7FUDJjKhJtknNP/IfHB5P+PjmYjPr2Ba9/+w+vTwfxvEhMQnfW
Z0P4t/HyaEg+TCoJpeqMXDfF7ZjGa56t9AG9Va19Non73czu8K/h8UhGwfil
DYMCHN/vNFqQFof6jh57/Rq37Nmf0tElsWj3uddZKbhrU4rKLQej0Xx49rUB
3JzfRZh056PQfrVXYxhu453+usqbkehO9sIrth0KcPm26fi24HuUyH8bHsNN
Cm0+Mi0fgTQHXPQu4H5Vo+TQTglHLA9kPUxxi4qwskSZvUX+dZYaL3A/1LPX
97QPQ54qa33huEueDUXe9Q5Fwb9k36Thjiu9de3O+WB0QTfUtAG3ygGVeYUH
b5BwcKNLD+72J2zP/gUEoCTpT8XjuC2+D+9t/fwa1W5BviXcG0p5SRGdL1Hs
K//wddxhob7HLJZ90Zuh1yd2MirAI9j1ZiLPC9TPDTd3467RI5hsqXgj8mj2
OB9uo8+M1GbD50jz3MCMEO7RA9k7ZJfdkRlHFZck7j29htL1Ki7omrWpiSxu
Uti2zk3nJ8g0prpJAfcD/YzHaxX26NH7kavHcCsKJCmIbFujpsYK5pO4g97+
djPwu4O+8hn3q+PuO+QfxHrIGJ2YLG0l4xYVM74wcOksGlIYGKPgzur1FHM9
RQC3PUr3A9ybzG8+t5ZdAg63jB/9L57I9mRXQa8ZeDdeOUfCrRkkUfNc7x44
UzXmq4Z7mqfbUa/pEUAn6zRP4K7XqeHlTHQAD9UtJZRxRwQfoDnecAKHxZsP
E3Bbddu2DPG7gVD+uXMyuFX5GpM1ej3AenZToBhu5ixO9P28FzAG5r8FcNvq
qsmxSfsA7/oSN+7/jYd6N0qd2Rc82miUZMMNQkJZHk34gZTxN8v/8OeRoVjl
kPTlFThJ5Rhbwe3iyKvH7hEIZmLERH7g/sUHK0g3ggDhVLF9O+7UoWO8qkIh
gNnr71QVbs5nt72sN0PBobfPleNx1+rST/jOhwHeSrT7De6nwm+o8YNvga1I
Mqsb7jFUatJdEg56Z86bX8H9LkRv32JaBHANY64FuM/fnmxmjngPkvZe1zyK
O5eR6/hJxyhgfrgkcwuf/95nrLgSFeJAEc/Erve42wcFA3eqxIPGrx/2u+Dm
s+1mtTqRAC5VuBwyxn2lLX57f0IiEN424RHAPf2bnT6SmgSqlE2e8uHvJ0f1
ZGGwdDII4N6UbcHfb+Ir9PjUx2RQtHar1xW3s+ATakpWCuCspewcwNcDjjPj
U9YFacBP3b/FBV8vCHsrkoWOpQNFo8hDQrgvD4bf7ixOB6IOs2bVm0QYa6M9
olSeAVL37GjYwNcjYkTx9781mUC28z/MGF+/rswE1r3syAacn/42lOLro3Oe
ldfJizlgX2G8hjruODcNsNCVA87uIuRVrBLhb1b3m+kPcoFDUaZF8W8iJMUq
DnLY5gFvnwuH3i4TYWd97LcuxwKgoK5RNbdIhL+O+OdkFhUA60xuHW3cq0FO
QT5rBeDzlT1tmQtEyH/9ks4x50Jgk8AZZTFPhOZLrM2RbkWgNTjTvnIGL8/n
gG55l4ATLgV0jl9EaMTaGjdRXQL+rvBeNfpJhBXrou5WmyXAxwubTB4nQu+h
DtVHjqXAxiYi5tgYEe79cDTfw7IMLy97W3OYCI/K/UqJu1ABWGXaFNj68P1D
6KSP2MsKwLcQmqbaS4TLnCG3U+sqQEVvpY7VdyIsXSYLfyZVgsLS7COomwjP
lES9ryRUgaNM7OLX8f3QTMPAf2gfAtfiFBaO4ftrvXLGvVv6CLBmJV3VaiJC
acntsxMBCHAZclONG4mQ7tPn9YSxBvDUwgzneiKstnxBeeZWAzRDATke36+1
5cZLAm2+AMP3Q3Wh+H5vWfI+85NBHYAr8owC6UToL2PV/fRxHZD2zGYcxPOL
7KjjG6fe1oHgP7MDEXj+QXfr1Rr4XgfS432ZdycR4SvIM8dkVA9y5yauDccS
4aeWIGlT0wbwI9gwhTcMzxeGfFO4rJvA6Zctgz9d8XxO92r7UEATCDEqYbnh
gu+31YdX07KawDZhL8N3JyL0SqzTJFObANEw37DKEc9f7u6YuG/fDC5xhvo/
sSVCFaq7WJ1TC+B2AV/cbhOhC4Nj/JMXbSDeQnxl+Aze//NxPukpbaCfwcaO
/zQRRoc03husbwMMwr71Bhp4fiIqoExmbgdMlIjFKgoRbsDqJia/dkBmLlZ0
P4HnH15sy29ffgW75FJOhsgQoQdjnGa+fyeg8HTY8bAToQajhaNTcxf4ev8G
v20dAZqyd0u59XcB3wu6XzW/EKAb16lBj+ku4GBr//IAIsBCYRGKH1M3sBKI
YS8rJ0BJ9SHWcNgNjiW6n5zMI0A2x8sx+aXd4OrW2NSPBALsmNKsXcroAX9v
RZw/i+fz11sOc9153QvWL+qIbcjg+Xf7lGlWVC+wuNX4mgc/LzB9S/u8+rEX
CD9XcDmKnydy+2S0fVt7QdPM2txFIQJkmZTzS9vVB7Jcqv/z5Mb785/K1uyb
PhDn56dn+VcecqqcmbUJ6wdjkheE9ZrkYX383RqnmEFg8cd82cREHhKYd3Rm
Zg6CxHRdpT1G8jDSOnZkpGwQnLzmIFh5RR4+VO3Z0BwYBHF1mnP79OQhbzc8
xsX3AzzdSdZLgfLQglkwMyPoB1AV/R14VVIeMj7sfjvoNQSuPWWaWliUg/Ak
sFK/NwKwl7Cl0FEOxg58vLEQMg7uQE7ZtAeysDbmd7BOxC/wuOGrStSBo9Du
y+tqZpdJMNbs2JSeIgPP295yuvRiGjx50Zo62ioF/daIHH8CpkHzy6U/BnVS
sM6DIe7922nguvj6aE2FFKQEf6gdTpoGcUbScm+ypKBK7sQeqy/TYKZnGL8v
UlB0xSrF7b9poGgZuDdZXwquP7HrSnGeAYl3P5isd0jCj8+8ZOkPZ8GlkVF6
YcVhmOSWYePgOAsKSlPSR/IPw2iXzhya2yyYebrVuP3xMPR/IqQy6z8L4taf
KClE4udxmzLSYMYsCAJH6qDjYahwc1m3YnIW5B1oaeaXPQxLSbftPG/Mgfda
ply33krAXLVX+ZsWc0D4xnep5NcS8KNqzqqT9RxY+RdqNeYpAaNV/jnbuc4B
3sRmVfhQArrLRXndjpwD6i3M1R9OS0Ao2BWm+X0OHBnbYB38LQ6bN2ERq848
WOy7+qVIWxyO0EPOSF2ZB8+CeYf/AnG48nu89/SNedDFfCFKSUUcCi4+X/N6
OA8866UTvQTFof1wzYmtwHnw63i2wdtFMXiwCpZjX+fBGLdnxCN/MfjQA6JB
/QXAaCS3U6tSFHq5huivX1sA1qz/HaBmi8KIp+Nj+80WgL2WksKLD6KwxvY5
wxW7BRD0+363t58o5LtVc6ojZAEE2PZGNuiLwmoA62u7FoBYKqbmUi0CuXfA
lk+XF0HyqVfnST+FYC7hWRkwWQSSFf2RsvVC8OKN8o895oug3NH58580IRhU
ouK/ab8ILn7LseR/KAR32x7R1g5ZBCGLE/P+q4KQZWjf1/n2RbCD27wo798h
uFE49e3I2SVQHbH+r2pRAEb9Ev9SpbsE/FU7ryy0CEBVLrM8g6tL4FjE36uj
aQLQyfpHqMudJVB2cb8Jt5kAXBXrvNTivQSs+sW1gjr5ITWo9Ps9tATcD0ac
HvxwAP66FzCQrkoFRtXWRybY+GD8u+X9o5AK9rd1Op4Z4IXGNdeu8mpRQcTf
ZIJYOi/sPnC4+/l1KhCkC3Mqa/LC2sbKtuuuVDDGcVNK05EHeqyIc4R4U8HC
+7uXaRQeqCb8+nyjPxWc/uygu8TGA/OfXG1QiqECKu2jWH30PvjhMLV6VyUV
nNBUeLa3iBveuHjl36l6KiglCxc+c+GG/O7l6s7tVCAheiRqk8QNQ3r8SieH
qWD3DUIswxcu+NxbJL/qHxVE36arP3LaC0nZvthvZhq40DAt9IbKCdcHFwhH
OWkgaYTbadqcE9opln6KEKYBp7oFtkCNPdBs/GLqI0AD76I2rikMcEDB3SUT
qedoIPWFwb0Xyhxw4ISQ+LA+DUzcdFGA/uzwYvBc/HkzGlgq5JqalWGDuyv0
Rzzu0YBEIsY7a8cKm6eLDhXZ0QAtwYzoXMACIcU7UsyLBipGyl9lQWa4dX+2
79prvL2NMIJ2KBMsDdfjCwqlgXa/i6qu0Tuh45fCy/VRNFDydXnZZjcjVFg6
GLbxgQbC7+mnihRtg0V+r28KmTQQaJdOkLXYABmnZzit8mnAEjzQOeP2G9yx
09WNK6eB1gmWdpnTM0AktiCgp5YGhoxYH2sd6gY/mgRa2dtogIM9NzbpXiKI
+O3JBntoYOWHdom1Shy6JDJ99ukQDRzVTjDqsghCnNo6vlkTNMBlU+clsFsf
tT7Nr/u1QANFtmNHjhPskV8SP6PAKg2Qp2IWCEE3kEaHB9TfogG319UGF+/t
ANvuj5EGIwYkk5fWGa1F0EhY6uhNFgxYsuSZvwpkQxUZA/+cOTAgQDUYf+04
Romq3iX0jhMD/i/Tq0u2W6qdvlNIOfswIEN3e9ellll9dd7epHU/Bo7GOmlv
e+dTlBlSXacOYiAl4nqY8x1XCvf+gSgGEQw4lQqk19Y/p9Bkd5UdksCAy8Ea
ptYaP0qm+1yOhDQGdnunfCe3P6BYfm1Kk5XFwOeY+R9pfuYUMeG0OGUiBtpp
p01XZc0ow7Yv3qkrY0C781u221ctSiQyD9A8gYGZWtOUeBlIucx1yltbHQMv
BJ6ZmC+qUjhvi7hcBvj4qieFlzmlKa15/x6ZaGKgNHS4qf6iIMWPcdjS4hwG
rnQq30L1vJRTl8tvWmtjgKW14ZMsKzNlKznyioM+BnrTdL33jf4ll64+1Xa7
jIFIyW/ldqErZMczVzV8rmHgh7nkqePbE2RihPLJABMMyDXksdd3DZDnp7kV
3t7CwPM6V6/PH7vIaScwqRgLvHzdZfXxmTqy+asOoWQrDDDsqorX2iolCw1m
8X6yxvD9q+5oQVUeeeBIwK6CRxi4H0jwMC1KIb9zvc9Y4YABdsPBrVs60eSL
bef+1jphQIMuZALywsi7BKWwVjcMRKw7b7Ha+5EbHzLNdHvi9y9IwHm7253s
XfVr5IcPBgrZs4IVAxzJFM4v33+9xIAwJcpvnnyf/Nc0oW0+AANDLzpsPM3N
yIU5z2pXgjEQ3nbFKcDuGtmO4UbZxlsM8GdoS0Xf1CXLGajlMkZiwG+Gwc0b
apJnPvCnc8RigOlVrl9Jmjo5aWUtbl8iBqJ8r8w8jlUkm2r2vjuYgoGeD/5P
13WlyQffFQSIZ2Ag0V8jgbFDlNw7Gep9NAufX7cTms6V8JFDjtm5KOXi19fH
Zvzb2E3W8dOzUyvEQEPPqan3m0xktn45K41SDOSnn2+5+WSTVCe9y/RCJQao
lVbeXE4rJA/nuSuXajAQWHP7c0nWPEmtpUnbuB4DKi+KO7/X/iStCaRpmDdj
QFDpAFDZO0DKe/Di5IN2fD4KCi12G3eRHlaYKzz+hgEjYqQO69MmkszuU9Ku
3zFw+ssTprJ/iDRxQ0TYewAD6yeST33gKiHFf/7H6z+MAXH2UJ6LETkk4/+G
doWNY6AJU3w4lJlK4tMvZ4yexMCJXZmZuiCB9C0h8u+HWbx/xYERqcnhpEDs
KfZxEQMijtxcHT/ekBjDlEfLVjGgU6KQJijmQcK+Z5UNMi2Dji+2oCvzJqnd
OMFOQHIZPGzx0blNFiXpnHY8MCyzDE6zKg0cenyA9FVeqzpebhkE3Kc9+G7A
Tepg+L3rsMoy2C86MkTLYyR9SzubTtBcBsVbwffv75tW/76yNKJ5exk8Fvyk
BV1z1Yf9Sdq2ccvAIc/u3LzSafWl8kHJOr4VAHeKvylefKKWPKqcWHzwN8DM
Dh8tC2xXjVNW4TfkXAW9DQpA+tSZE2tgp5vsv1UQz7nAWY3VHZvcu5J0gWEN
XNwRtnDOT0BlP/fLZr6VNfDipf3uIrK3UvAJCXvdtTXw65tHIpuhqxKbKRLw
3VgDo83yloxkB6XNTPqDVUY6cDpe9lU1/I7S+Ol7e3p46GDYXzGk5eU5pY/O
WpdCjtEBE5UazHmJU4k0vmuYw4UO7r3iOqLBHqVYxJLxQuMZHRTUjfw9tBaq
SJA/Le/qRQfC5R2NUrz+imKu7h5zr+nA8lHRx9JUN0UW3iXR5mg6kAh4G+9O
NVX8dq7jrm8lHTQGTR1pF5dQ1LJ9wFlVQwcpCUorC1uHFGvfsZSs1tNBg5X6
KxNTXsWinxS2O1/pQCt82CLOllkx2i0nU2OUDtx/LOxvz5pR4EnSvuz6iw4c
+ypvirH8VAhsntnMm6YDXzG9ZA+OQQUPPlFdMRodPHhq0N620KJAV6/8Y/Sb
DtYT2IK8D9Yp2JkbxYfQ6YAzSL86eaFSYf7V6tnmTTogtinbzDUUKfy/703A
///e5P8A+av7YA==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{-1.5, 1.5}, {-0.029594468704986512`, 
      16.008775157968902`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"YY\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.621597382473852*^9, 3.621600217021183*^9, 
  3.672666430788467*^9, 3.6726665507123327`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Derviative of DOS by Chemical potential:", "Subsection",
 CellChangeTimes->{{3.621067888365283*^9, 3.6210679195599117`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DmgYY", "[", 
    RowBox[{
    "\[Mu]_", ",", "t_", ",", "\[Lambda]_", ",", "a_", ",", "b_", ",", "n_", 
     ",", "precision_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eYYDiscrete", ",", "eYYfunction", ",", "k", ",", "g", ",", 
       "gYYfunction"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"eYYDiscrete", "=", 
       RowBox[{"eYY", "[", 
        RowBox[{
        "\[Mu]", ",", " ", "t", ",", " ", "\[Lambda]", ",", " ", "a", ",", 
         "b", ",", "n", ",", "precision"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eYYfunction", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "a", ",", "b", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"b", "-", "a"}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"n", "-", "1"}], ")"}]}]}], "}"}]}], "]"}], ",", 
           "eYYDiscrete"}], "}"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gYYfunction", "=", 
       RowBox[{"gYY", "[", 
        RowBox[{
        "\[Mu]", ",", " ", "t", ",", " ", "\[Lambda]", ",", " ", "a", ",", 
         "b", ",", "n", ",", "precision"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"g", "[", "x_", "]"}], ":=", 
       RowBox[{"2", "*", "Pi", "*", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"eYYfunction", "[", "x", "]"}], "/", "t"}], "]"}], "/", 
         "t"}], "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"gYYfunction", "[", "x", "]"}], ")"}], "^", "2"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"k", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"eYYfunction", "[", "x", "]"}], "/", "t"}], "]"}]}], 
          ")"}]}], "*", 
        RowBox[{"\[Lambda]", "/", 
         RowBox[{"(", 
          RowBox[{"Pi", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Lambda]", "^", "2"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"x", "-", "y"}], ")"}], "^", "2"}]}], ")"}]}], 
          ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Fredholm2ndKind", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "k", ",", "g"}], "}"}], ",", "n"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotDmgYY", "[", 
    RowBox[{"a_", ",", "b_", ",", "\[Lambda]_", ",", " ", "t_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "DmgYYfunction", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"DmgYYfunction", "=", 
       RowBox[{"DmgYY", "[", 
        RowBox[{
        "m", ",", " ", "t", ",", " ", "\[Lambda]", ",", " ", "a", ",", "b", 
         ",", "n", ",", 
         RowBox[{"N", "[", 
          RowBox[{"1", "/", "n"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "Plot", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"DmgYYfunction", "[", "x", "]"}], ",", 
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"2", "*", "Pi", "*", "\[Lambda]", "*", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "-", 
               RowBox[{"x", "^", "2"}]}], "]"}]}], ")"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "a", ",", "b"}], "}"}], ",", 
        RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotDmgYY", "[", 
  RowBox[{
   RowBox[{"-", "1.5"}], ",", "1.5", ",", "0.01", ",", "0.1"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.621068065346779*^9, 3.621068065582254*^9}, {
   3.6210681560485077`*^9, 3.621068172932459*^9}, {3.6210716896055927`*^9, 
   3.621071691437278*^9}, {3.6210741536272707`*^9, 3.621074168270548*^9}, {
   3.621074251474708*^9, 3.6210742811972322`*^9}, {3.6210743121465397`*^9, 
   3.621074486474616*^9}, {3.621074547267124*^9, 3.621074595274459*^9}, {
   3.621074626433473*^9, 3.621074626636113*^9}, {3.621074730334577*^9, 
   3.621074736686407*^9}, {3.621076912229775*^9, 3.621076949945238*^9}, 
   3.621157803995322*^9, {3.6211585344434853`*^9, 3.621158553647801*^9}, 
   3.621518473555676*^9, 3.621590808615818*^9, {3.6215908467959833`*^9, 
   3.621590879985725*^9}, {3.621590911542156*^9, 3.621590928570574*^9}, {
   3.621591067130579*^9, 3.621591069049865*^9}, {3.621591169641534*^9, 
   3.621591170609221*^9}, {3.621591686436428*^9, 3.621591687969551*^9}, {
   3.621591895370713*^9, 3.621591903076543*^9}, {3.621591975857441*^9, 
   3.621591979956448*^9}, {3.621592010617792*^9, 3.621592031051239*^9}, 
   3.6215921100846148`*^9, 3.62159216245282*^9, 3.621592390891191*^9, {
   3.621592524456805*^9, 3.621592526985701*^9}, 3.6216002358097057`*^9, {
   3.621600668123971*^9, 3.621600668221887*^9}, 3.621601549105481*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
Fmufl587TfgfEd0psQ==
     "]], LineBox[CompressedData["
1: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
     "]], 
    LineBox[CompressedData["
1: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
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  ImageSize->{748.41796875, Automatic},
  Method->{},
  PlotRange->{{-1.5, 1.5}, {0., 63.829295304461766`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.621600293266038*^9, 3.621600910827743*^9, 
  3.621601656208434*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"\"\<t = \>\"", " ", "<>", 
   RowBox[{"ToString", "[", "1.", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.67266920925259*^9, 3.672669243579649*^9}, {
  3.67266929043055*^9, 3.67266930951608*^9}}],

Cell[BoxData["\<\"t = 1.\"\>"], "Output",
 CellChangeTimes->{{3.6726692148539867`*^9, 3.6726692440349407`*^9}, {
  3.672669291525957*^9, 3.6726693149676037`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 706},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 9, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 175, 2, 92, "Title"],
Cell[757, 26, 484, 9, 30, "Text"],
Cell[CellGroupData[{
Cell[1266, 39, 336, 4, 64, "Section"],
Cell[1605, 45, 1683, 36, 157, "Text"],
Cell[3291, 83, 1634, 33, 163, "Text"],
Cell[4928, 118, 10442, 251, 675, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15407, 374, 152, 2, 64, "Section"],
Cell[15562, 378, 357, 11, 46, "Input"],
Cell[15922, 391, 300, 6, 30, "Text"],
Cell[16225, 399, 11648, 246, 454, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27910, 650, 144, 2, 64, "Section"],
Cell[CellGroupData[{
Cell[28079, 656, 97, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[28201, 661, 7785, 163, 250, "Input"],
Cell[35989, 826, 33905, 620, 380, "Output"],
Cell[69897, 1448, 34469, 628, 380, "Output"],
Cell[104369, 2078, 34250, 625, 414, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[138668, 2709, 94, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[138787, 2714, 2528, 50, 114, "Input"],
Cell[141318, 2766, 18539, 338, 243, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[159906, 3110, 130, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[160061, 3115, 5407, 132, 233, "Input"],
Cell[165471, 3249, 36124, 603, 485, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201632, 3857, 233, 5, 28, "Input"],
Cell[201868, 3864, 162, 2, 28, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
